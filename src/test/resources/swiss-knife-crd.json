{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T14:03:36Z",
                "generation": 1,
                "name": "backendconfigs.cloud.google.com",
                "resourceVersion": "1027",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/backendconfigs.cloud.google.com",
                "uid": "b7ce7a59-676b-47db-99da-f249b872f3ef"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "cloud.google.com",
                "names": {
                    "kind": "BackendConfig",
                    "listKind": "BackendConfigList",
                    "plural": "backendconfigs",
                    "shortNames": [
                        "bc"
                    ],
                    "singular": "backendconfig"
                },
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "description": "BackendConfigSpec is the spec for a BackendConfig resource",
                                        "properties": {
                                            "cdn": {
                                                "description": "CDNConfig contains configuration for CDN-enabled backends.",
                                                "properties": {
                                                    "cachePolicy": {
                                                        "description": "CacheKeyPolicy contains configuration for how requests to a CDN-enabled backend are cached.",
                                                        "properties": {
                                                            "includeHost": {
                                                                "description": "If true, requests to different hosts will be cached separately.",
                                                                "type": "boolean"
                                                            },
                                                            "includeProtocol": {
                                                                "description": "If true, http and https requests will be cached separately.",
                                                                "type": "boolean"
                                                            },
                                                            "includeQueryString": {
                                                                "description": "If true, query string parameters are included in the cache key according to QueryStringBlacklist and QueryStringWhitelist. If neither is set, the entire query string is included and if false the entire query string is excluded.",
                                                                "type": "boolean"
                                                            },
                                                            "queryStringBlacklist": {
                                                                "description": "Names of query strint parameters to exclude from cache keys. All other parameters are included. Either specify QueryStringBlacklist or QueryStringWhitelist, but not both.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "queryStringWhitelist": {
                                                                "description": "Names of query string parameters to include in cache keys. All other parameters are excluded. Either specify QueryStringBlacklist or QueryStringWhitelist, but not both.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enabled": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "enabled"
                                                ],
                                                "type": "object"
                                            },
                                            "connectionDraining": {
                                                "description": "ConnectionDrainingConfig contains configuration for connection draining. For now the draining timeout. May manage more settings in the future.",
                                                "properties": {
                                                    "drainingTimeoutSec": {
                                                        "description": "Draining timeout in seconds.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "customRequestHeaders": {
                                                "description": "CustomRequestHeadersConfig contains configuration for custom request headers",
                                                "properties": {
                                                    "headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "healthCheck": {
                                                "description": "HealthCheckConfig contains configuration for the health check.",
                                                "properties": {
                                                    "checkIntervalSec": {
                                                        "description": "CheckIntervalSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "healthyThreshold": {
                                                        "description": "HealthyThreshold is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "port": {
                                                        "description": "Port is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. If Port is used, the controller updates portSpecification as well",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "requestPath": {
                                                        "description": "RequestPath is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "type": "string"
                                                    },
                                                    "timeoutSec": {
                                                        "description": "TimeoutSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "description": "Type is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "type": "string"
                                                    },
                                                    "unhealthyThreshold": {
                                                        "description": "UnhealthyThreshold is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "iap": {
                                                "description": "IAPConfig contains configuration for IAP-enabled backends.",
                                                "properties": {
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "oauthclientCredentials": {
                                                        "description": "OAuthClientCredentials contains credentials for a single IAP-enabled backend.",
                                                        "properties": {
                                                            "clientID": {
                                                                "description": "Direct reference to OAuth client id.",
                                                                "type": "string"
                                                            },
                                                            "clientSecret": {
                                                                "description": "Direct reference to OAuth client secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of a k8s secret which stores the OAuth client id \u0026 secret.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "enabled",
                                                    "oauthclientCredentials"
                                                ],
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "LogConfig contains configuration for logging.",
                                                "properties": {
                                                    "enable": {
                                                        "description": "This field denotes whether to enable logging for the load balancer traffic served by this backend service.",
                                                        "type": "boolean"
                                                    },
                                                    "sampleRate": {
                                                        "description": "This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0.",
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "securityPolicy": {
                                                "description": "SecurityPolicyConfig contains configuration for CloudArmor-enabled backends.",
                                                "properties": {
                                                    "name": {
                                                        "description": "Name of the security policy that should be associated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "sessionAffinity": {
                                                "description": "SessionAffinityConfig contains configuration for stickyness parameters.",
                                                "properties": {
                                                    "affinityCookieTtlSec": {
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "affinityType": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "timeoutSec": {
                                                "format": "int64",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true
                    },
                    {
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
                                        "type": "string"
                                    },
                                    "kind": {
                                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "description": "BackendConfigSpec is the spec for a BackendConfig resource",
                                        "properties": {
                                            "cdn": {
                                                "description": "CDNConfig contains configuration for CDN-enabled backends.",
                                                "properties": {
                                                    "cachePolicy": {
                                                        "description": "CacheKeyPolicy contains configuration for how requests to a CDN-enabled backend are cached.",
                                                        "properties": {
                                                            "includeHost": {
                                                                "description": "If true, requests to different hosts will be cached separately.",
                                                                "type": "boolean"
                                                            },
                                                            "includeProtocol": {
                                                                "description": "If true, http and https requests will be cached separately.",
                                                                "type": "boolean"
                                                            },
                                                            "includeQueryString": {
                                                                "description": "If true, query string parameters are included in the cache key according to QueryStringBlacklist and QueryStringWhitelist. If neither is set, the entire query string is included and if false the entire query string is excluded.",
                                                                "type": "boolean"
                                                            },
                                                            "queryStringBlacklist": {
                                                                "description": "Names of query strint parameters to exclude from cache keys. All other parameters are included. Either specify QueryStringBlacklist or QueryStringWhitelist, but not both.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "queryStringWhitelist": {
                                                                "description": "Names of query string parameters to include in cache keys. All other parameters are excluded. Either specify QueryStringBlacklist or QueryStringWhitelist, but not both.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enabled": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "enabled"
                                                ],
                                                "type": "object"
                                            },
                                            "connectionDraining": {
                                                "description": "ConnectionDrainingConfig contains configuration for connection draining. For now the draining timeout. May manage more settings in the future.",
                                                "properties": {
                                                    "drainingTimeoutSec": {
                                                        "description": "Draining timeout in seconds.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "customRequestHeaders": {
                                                "description": "CustomRequestHeadersConfig contains configuration for custom request headers",
                                                "properties": {
                                                    "headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "healthCheck": {
                                                "description": "HealthCheckConfig contains configuration for the health check.",
                                                "properties": {
                                                    "checkIntervalSec": {
                                                        "description": "CheckIntervalSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "healthyThreshold": {
                                                        "description": "HealthyThreshold is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "port": {
                                                        "description": "Port is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks. If Port is used, the controller updates portSpecification as well",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "requestPath": {
                                                        "description": "RequestPath is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "type": "string"
                                                    },
                                                    "timeoutSec": {
                                                        "description": "TimeoutSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "description": "Type is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "type": "string"
                                                    },
                                                    "unhealthyThreshold": {
                                                        "description": "UnhealthyThreshold is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.",
                                                        "format": "int64",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "iap": {
                                                "description": "IAPConfig contains configuration for IAP-enabled backends.",
                                                "properties": {
                                                    "enabled": {
                                                        "type": "boolean"
                                                    },
                                                    "oauthclientCredentials": {
                                                        "description": "OAuthClientCredentials contains credentials for a single IAP-enabled backend.",
                                                        "properties": {
                                                            "clientID": {
                                                                "description": "Direct reference to OAuth client id.",
                                                                "type": "string"
                                                            },
                                                            "clientSecret": {
                                                                "description": "Direct reference to OAuth client secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of a k8s secret which stores the OAuth client id \u0026 secret.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "enabled",
                                                    "oauthclientCredentials"
                                                ],
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "LogConfig contains configuration for logging.",
                                                "properties": {
                                                    "enable": {
                                                        "description": "This field denotes whether to enable logging for the load balancer traffic served by this backend service.",
                                                        "type": "boolean"
                                                    },
                                                    "sampleRate": {
                                                        "description": "This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0.",
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "securityPolicy": {
                                                "description": "SecurityPolicyConfig contains configuration for CloudArmor-enabled backends.",
                                                "properties": {
                                                    "name": {
                                                        "description": "Name of the security policy that should be associated.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "sessionAffinity": {
                                                "description": "SessionAffinityConfig contains configuration for stickyness parameters.",
                                                "properties": {
                                                    "affinityCookieTtlSec": {
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "affinityType": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "timeoutSec": {
                                                "format": "int64",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": false
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "BackendConfig",
                    "listKind": "BackendConfigList",
                    "plural": "backendconfigs",
                    "shortNames": [
                        "bc"
                    ],
                    "singular": "backendconfig"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T14:03:36Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:03:36Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"capacityrequests.internal.autoscaling.k8s.io\"},\"spec\":{\"group\":\"internal.autoscaling.k8s.io\",\"names\":{\"kind\":\"CapacityRequest\",\"plural\":\"capacityrequests\",\"shortNames\":[\"capreq\"],\"singular\":\"capacityrequest\"},\"scope\":\"Namespaced\",\"version\":\"v1alpha1\"}}\n"
                },
                "creationTimestamp": "2020-10-26T14:02:45Z",
                "generation": 1,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile"
                },
                "name": "capacityrequests.internal.autoscaling.k8s.io",
                "resourceVersion": "391",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/capacityrequests.internal.autoscaling.k8s.io",
                "uid": "fc876c5b-f4a2-49f9-9b84-8268ac8db179"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "internal.autoscaling.k8s.io",
                "names": {
                    "kind": "CapacityRequest",
                    "listKind": "CapacityRequestList",
                    "plural": "capacityrequests",
                    "shortNames": [
                        "capreq"
                    ],
                    "singular": "capacityrequest"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "CapacityRequest",
                    "listKind": "CapacityRequestList",
                    "plural": "capacityrequests",
                    "shortNames": [
                        "capreq"
                    ],
                    "singular": "capacityrequest"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T14:02:45Z",
                        "message": "protected groups must have approval annotation \"api-approved.kubernetes.io\", see https://github.com/kubernetes/enhancements/pull/1111",
                        "reason": "MissingAnnotation",
                        "status": "False",
                        "type": "KubernetesAPIApprovalPolicyConformant"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:45Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:45Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:09:22Z",
                "generation": 1,
                "name": "cloudflowapplications.cloudflow.lightbend.com",
                "resourceVersion": "40260",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/cloudflowapplications.cloudflow.lightbend.com",
                "uid": "cf8dc3b0-c2fa-4175-87f7-e34d650c738d"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "cloudflow.lightbend.com",
                "names": {
                    "kind": "CloudflowApplication",
                    "listKind": "CloudflowApplicationList",
                    "plural": "cloudflowapplications",
                    "shortNames": [
                        "cloudflowapp"
                    ],
                    "singular": "cloudflowapplication"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "CloudflowApplication",
                    "listKind": "CloudflowApplicationList",
                    "plural": "cloudflowapplications",
                    "shortNames": [
                        "cloudflowapp"
                    ],
                    "singular": "cloudflowapplication"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:09:22Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:09:22Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "flink-operator",
                    "meta.helm.sh/release-namespace": "cloudflow"
                },
                "creationTimestamp": "2020-10-26T16:08:52Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "name": "flinkapplications.flink.k8s.io",
                "resourceVersion": "40026",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/flinkapplications.flink.k8s.io",
                "uid": "32d240c3-1355-43ea-9423-faf9000117f4"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "flink.k8s.io",
                "names": {
                    "kind": "FlinkApplication",
                    "listKind": "FlinkApplicationList",
                    "plural": "flinkapplications",
                    "shortNames": [
                        "flinkapp"
                    ],
                    "singular": "flinkapplication"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The current state machine phase for this FlinkApplication",
                                "jsonPath": ".status.phase",
                                "name": "Phase",
                                "type": "string"
                            },
                            {
                                "description": "The health of the Flink cluster",
                                "jsonPath": ".status.clusterStatus.health",
                                "name": "Cluster Health",
                                "type": "string"
                            },
                            {
                                "description": "The health of the Flink job",
                                "jsonPath": ".status.jobStatus.health",
                                "name": "Job Health",
                                "type": "string"
                            },
                            {
                                "jsonPath": ".status.clusterStatus.healthyTaskManagers",
                                "name": "Healthy TMs",
                                "priority": 1,
                                "type": "string"
                            },
                            {
                                "jsonPath": ".status.clusterStatus.numberOfTaskManagers",
                                "name": "Total TMs",
                                "priority": 1,
                                "type": "string"
                            },
                            {
                                "description": "Number of times the job has restarted",
                                "jsonPath": ".status.jobStatus.jobRestartCount",
                                "name": "Job Restarts",
                                "type": "integer"
                            },
                            {
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            }
                        ],
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "allowNonRestoredState": {
                                                "type": "boolean"
                                            },
                                            "blobPort": {
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "deleteMode": {
                                                "enum": [
                                                    "Savepoint",
                                                    "None",
                                                    "ForceCancel"
                                                ],
                                                "type": "string"
                                            },
                                            "deploymentMode": {
                                                "enum": [
                                                    "Dual"
                                                ],
                                                "type": "string"
                                            },
                                            "entryClass": {
                                                "type": "string"
                                            },
                                            "flinkConfig": {
                                                "properties": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "flinkVersion": {
                                                "type": "string"
                                            },
                                            "image": {
                                                "type": "string"
                                            },
                                            "imagePullPolicy": {
                                                "enum": [
                                                    "Always",
                                                    "Never",
                                                    "IfNotPresent"
                                                ],
                                                "type": "string"
                                            },
                                            "imagePullSecrets": {
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "jarName": {
                                                "type": "string"
                                            },
                                            "jobManagerConfig": {
                                                "properties": {
                                                    "envConfig": {
                                                        "properties": {
                                                            "env": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        },
                                                                        "valueFrom": {
                                                                            "properties": {
                                                                                "configMapKeyRef": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "optional": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "fieldRef": {
                                                                                    "properties": {
                                                                                        "apiVersion": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "fieldPath": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "fieldPath"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "resourceFieldRef": {
                                                                                    "properties": {
                                                                                        "containerName": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "divisor": {},
                                                                                        "resource": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "resource"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "secretKeyRef": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "optional": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "envFrom": {
                                                                "items": {
                                                                    "properties": {
                                                                        "configMapRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "prefix": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nodeSelector": {
                                                        "properties": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "offHeapMemoryFraction": {
                                                        "maximum": 1,
                                                        "minimum": 0,
                                                        "type": "number"
                                                    },
                                                    "replicas": {
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "resources": {
                                                        "properties": {
                                                            "limits": {
                                                                "properties": {
                                                                    "cpu": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "ephemeral-storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "memory": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "properties": {
                                                                    "cpu": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "ephemeral-storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "memory": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxCheckpointRestoreAgeSeconds": {
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "metricsQueryPort": {
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "parallelism": {
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "programArgs": {
                                                "type": "string"
                                            },
                                            "queryPort": {
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "restartNonce": {
                                                "type": "string"
                                            },
                                            "rpcPort": {
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "savepointInfo": {
                                                "properties": {
                                                    "savepointLocation": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "savepointPath": {
                                                "type": "string"
                                            },
                                            "serviceAccountName": {
                                                "type": "string"
                                            },
                                            "taskManagerConfig": {
                                                "properties": {
                                                    "envConfig": {
                                                        "properties": {
                                                            "env": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        },
                                                                        "valueFrom": {
                                                                            "properties": {
                                                                                "configMapKeyRef": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "optional": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "fieldRef": {
                                                                                    "properties": {
                                                                                        "apiVersion": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "fieldPath": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "fieldPath"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "resourceFieldRef": {
                                                                                    "properties": {
                                                                                        "containerName": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "divisor": {},
                                                                                        "resource": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "resource"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "secretKeyRef": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "optional": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "envFrom": {
                                                                "items": {
                                                                    "properties": {
                                                                        "configMapRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "prefix": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nodeSelector": {
                                                        "properties": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "offHeapMemoryFraction": {
                                                        "maximum": 1,
                                                        "minimum": 0,
                                                        "type": "number"
                                                    },
                                                    "resources": {
                                                        "properties": {
                                                            "limits": {
                                                                "properties": {
                                                                    "cpu": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "ephemeral-storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "memory": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "properties": {
                                                                    "cpu": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "ephemeral-storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "memory": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "taskSlots": {
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "volumeMounts": {
                                                "items": {
                                                    "properties": {
                                                        "mountPath": {
                                                            "type": "string"
                                                        },
                                                        "mountPropagation": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "readOnly": {
                                                            "type": "boolean"
                                                        },
                                                        "subPath": {
                                                            "type": "string"
                                                        },
                                                        "subPathExpr": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "mountPath"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "volumes": {
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "image",
                                            "jarName",
                                            "parallelism",
                                            "entryClass"
                                        ],
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    },
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The current state machine phase for this FlinkApplication",
                                "jsonPath": ".status.phase",
                                "name": "Phase",
                                "type": "string"
                            },
                            {
                                "description": "The health of the Flink cluster",
                                "jsonPath": ".status.clusterStatus.health",
                                "name": "Cluster Health",
                                "type": "string"
                            },
                            {
                                "description": "The health of the Flink job",
                                "jsonPath": ".status.jobStatus.health",
                                "name": "Job Health",
                                "type": "string"
                            },
                            {
                                "jsonPath": ".status.clusterStatus.healthyTaskManagers",
                                "name": "Healthy TMs",
                                "priority": 1,
                                "type": "string"
                            },
                            {
                                "jsonPath": ".status.clusterStatus.numberOfTaskManagers",
                                "name": "Total TMs",
                                "priority": 1,
                                "type": "string"
                            },
                            {
                                "description": "Number of times the job has restarted",
                                "jsonPath": ".status.jobStatus.jobRestartCount",
                                "name": "Job Restarts",
                                "type": "integer"
                            },
                            {
                                "jsonPath": ".metadata.creationTimestamp",
                                "name": "Age",
                                "type": "date"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "allowNonRestoredState": {
                                                "type": "boolean"
                                            },
                                            "blobPort": {
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "deleteMode": {
                                                "enum": [
                                                    "Savepoint",
                                                    "None",
                                                    "ForceCancel"
                                                ],
                                                "type": "string"
                                            },
                                            "deploymentMode": {
                                                "enum": [
                                                    "Dual"
                                                ],
                                                "type": "string"
                                            },
                                            "entryClass": {
                                                "type": "string"
                                            },
                                            "flinkConfig": {
                                                "properties": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "flinkVersion": {
                                                "type": "string"
                                            },
                                            "image": {
                                                "type": "string"
                                            },
                                            "imagePullPolicy": {
                                                "enum": [
                                                    "Always",
                                                    "Never",
                                                    "IfNotPresent"
                                                ],
                                                "type": "string"
                                            },
                                            "imagePullSecrets": {
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "jarName": {
                                                "type": "string"
                                            },
                                            "jobManagerConfig": {
                                                "properties": {
                                                    "envConfig": {
                                                        "properties": {
                                                            "env": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        },
                                                                        "valueFrom": {
                                                                            "properties": {
                                                                                "configMapKeyRef": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "optional": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "fieldRef": {
                                                                                    "properties": {
                                                                                        "apiVersion": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "fieldPath": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "fieldPath"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "resourceFieldRef": {
                                                                                    "properties": {
                                                                                        "containerName": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "divisor": {},
                                                                                        "resource": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "resource"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "secretKeyRef": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "optional": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "envFrom": {
                                                                "items": {
                                                                    "properties": {
                                                                        "configMapRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "prefix": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nodeSelector": {
                                                        "properties": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "offHeapMemoryFraction": {
                                                        "maximum": 1,
                                                        "minimum": 0,
                                                        "type": "number"
                                                    },
                                                    "replicas": {
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "resources": {
                                                        "properties": {
                                                            "limits": {
                                                                "properties": {
                                                                    "cpu": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "ephemeral-storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "memory": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "properties": {
                                                                    "cpu": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "ephemeral-storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "memory": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maxCheckpointRestoreAgeSeconds": {
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "metricsQueryPort": {
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "parallelism": {
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "programArgs": {
                                                "type": "string"
                                            },
                                            "queryPort": {
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "restartNonce": {
                                                "type": "string"
                                            },
                                            "rpcPort": {
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "savepointInfo": {
                                                "properties": {
                                                    "savepointLocation": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "savepointPath": {
                                                "type": "string"
                                            },
                                            "serviceAccountName": {
                                                "type": "string"
                                            },
                                            "taskManagerConfig": {
                                                "properties": {
                                                    "envConfig": {
                                                        "properties": {
                                                            "env": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        },
                                                                        "valueFrom": {
                                                                            "properties": {
                                                                                "configMapKeyRef": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "optional": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "fieldRef": {
                                                                                    "properties": {
                                                                                        "apiVersion": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "fieldPath": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "fieldPath"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "resourceFieldRef": {
                                                                                    "properties": {
                                                                                        "containerName": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "divisor": {},
                                                                                        "resource": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "resource"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "secretKeyRef": {
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "optional": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "envFrom": {
                                                                "items": {
                                                                    "properties": {
                                                                        "configMapRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "prefix": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretRef": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nodeSelector": {
                                                        "properties": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "offHeapMemoryFraction": {
                                                        "maximum": 1,
                                                        "minimum": 0,
                                                        "type": "number"
                                                    },
                                                    "resources": {
                                                        "properties": {
                                                            "limits": {
                                                                "properties": {
                                                                    "cpu": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "ephemeral-storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "memory": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "properties": {
                                                                    "cpu": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "ephemeral-storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "memory": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    },
                                                                    "storage": {
                                                                        "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "taskSlots": {
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "volumeMounts": {
                                                "items": {
                                                    "properties": {
                                                        "mountPath": {
                                                            "type": "string"
                                                        },
                                                        "mountPropagation": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "readOnly": {
                                                            "type": "boolean"
                                                        },
                                                        "subPath": {
                                                            "type": "string"
                                                        },
                                                        "subPathExpr": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "mountPath"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "volumes": {
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "image",
                                            "jarName",
                                            "parallelism",
                                            "entryClass"
                                        ],
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": false,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "FlinkApplication",
                    "listKind": "FlinkApplicationList",
                    "plural": "flinkapplications",
                    "shortNames": [
                        "flinkapp"
                    ],
                    "singular": "flinkapplication"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:52Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:52Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:52Z",
                        "message": "[spec.validation.openAPIV3Schema.properties[spec].properties[jobManagerConfig].properties[envConfig].properties[env].items.properties[valueFrom].properties[resourceFieldRef].properties[divisor].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[taskManagerConfig].properties[envConfig].properties[env].items.properties[valueFrom].properties[resourceFieldRef].properties[divisor].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root]",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:52Z",
                        "message": "protected groups must have approval annotation \"api-approved.kubernetes.io\", see https://github.com/kubernetes/enhancements/pull/1111",
                        "reason": "MissingAnnotation",
                        "status": "False",
                        "type": "KubernetesAPIApprovalPolicyConformant"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:05Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkabridges.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkabridges.kafka.strimzi.io",
                "resourceVersion": "39654",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkabridges.kafka.strimzi.io",
                "uid": "549251bc-8fb3-4e5c-bba5-a254d63a9c2b"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaBridge",
                    "listKind": "KafkaBridgeList",
                    "plural": "kafkabridges",
                    "shortNames": [
                        "kb"
                    ],
                    "singular": "kafkabridge"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka Bridge replicas",
                                "jsonPath": ".spec.replicas",
                                "name": "Desired replicas",
                                "type": "integer"
                            },
                            {
                                "description": "The boostrap servers",
                                "jsonPath": ".spec.bootstrapServers",
                                "name": "Bootstrap Servers",
                                "priority": 1,
                                "type": "string"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka Bridge.",
                                        "properties": {
                                            "authentication": {
                                                "description": "Authentication configuration for connecting to the cluster.",
                                                "properties": {
                                                    "accessToken": {
                                                        "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "accessTokenIsJwt": {
                                                        "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                        "type": "boolean"
                                                    },
                                                    "certificateAndKey": {
                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                        "properties": {
                                                            "certificate": {
                                                                "description": "The name of the file certificate in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "description": "The name of the private key in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the certificate.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "certificate",
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "clientId": {
                                                        "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "clientSecret": {
                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "disableTlsHostnameVerification": {
                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                        "type": "boolean"
                                                    },
                                                    "maxTokenExpirySeconds": {
                                                        "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                        "type": "integer"
                                                    },
                                                    "passwordSecret": {
                                                        "description": "Reference to the `Secret` which holds the password.",
                                                        "properties": {
                                                            "password": {
                                                                "description": "The name of the key in the Secret under which the password is stored.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the password.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "password",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "refreshToken": {
                                                        "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "scope": {
                                                        "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                        "type": "string"
                                                    },
                                                    "tlsTrustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tokenEndpointUri": {
                                                        "description": "Authorization server token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                        "enum": [
                                                            "tls",
                                                            "scram-sha-512",
                                                            "plain",
                                                            "oauth"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "description": "Username used for the authentication.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "bootstrapServers": {
                                                "description": "A list of host:port pairs for establishing the initial connection to the Kafka cluster.",
                                                "type": "string"
                                            },
                                            "consumer": {
                                                "description": "Kafka consumer related configuration.",
                                                "properties": {
                                                    "config": {
                                                        "description": "The Kafka consumer configuration used for consumer instances created by the bridge. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl., security. (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "enableMetrics": {
                                                "description": "Enable the metrics for the Kafka Bridge. Default is false.",
                                                "type": "boolean"
                                            },
                                            "http": {
                                                "description": "The HTTP related configuration.",
                                                "properties": {
                                                    "cors": {
                                                        "description": "CORS configuration for the HTTP Bridge.",
                                                        "properties": {
                                                            "allowedMethods": {
                                                                "description": "List of allowed HTTP methods.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "allowedOrigins": {
                                                                "description": "List of allowed origins. Java regular expressions can be used.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "allowedOrigins",
                                                            "allowedMethods"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "port": {
                                                        "description": "The port which is the server listening on.",
                                                        "minimum": 1023,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "image": {
                                                "description": "The docker image for the pods.",
                                                "type": "string"
                                            },
                                            "jvmOptions": {
                                                "description": "**Currently not supported** JVM Options for pods.",
                                                "properties": {
                                                    "-XX": {
                                                        "description": "A map of -XX options to the JVM.",
                                                        "type": "object"
                                                    },
                                                    "-Xms": {
                                                        "description": "-Xms option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "-Xmx": {
                                                        "description": "-Xmx option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "gcLoggingEnabled": {
                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                        "type": "boolean"
                                                    },
                                                    "javaSystemProperties": {
                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The system property name.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The system property value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "livenessProbe": {
                                                "description": "Pod liveness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "Logging configuration for Kafka Bridge.",
                                                "properties": {
                                                    "loggers": {
                                                        "description": "A Map from logger name to logger level.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                        "enum": [
                                                            "inline",
                                                            "external"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "producer": {
                                                "description": "Kafka producer related configuration.",
                                                "properties": {
                                                    "config": {
                                                        "description": "The Kafka producer configuration used for producer instances created by the bridge. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security. (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "readinessProbe": {
                                                "description": "Pod readiness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "replicas": {
                                                "description": "The number of pods in the `Deployment`.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "resources": {
                                                "description": "CPU and memory resources to reserve.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template for Kafka Bridge resources. The template allows users to specify how is the `Deployment` and `Pods` generated.",
                                                "properties": {
                                                    "apiService": {
                                                        "description": "Template for Kafka Bridge API `Service`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "bridgeContainer": {
                                                        "description": "Template for the Kafka Bridge container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deployment": {
                                                        "description": "Template for Kafka Bridge `Deployment`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pod": {
                                                        "description": "Template for Kafka Bridge `Pods`.",
                                                        "properties": {
                                                            "affinity": {
                                                                "description": "The pod's affinity rules.",
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hostAliases": {
                                                                "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                "items": {
                                                                    "properties": {
                                                                        "hostnames": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ip": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "imagePullSecrets": {
                                                                "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "priorityClassName": {
                                                                "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                "type": "string"
                                                            },
                                                            "securityContext": {
                                                                "description": "Configures pod-level security attributes and common container settings.",
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fsGroupChangePolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "terminationGracePeriodSeconds": {
                                                                "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "tolerations": {
                                                                "description": "The pod's tolerations.",
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podDisruptionBudget": {
                                                        "description": "Template for Kafka Bridge `PodDisruptionBudget`.",
                                                        "properties": {
                                                            "maxUnavailable": {
                                                                "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tls": {
                                                "description": "TLS configuration for connecting Kafka Bridge to the cluster.",
                                                "properties": {
                                                    "trustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tracing": {
                                                "description": "The configuration of tracing in Kafka Bridge.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
                                                        "enum": [
                                                            "jaeger"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "bootstrapServers"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka Bridge.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "labelSelector": {
                                                "description": "Label selector for pods providing this resource.",
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The current number of pods being used to provide this resource.",
                                                "type": "integer"
                                            },
                                            "url": {
                                                "description": "The URL at which external client applications can access the Kafka Bridge.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "scale": {
                                "labelSelectorPath": ".status.labelSelector",
                                "specReplicasPath": ".spec.replicas",
                                "statusReplicasPath": ".status.replicas"
                            },
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaBridge",
                    "listKind": "KafkaBridgeList",
                    "plural": "kafkabridges",
                    "shortNames": [
                        "kb"
                    ],
                    "singular": "kafkabridge"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:06Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:06Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkaconnectors.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkaconnectors.kafka.strimzi.io",
                "resourceVersion": "39656",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkaconnectors.kafka.strimzi.io",
                "uid": "92f729e1-f384-4dbb-abbc-9795729bb6c3"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaConnector",
                    "listKind": "KafkaConnectorList",
                    "plural": "kafkaconnectors",
                    "shortNames": [
                        "kctr"
                    ],
                    "singular": "kafkaconnector"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The name of the Kafka Connect cluster this connector belongs to",
                                "jsonPath": ".metadata.labels.strimzi\\.io/cluster",
                                "name": "Cluster",
                                "type": "string"
                            },
                            {
                                "description": "The class used by this connector",
                                "jsonPath": ".spec.class",
                                "name": "Connector class",
                                "type": "string"
                            },
                            {
                                "description": "Maximum number of tasks",
                                "jsonPath": ".spec.tasksMax",
                                "name": "Max Tasks",
                                "type": "integer"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka Connector.",
                                        "properties": {
                                            "class": {
                                                "description": "The Class for the Kafka Connector.",
                                                "type": "string"
                                            },
                                            "config": {
                                                "description": "The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.",
                                                "type": "object"
                                            },
                                            "pause": {
                                                "description": "Whether the connector should be paused. Defaults to false.",
                                                "type": "boolean"
                                            },
                                            "tasksMax": {
                                                "description": "The maximum number of tasks for the Kafka Connector.",
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka Connector.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "connectorStatus": {
                                                "description": "The connector status, as reported by the Kafka Connect REST API.",
                                                "type": "object"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "tasksMax": {
                                                "description": "The maximum number of tasks for the Kafka Connector.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "scale": {
                                "specReplicasPath": ".spec.tasksMax",
                                "statusReplicasPath": ".status.tasksMax"
                            },
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaConnector",
                    "listKind": "KafkaConnectorList",
                    "plural": "kafkaconnectors",
                    "shortNames": [
                        "kctr"
                    ],
                    "singular": "kafkaconnector"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:04Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkaconnects.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkaconnects.kafka.strimzi.io",
                "resourceVersion": "39633",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkaconnects.kafka.strimzi.io",
                "uid": "f1452939-972c-4dc4-b030-cb2889b70d0d"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaConnect",
                    "listKind": "KafkaConnectList",
                    "plural": "kafkaconnects",
                    "shortNames": [
                        "kc"
                    ],
                    "singular": "kafkaconnect"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka Connect replicas",
                                "jsonPath": ".spec.replicas",
                                "name": "Desired replicas",
                                "type": "integer"
                            }
                        ],
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka Connect cluster.",
                                        "properties": {
                                            "affinity": {
                                                "description": "The pod's affinity rules.",
                                                "properties": {
                                                    "nodeAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "preference": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "properties": {
                                                                    "nodeSelectorTerms": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAntiAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "authentication": {
                                                "description": "Authentication configuration for Kafka Connect.",
                                                "properties": {
                                                    "accessToken": {
                                                        "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "accessTokenIsJwt": {
                                                        "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                        "type": "boolean"
                                                    },
                                                    "certificateAndKey": {
                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                        "properties": {
                                                            "certificate": {
                                                                "description": "The name of the file certificate in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "description": "The name of the private key in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the certificate.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "certificate",
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "clientId": {
                                                        "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "clientSecret": {
                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "disableTlsHostnameVerification": {
                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                        "type": "boolean"
                                                    },
                                                    "maxTokenExpirySeconds": {
                                                        "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                        "type": "integer"
                                                    },
                                                    "passwordSecret": {
                                                        "description": "Reference to the `Secret` which holds the password.",
                                                        "properties": {
                                                            "password": {
                                                                "description": "The name of the key in the Secret under which the password is stored.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the password.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "password",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "refreshToken": {
                                                        "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "scope": {
                                                        "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                        "type": "string"
                                                    },
                                                    "tlsTrustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tokenEndpointUri": {
                                                        "description": "Authorization server token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                        "enum": [
                                                            "tls",
                                                            "scram-sha-512",
                                                            "plain",
                                                            "oauth"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "description": "Username used for the authentication.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "bootstrapServers": {
                                                "description": "Bootstrap servers to connect to. This should be given as a comma separated list of _\u003chostname\u003e_:‍_\u003cport\u003e_ pairs.",
                                                "type": "string"
                                            },
                                            "clientRackInitImage": {
                                                "description": "The image of the init container used for initializing the `client.rack`.",
                                                "type": "string"
                                            },
                                            "config": {
                                                "description": "The Kafka Connect configuration. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                "type": "object"
                                            },
                                            "externalConfiguration": {
                                                "description": "Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.",
                                                "properties": {
                                                    "env": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as environment variables.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.",
                                                                    "type": "string"
                                                                },
                                                                "valueFrom": {
                                                                    "description": "Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.",
                                                                    "properties": {
                                                                        "configMapKeyRef": {
                                                                            "description": "Refernce to a key in a ConfigMap.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "secretKeyRef": {
                                                                            "description": "Reference to a key in a Secret.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "valueFrom"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "volumes": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as volumes.",
                                                        "items": {
                                                            "properties": {
                                                                "configMap": {
                                                                    "description": "Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "name": {
                                                                    "description": "Name of the volume which will be added to the Kafka Connect pods.",
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "description": "Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "secretName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "image": {
                                                "description": "The docker image for the pods.",
                                                "type": "string"
                                            },
                                            "jvmOptions": {
                                                "description": "JVM Options for pods.",
                                                "properties": {
                                                    "-XX": {
                                                        "description": "A map of -XX options to the JVM.",
                                                        "type": "object"
                                                    },
                                                    "-Xms": {
                                                        "description": "-Xms option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "-Xmx": {
                                                        "description": "-Xmx option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "gcLoggingEnabled": {
                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                        "type": "boolean"
                                                    },
                                                    "javaSystemProperties": {
                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The system property name.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The system property value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "livenessProbe": {
                                                "description": "Pod liveness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "Logging configuration for Kafka Connect.",
                                                "properties": {
                                                    "loggers": {
                                                        "description": "A Map from logger name to logger level.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                        "enum": [
                                                            "inline",
                                                            "external"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "metrics": {
                                                "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                "type": "object"
                                            },
                                            "rack": {
                                                "description": "Configuration of the node label which will be used as the client.rack consumer configuration.",
                                                "properties": {
                                                    "topologyKey": {
                                                        "description": "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set the broker's `broker.rack` config.",
                                                        "example": "topology.kubernetes.io/zone",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "topologyKey"
                                                ],
                                                "type": "object"
                                            },
                                            "readinessProbe": {
                                                "description": "Pod readiness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "replicas": {
                                                "description": "The number of pods in the Kafka Connect group.",
                                                "type": "integer"
                                            },
                                            "resources": {
                                                "description": "The maximum limits for CPU and memory resources and the requested initial resources.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template for Kafka Connect and Kafka Connect S2I resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.",
                                                "properties": {
                                                    "apiService": {
                                                        "description": "Template for Kafka Connect API `Service`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "connectContainer": {
                                                        "description": "Template for the Kafka Connect container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deployment": {
                                                        "description": "Template for Kafka Connect `Deployment`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "initContainer": {
                                                        "description": "Template for the Kafka init container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pod": {
                                                        "description": "Template for Kafka Connect `Pods`.",
                                                        "properties": {
                                                            "affinity": {
                                                                "description": "The pod's affinity rules.",
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hostAliases": {
                                                                "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                "items": {
                                                                    "properties": {
                                                                        "hostnames": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ip": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "imagePullSecrets": {
                                                                "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "priorityClassName": {
                                                                "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                "type": "string"
                                                            },
                                                            "securityContext": {
                                                                "description": "Configures pod-level security attributes and common container settings.",
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fsGroupChangePolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "terminationGracePeriodSeconds": {
                                                                "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "tolerations": {
                                                                "description": "The pod's tolerations.",
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podDisruptionBudget": {
                                                        "description": "Template for Kafka Connect `PodDisruptionBudget`.",
                                                        "properties": {
                                                            "maxUnavailable": {
                                                                "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tls": {
                                                "description": "TLS configuration.",
                                                "properties": {
                                                    "trustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tolerations": {
                                                "description": "The pod's tolerations.",
                                                "items": {
                                                    "properties": {
                                                        "effect": {
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "tracing": {
                                                "description": "The configuration of tracing in Kafka Connect.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
                                                        "enum": [
                                                            "jaeger"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "version": {
                                                "description": "The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "bootstrapServers"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka Connect cluster.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "connectorPlugins": {
                                                "description": "The list of connector plugins available in this Kafka Connect deployment.",
                                                "items": {
                                                    "properties": {
                                                        "class": {
                                                            "description": "The class of the connector plugin.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The type of the connector plugin. The available types are `sink` and `source`.",
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "description": "The version of the connector plugin.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "labelSelector": {
                                                "description": "Label selector for pods providing this resource.",
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The current number of pods being used to provide this resource.",
                                                "type": "integer"
                                            },
                                            "url": {
                                                "description": "The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "scale": {
                                "labelSelectorPath": ".status.labelSelector",
                                "specReplicasPath": ".spec.replicas",
                                "statusReplicasPath": ".status.replicas"
                            },
                            "status": {}
                        }
                    },
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka Connect replicas",
                                "jsonPath": ".spec.replicas",
                                "name": "Desired replicas",
                                "type": "integer"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka Connect cluster.",
                                        "properties": {
                                            "affinity": {
                                                "description": "The pod's affinity rules.",
                                                "properties": {
                                                    "nodeAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "preference": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "properties": {
                                                                    "nodeSelectorTerms": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAntiAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "authentication": {
                                                "description": "Authentication configuration for Kafka Connect.",
                                                "properties": {
                                                    "accessToken": {
                                                        "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "accessTokenIsJwt": {
                                                        "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                        "type": "boolean"
                                                    },
                                                    "certificateAndKey": {
                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                        "properties": {
                                                            "certificate": {
                                                                "description": "The name of the file certificate in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "description": "The name of the private key in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the certificate.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "certificate",
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "clientId": {
                                                        "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "clientSecret": {
                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "disableTlsHostnameVerification": {
                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                        "type": "boolean"
                                                    },
                                                    "maxTokenExpirySeconds": {
                                                        "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                        "type": "integer"
                                                    },
                                                    "passwordSecret": {
                                                        "description": "Reference to the `Secret` which holds the password.",
                                                        "properties": {
                                                            "password": {
                                                                "description": "The name of the key in the Secret under which the password is stored.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the password.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "password",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "refreshToken": {
                                                        "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "scope": {
                                                        "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                        "type": "string"
                                                    },
                                                    "tlsTrustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tokenEndpointUri": {
                                                        "description": "Authorization server token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                        "enum": [
                                                            "tls",
                                                            "scram-sha-512",
                                                            "plain",
                                                            "oauth"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "description": "Username used for the authentication.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "bootstrapServers": {
                                                "description": "Bootstrap servers to connect to. This should be given as a comma separated list of _\u003chostname\u003e_:‍_\u003cport\u003e_ pairs.",
                                                "type": "string"
                                            },
                                            "clientRackInitImage": {
                                                "description": "The image of the init container used for initializing the `client.rack`.",
                                                "type": "string"
                                            },
                                            "config": {
                                                "description": "The Kafka Connect configuration. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                "type": "object"
                                            },
                                            "externalConfiguration": {
                                                "description": "Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.",
                                                "properties": {
                                                    "env": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as environment variables.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.",
                                                                    "type": "string"
                                                                },
                                                                "valueFrom": {
                                                                    "description": "Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.",
                                                                    "properties": {
                                                                        "configMapKeyRef": {
                                                                            "description": "Refernce to a key in a ConfigMap.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "secretKeyRef": {
                                                                            "description": "Reference to a key in a Secret.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "valueFrom"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "volumes": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as volumes.",
                                                        "items": {
                                                            "properties": {
                                                                "configMap": {
                                                                    "description": "Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "name": {
                                                                    "description": "Name of the volume which will be added to the Kafka Connect pods.",
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "description": "Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "secretName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "image": {
                                                "description": "The docker image for the pods.",
                                                "type": "string"
                                            },
                                            "jvmOptions": {
                                                "description": "JVM Options for pods.",
                                                "properties": {
                                                    "-XX": {
                                                        "description": "A map of -XX options to the JVM.",
                                                        "type": "object"
                                                    },
                                                    "-Xms": {
                                                        "description": "-Xms option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "-Xmx": {
                                                        "description": "-Xmx option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "gcLoggingEnabled": {
                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                        "type": "boolean"
                                                    },
                                                    "javaSystemProperties": {
                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The system property name.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The system property value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "livenessProbe": {
                                                "description": "Pod liveness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "Logging configuration for Kafka Connect.",
                                                "properties": {
                                                    "loggers": {
                                                        "description": "A Map from logger name to logger level.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                        "enum": [
                                                            "inline",
                                                            "external"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "metrics": {
                                                "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                "type": "object"
                                            },
                                            "rack": {
                                                "description": "Configuration of the node label which will be used as the client.rack consumer configuration.",
                                                "properties": {
                                                    "topologyKey": {
                                                        "description": "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set the broker's `broker.rack` config.",
                                                        "example": "topology.kubernetes.io/zone",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "topologyKey"
                                                ],
                                                "type": "object"
                                            },
                                            "readinessProbe": {
                                                "description": "Pod readiness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "replicas": {
                                                "description": "The number of pods in the Kafka Connect group.",
                                                "type": "integer"
                                            },
                                            "resources": {
                                                "description": "The maximum limits for CPU and memory resources and the requested initial resources.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template for Kafka Connect and Kafka Connect S2I resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.",
                                                "properties": {
                                                    "apiService": {
                                                        "description": "Template for Kafka Connect API `Service`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "connectContainer": {
                                                        "description": "Template for the Kafka Connect container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deployment": {
                                                        "description": "Template for Kafka Connect `Deployment`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "initContainer": {
                                                        "description": "Template for the Kafka init container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pod": {
                                                        "description": "Template for Kafka Connect `Pods`.",
                                                        "properties": {
                                                            "affinity": {
                                                                "description": "The pod's affinity rules.",
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hostAliases": {
                                                                "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                "items": {
                                                                    "properties": {
                                                                        "hostnames": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ip": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "imagePullSecrets": {
                                                                "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "priorityClassName": {
                                                                "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                "type": "string"
                                                            },
                                                            "securityContext": {
                                                                "description": "Configures pod-level security attributes and common container settings.",
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fsGroupChangePolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "terminationGracePeriodSeconds": {
                                                                "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "tolerations": {
                                                                "description": "The pod's tolerations.",
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podDisruptionBudget": {
                                                        "description": "Template for Kafka Connect `PodDisruptionBudget`.",
                                                        "properties": {
                                                            "maxUnavailable": {
                                                                "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tls": {
                                                "description": "TLS configuration.",
                                                "properties": {
                                                    "trustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tolerations": {
                                                "description": "The pod's tolerations.",
                                                "items": {
                                                    "properties": {
                                                        "effect": {
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "tracing": {
                                                "description": "The configuration of tracing in Kafka Connect.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
                                                        "enum": [
                                                            "jaeger"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "version": {
                                                "description": "The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "bootstrapServers"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka Connect cluster.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "connectorPlugins": {
                                                "description": "The list of connector plugins available in this Kafka Connect deployment.",
                                                "items": {
                                                    "properties": {
                                                        "class": {
                                                            "description": "The class of the connector plugin.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The type of the connector plugin. The available types are `sink` and `source`.",
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "description": "The version of the connector plugin.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "labelSelector": {
                                                "description": "Label selector for pods providing this resource.",
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The current number of pods being used to provide this resource.",
                                                "type": "integer"
                                            },
                                            "url": {
                                                "description": "The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": false,
                        "subresources": {
                            "scale": {
                                "labelSelectorPath": ".status.labelSelector",
                                "specReplicasPath": ".spec.replicas",
                                "statusReplicasPath": ".status.replicas"
                            },
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaConnect",
                    "listKind": "KafkaConnectList",
                    "plural": "kafkaconnects",
                    "shortNames": [
                        "kc"
                    ],
                    "singular": "kafkaconnect"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:04Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:05Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:05Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:04Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkaconnects2is.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkaconnects2is.kafka.strimzi.io",
                "resourceVersion": "39648",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkaconnects2is.kafka.strimzi.io",
                "uid": "0feeacee-ee9a-49b9-90b3-f993a3be6bdf"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaConnectS2I",
                    "listKind": "KafkaConnectS2IList",
                    "plural": "kafkaconnects2is",
                    "shortNames": [
                        "kcs2i"
                    ],
                    "singular": "kafkaconnects2i"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka Connect replicas",
                                "jsonPath": ".spec.replicas",
                                "name": "Desired replicas",
                                "type": "integer"
                            }
                        ],
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka Connect Source-to-Image (S2I) cluster.",
                                        "properties": {
                                            "affinity": {
                                                "description": "The pod's affinity rules.",
                                                "properties": {
                                                    "nodeAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "preference": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "properties": {
                                                                    "nodeSelectorTerms": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAntiAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "authentication": {
                                                "description": "Authentication configuration for Kafka Connect.",
                                                "properties": {
                                                    "accessToken": {
                                                        "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "accessTokenIsJwt": {
                                                        "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                        "type": "boolean"
                                                    },
                                                    "certificateAndKey": {
                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                        "properties": {
                                                            "certificate": {
                                                                "description": "The name of the file certificate in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "description": "The name of the private key in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the certificate.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "certificate",
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "clientId": {
                                                        "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "clientSecret": {
                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "disableTlsHostnameVerification": {
                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                        "type": "boolean"
                                                    },
                                                    "maxTokenExpirySeconds": {
                                                        "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                        "type": "integer"
                                                    },
                                                    "passwordSecret": {
                                                        "description": "Reference to the `Secret` which holds the password.",
                                                        "properties": {
                                                            "password": {
                                                                "description": "The name of the key in the Secret under which the password is stored.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the password.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "password",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "refreshToken": {
                                                        "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "scope": {
                                                        "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                        "type": "string"
                                                    },
                                                    "tlsTrustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tokenEndpointUri": {
                                                        "description": "Authorization server token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                        "enum": [
                                                            "tls",
                                                            "scram-sha-512",
                                                            "plain",
                                                            "oauth"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "description": "Username used for the authentication.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "bootstrapServers": {
                                                "description": "Bootstrap servers to connect to. This should be given as a comma separated list of _\u003chostname\u003e_:‍_\u003cport\u003e_ pairs.",
                                                "type": "string"
                                            },
                                            "buildResources": {
                                                "description": "CPU and memory resources to reserve.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "clientRackInitImage": {
                                                "description": "The image of the init container used for initializing the `client.rack`.",
                                                "type": "string"
                                            },
                                            "config": {
                                                "description": "The Kafka Connect configuration. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                "type": "object"
                                            },
                                            "externalConfiguration": {
                                                "description": "Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.",
                                                "properties": {
                                                    "env": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as environment variables.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.",
                                                                    "type": "string"
                                                                },
                                                                "valueFrom": {
                                                                    "description": "Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.",
                                                                    "properties": {
                                                                        "configMapKeyRef": {
                                                                            "description": "Refernce to a key in a ConfigMap.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "secretKeyRef": {
                                                                            "description": "Reference to a key in a Secret.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "valueFrom"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "volumes": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as volumes.",
                                                        "items": {
                                                            "properties": {
                                                                "configMap": {
                                                                    "description": "Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "name": {
                                                                    "description": "Name of the volume which will be added to the Kafka Connect pods.",
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "description": "Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "secretName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "image": {
                                                "description": "The docker image for the pods.",
                                                "type": "string"
                                            },
                                            "insecureSourceRepository": {
                                                "description": "When true this configures the source repository with the 'Local' reference policy and an import policy that accepts insecure source tags.",
                                                "type": "boolean"
                                            },
                                            "jvmOptions": {
                                                "description": "JVM Options for pods.",
                                                "properties": {
                                                    "-XX": {
                                                        "description": "A map of -XX options to the JVM.",
                                                        "type": "object"
                                                    },
                                                    "-Xms": {
                                                        "description": "-Xms option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "-Xmx": {
                                                        "description": "-Xmx option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "gcLoggingEnabled": {
                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                        "type": "boolean"
                                                    },
                                                    "javaSystemProperties": {
                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The system property name.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The system property value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "livenessProbe": {
                                                "description": "Pod liveness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "Logging configuration for Kafka Connect.",
                                                "properties": {
                                                    "loggers": {
                                                        "description": "A Map from logger name to logger level.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                        "enum": [
                                                            "inline",
                                                            "external"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "metrics": {
                                                "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                "type": "object"
                                            },
                                            "rack": {
                                                "description": "Configuration of the node label which will be used as the client.rack consumer configuration.",
                                                "properties": {
                                                    "topologyKey": {
                                                        "description": "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set the broker's `broker.rack` config.",
                                                        "example": "topology.kubernetes.io/zone",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "topologyKey"
                                                ],
                                                "type": "object"
                                            },
                                            "readinessProbe": {
                                                "description": "Pod readiness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "replicas": {
                                                "description": "The number of pods in the Kafka Connect group.",
                                                "type": "integer"
                                            },
                                            "resources": {
                                                "description": "The maximum limits for CPU and memory resources and the requested initial resources.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template for Kafka Connect and Kafka Connect S2I resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.",
                                                "properties": {
                                                    "apiService": {
                                                        "description": "Template for Kafka Connect API `Service`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "connectContainer": {
                                                        "description": "Template for the Kafka Connect container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deployment": {
                                                        "description": "Template for Kafka Connect `Deployment`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "initContainer": {
                                                        "description": "Template for the Kafka init container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pod": {
                                                        "description": "Template for Kafka Connect `Pods`.",
                                                        "properties": {
                                                            "affinity": {
                                                                "description": "The pod's affinity rules.",
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hostAliases": {
                                                                "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                "items": {
                                                                    "properties": {
                                                                        "hostnames": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ip": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "imagePullSecrets": {
                                                                "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "priorityClassName": {
                                                                "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                "type": "string"
                                                            },
                                                            "securityContext": {
                                                                "description": "Configures pod-level security attributes and common container settings.",
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fsGroupChangePolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "terminationGracePeriodSeconds": {
                                                                "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "tolerations": {
                                                                "description": "The pod's tolerations.",
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podDisruptionBudget": {
                                                        "description": "Template for Kafka Connect `PodDisruptionBudget`.",
                                                        "properties": {
                                                            "maxUnavailable": {
                                                                "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tls": {
                                                "description": "TLS configuration.",
                                                "properties": {
                                                    "trustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tolerations": {
                                                "description": "The pod's tolerations.",
                                                "items": {
                                                    "properties": {
                                                        "effect": {
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "tracing": {
                                                "description": "The configuration of tracing in Kafka Connect.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
                                                        "enum": [
                                                            "jaeger"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "version": {
                                                "description": "The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "bootstrapServers"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka Connect Source-to-Image (S2I) cluster.",
                                        "properties": {
                                            "buildConfigName": {
                                                "description": "The name of the build configuration.",
                                                "type": "string"
                                            },
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "connectorPlugins": {
                                                "description": "The list of connector plugins available in this Kafka Connect deployment.",
                                                "items": {
                                                    "properties": {
                                                        "class": {
                                                            "description": "The class of the connector plugin.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The type of the connector plugin. The available types are `sink` and `source`.",
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "description": "The version of the connector plugin.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "labelSelector": {
                                                "description": "Label selector for pods providing this resource.",
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The current number of pods being used to provide this resource.",
                                                "type": "integer"
                                            },
                                            "url": {
                                                "description": "The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "scale": {
                                "labelSelectorPath": ".status.labelSelector",
                                "specReplicasPath": ".spec.replicas",
                                "statusReplicasPath": ".status.replicas"
                            },
                            "status": {}
                        }
                    },
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka Connect replicas",
                                "jsonPath": ".spec.replicas",
                                "name": "Desired replicas",
                                "type": "integer"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka Connect Source-to-Image (S2I) cluster.",
                                        "properties": {
                                            "affinity": {
                                                "description": "The pod's affinity rules.",
                                                "properties": {
                                                    "nodeAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "preference": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "properties": {
                                                                    "nodeSelectorTerms": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAntiAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "authentication": {
                                                "description": "Authentication configuration for Kafka Connect.",
                                                "properties": {
                                                    "accessToken": {
                                                        "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "accessTokenIsJwt": {
                                                        "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                        "type": "boolean"
                                                    },
                                                    "certificateAndKey": {
                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                        "properties": {
                                                            "certificate": {
                                                                "description": "The name of the file certificate in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "key": {
                                                                "description": "The name of the private key in the Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the certificate.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "certificate",
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "clientId": {
                                                        "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "clientSecret": {
                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "disableTlsHostnameVerification": {
                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                        "type": "boolean"
                                                    },
                                                    "maxTokenExpirySeconds": {
                                                        "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                        "type": "integer"
                                                    },
                                                    "passwordSecret": {
                                                        "description": "Reference to the `Secret` which holds the password.",
                                                        "properties": {
                                                            "password": {
                                                                "description": "The name of the key in the Secret under which the password is stored.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Secret containing the password.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "password",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "refreshToken": {
                                                        "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                        "properties": {
                                                            "key": {
                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                "type": "string"
                                                            },
                                                            "secretName": {
                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "key",
                                                            "secretName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "scope": {
                                                        "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                        "type": "string"
                                                    },
                                                    "tlsTrustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tokenEndpointUri": {
                                                        "description": "Authorization server token endpoint URI.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                        "enum": [
                                                            "tls",
                                                            "scram-sha-512",
                                                            "plain",
                                                            "oauth"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "username": {
                                                        "description": "Username used for the authentication.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "bootstrapServers": {
                                                "description": "Bootstrap servers to connect to. This should be given as a comma separated list of _\u003chostname\u003e_:‍_\u003cport\u003e_ pairs.",
                                                "type": "string"
                                            },
                                            "buildResources": {
                                                "description": "CPU and memory resources to reserve.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "clientRackInitImage": {
                                                "description": "The image of the init container used for initializing the `client.rack`.",
                                                "type": "string"
                                            },
                                            "config": {
                                                "description": "The Kafka Connect configuration. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                "type": "object"
                                            },
                                            "externalConfiguration": {
                                                "description": "Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.",
                                                "properties": {
                                                    "env": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as environment variables.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.",
                                                                    "type": "string"
                                                                },
                                                                "valueFrom": {
                                                                    "description": "Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.",
                                                                    "properties": {
                                                                        "configMapKeyRef": {
                                                                            "description": "Refernce to a key in a ConfigMap.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "secretKeyRef": {
                                                                            "description": "Reference to a key in a Secret.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "valueFrom"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "volumes": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as volumes.",
                                                        "items": {
                                                            "properties": {
                                                                "configMap": {
                                                                    "description": "Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "name": {
                                                                    "description": "Name of the volume which will be added to the Kafka Connect pods.",
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "description": "Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "secretName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "image": {
                                                "description": "The docker image for the pods.",
                                                "type": "string"
                                            },
                                            "insecureSourceRepository": {
                                                "description": "When true this configures the source repository with the 'Local' reference policy and an import policy that accepts insecure source tags.",
                                                "type": "boolean"
                                            },
                                            "jvmOptions": {
                                                "description": "JVM Options for pods.",
                                                "properties": {
                                                    "-XX": {
                                                        "description": "A map of -XX options to the JVM.",
                                                        "type": "object"
                                                    },
                                                    "-Xms": {
                                                        "description": "-Xms option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "-Xmx": {
                                                        "description": "-Xmx option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "gcLoggingEnabled": {
                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                        "type": "boolean"
                                                    },
                                                    "javaSystemProperties": {
                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The system property name.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The system property value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "livenessProbe": {
                                                "description": "Pod liveness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "Logging configuration for Kafka Connect.",
                                                "properties": {
                                                    "loggers": {
                                                        "description": "A Map from logger name to logger level.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                        "enum": [
                                                            "inline",
                                                            "external"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "metrics": {
                                                "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                "type": "object"
                                            },
                                            "rack": {
                                                "description": "Configuration of the node label which will be used as the client.rack consumer configuration.",
                                                "properties": {
                                                    "topologyKey": {
                                                        "description": "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set the broker's `broker.rack` config.",
                                                        "example": "topology.kubernetes.io/zone",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "topologyKey"
                                                ],
                                                "type": "object"
                                            },
                                            "readinessProbe": {
                                                "description": "Pod readiness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "replicas": {
                                                "description": "The number of pods in the Kafka Connect group.",
                                                "type": "integer"
                                            },
                                            "resources": {
                                                "description": "The maximum limits for CPU and memory resources and the requested initial resources.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template for Kafka Connect and Kafka Connect S2I resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.",
                                                "properties": {
                                                    "apiService": {
                                                        "description": "Template for Kafka Connect API `Service`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "connectContainer": {
                                                        "description": "Template for the Kafka Connect container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deployment": {
                                                        "description": "Template for Kafka Connect `Deployment`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "initContainer": {
                                                        "description": "Template for the Kafka init container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pod": {
                                                        "description": "Template for Kafka Connect `Pods`.",
                                                        "properties": {
                                                            "affinity": {
                                                                "description": "The pod's affinity rules.",
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hostAliases": {
                                                                "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                "items": {
                                                                    "properties": {
                                                                        "hostnames": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ip": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "imagePullSecrets": {
                                                                "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "priorityClassName": {
                                                                "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                "type": "string"
                                                            },
                                                            "securityContext": {
                                                                "description": "Configures pod-level security attributes and common container settings.",
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fsGroupChangePolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "terminationGracePeriodSeconds": {
                                                                "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "tolerations": {
                                                                "description": "The pod's tolerations.",
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podDisruptionBudget": {
                                                        "description": "Template for Kafka Connect `PodDisruptionBudget`.",
                                                        "properties": {
                                                            "maxUnavailable": {
                                                                "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tls": {
                                                "description": "TLS configuration.",
                                                "properties": {
                                                    "trustedCertificates": {
                                                        "description": "Trusted certificates for TLS connection.",
                                                        "items": {
                                                            "properties": {
                                                                "certificate": {
                                                                    "description": "The name of the file certificate in the Secret.",
                                                                    "type": "string"
                                                                },
                                                                "secretName": {
                                                                    "description": "The name of the Secret containing the certificate.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "certificate",
                                                                "secretName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tolerations": {
                                                "description": "The pod's tolerations.",
                                                "items": {
                                                    "properties": {
                                                        "effect": {
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "tracing": {
                                                "description": "The configuration of tracing in Kafka Connect.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
                                                        "enum": [
                                                            "jaeger"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "version": {
                                                "description": "The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "bootstrapServers"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka Connect Source-to-Image (S2I) cluster.",
                                        "properties": {
                                            "buildConfigName": {
                                                "description": "The name of the build configuration.",
                                                "type": "string"
                                            },
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "connectorPlugins": {
                                                "description": "The list of connector plugins available in this Kafka Connect deployment.",
                                                "items": {
                                                    "properties": {
                                                        "class": {
                                                            "description": "The class of the connector plugin.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The type of the connector plugin. The available types are `sink` and `source`.",
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "description": "The version of the connector plugin.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "labelSelector": {
                                                "description": "Label selector for pods providing this resource.",
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The current number of pods being used to provide this resource.",
                                                "type": "integer"
                                            },
                                            "url": {
                                                "description": "The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": false,
                        "subresources": {
                            "scale": {
                                "labelSelectorPath": ".status.labelSelector",
                                "specReplicasPath": ".spec.replicas",
                                "statusReplicasPath": ".status.replicas"
                            },
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaConnectS2I",
                    "listKind": "KafkaConnectS2IList",
                    "plural": "kafkaconnects2is",
                    "shortNames": [
                        "kcs2i"
                    ],
                    "singular": "kafkaconnects2i"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:04Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:05Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:06Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkamirrormaker2.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkamirrormaker2s.kafka.strimzi.io",
                "resourceVersion": "39681",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkamirrormaker2s.kafka.strimzi.io",
                "uid": "aa8894ac-6e66-403c-8961-0298636f77e3"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaMirrorMaker2",
                    "listKind": "KafkaMirrorMaker2List",
                    "plural": "kafkamirrormaker2s",
                    "shortNames": [
                        "kmm2"
                    ],
                    "singular": "kafkamirrormaker2"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka MirrorMaker 2.0 replicas",
                                "jsonPath": ".spec.replicas",
                                "name": "Desired replicas",
                                "type": "integer"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka MirrorMaker 2.0 cluster.",
                                        "properties": {
                                            "affinity": {
                                                "description": "The pod's affinity rules.",
                                                "properties": {
                                                    "nodeAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "preference": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "properties": {
                                                                    "nodeSelectorTerms": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAntiAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "clusters": {
                                                "description": "Kafka clusters for mirroring.",
                                                "items": {
                                                    "properties": {
                                                        "alias": {
                                                            "description": "Alias used to reference the Kafka cluster.",
                                                            "pattern": "^[a-zA-Z0-9\\._\\-]{1,100}$",
                                                            "type": "string"
                                                        },
                                                        "authentication": {
                                                            "description": "Authentication configuration for connecting to the cluster.",
                                                            "properties": {
                                                                "accessToken": {
                                                                    "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "accessTokenIsJwt": {
                                                                    "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                    "type": "boolean"
                                                                },
                                                                "certificateAndKey": {
                                                                    "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "description": "The name of the private key in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "key",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "clientId": {
                                                                    "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                    "type": "string"
                                                                },
                                                                "clientSecret": {
                                                                    "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "disableTlsHostnameVerification": {
                                                                    "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                    "type": "boolean"
                                                                },
                                                                "maxTokenExpirySeconds": {
                                                                    "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                                    "type": "integer"
                                                                },
                                                                "passwordSecret": {
                                                                    "description": "Reference to the `Secret` which holds the password.",
                                                                    "properties": {
                                                                        "password": {
                                                                            "description": "The name of the key in the Secret under which the password is stored.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the password.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "password",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "refreshToken": {
                                                                    "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "scope": {
                                                                    "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                                    "type": "string"
                                                                },
                                                                "tlsTrustedCertificates": {
                                                                    "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                    "items": {
                                                                        "properties": {
                                                                            "certificate": {
                                                                                "description": "The name of the file certificate in the Secret.",
                                                                                "type": "string"
                                                                            },
                                                                            "secretName": {
                                                                                "description": "The name of the Secret containing the certificate.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "certificate",
                                                                            "secretName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "tokenEndpointUri": {
                                                                    "description": "Authorization server token endpoint URI.",
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                                    "enum": [
                                                                        "tls",
                                                                        "scram-sha-512",
                                                                        "plain",
                                                                        "oauth"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "username": {
                                                                    "description": "Username used for the authentication.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "bootstrapServers": {
                                                            "description": "A comma-separated list of `host:port` pairs for establishing the connection to the Kafka cluster.",
                                                            "type": "string"
                                                        },
                                                        "config": {
                                                            "description": "The MirrorMaker 2.0 cluster config. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "description": "TLS configuration for connecting MirrorMaker 2.0 connectors to a cluster.",
                                                            "properties": {
                                                                "trustedCertificates": {
                                                                    "description": "Trusted certificates for TLS connection.",
                                                                    "items": {
                                                                        "properties": {
                                                                            "certificate": {
                                                                                "description": "The name of the file certificate in the Secret.",
                                                                                "type": "string"
                                                                            },
                                                                            "secretName": {
                                                                                "description": "The name of the Secret containing the certificate.",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "certificate",
                                                                            "secretName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "alias",
                                                        "bootstrapServers"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "connectCluster": {
                                                "description": "The cluster alias used for Kafka Connect. The alias must match a cluster in the list at `spec.clusters`.",
                                                "type": "string"
                                            },
                                            "externalConfiguration": {
                                                "description": "Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.",
                                                "properties": {
                                                    "env": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as environment variables.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.",
                                                                    "type": "string"
                                                                },
                                                                "valueFrom": {
                                                                    "description": "Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.",
                                                                    "properties": {
                                                                        "configMapKeyRef": {
                                                                            "description": "Refernce to a key in a ConfigMap.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "secretKeyRef": {
                                                                            "description": "Reference to a key in a Secret.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "optional": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "valueFrom"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "volumes": {
                                                        "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as volumes.",
                                                        "items": {
                                                            "properties": {
                                                                "configMap": {
                                                                    "description": "Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "name": {
                                                                    "description": "Name of the volume which will be added to the Kafka Connect pods.",
                                                                    "type": "string"
                                                                },
                                                                "secret": {
                                                                    "description": "Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.",
                                                                    "properties": {
                                                                        "defaultMode": {
                                                                            "type": "integer"
                                                                        },
                                                                        "items": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mode": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "optional": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "secretName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "required": [
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "image": {
                                                "description": "The docker image for the pods.",
                                                "type": "string"
                                            },
                                            "jvmOptions": {
                                                "description": "JVM Options for pods.",
                                                "properties": {
                                                    "-XX": {
                                                        "description": "A map of -XX options to the JVM.",
                                                        "type": "object"
                                                    },
                                                    "-Xms": {
                                                        "description": "-Xms option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "-Xmx": {
                                                        "description": "-Xmx option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "gcLoggingEnabled": {
                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                        "type": "boolean"
                                                    },
                                                    "javaSystemProperties": {
                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The system property name.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The system property value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "livenessProbe": {
                                                "description": "Pod liveness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "Logging configuration for Kafka Connect.",
                                                "properties": {
                                                    "loggers": {
                                                        "description": "A Map from logger name to logger level.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                        "enum": [
                                                            "inline",
                                                            "external"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "metrics": {
                                                "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                "type": "object"
                                            },
                                            "mirrors": {
                                                "description": "Configuration of the MirrorMaker 2.0 connectors.",
                                                "items": {
                                                    "properties": {
                                                        "checkpointConnector": {
                                                            "description": "The specification of the Kafka MirrorMaker 2.0 checkpoint connector.",
                                                            "properties": {
                                                                "config": {
                                                                    "description": "The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.",
                                                                    "type": "object"
                                                                },
                                                                "pause": {
                                                                    "description": "Whether the connector should be paused. Defaults to false.",
                                                                    "type": "boolean"
                                                                },
                                                                "tasksMax": {
                                                                    "description": "The maximum number of tasks for the Kafka Connector.",
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "groupsBlacklistPattern": {
                                                            "description": "A regular expression matching the consumer groups to exclude from mirroring. Comma-separated lists are also supported.",
                                                            "type": "string"
                                                        },
                                                        "groupsPattern": {
                                                            "description": "A regular expression matching the consumer groups to be mirrored. Comma-separated lists are also supported.",
                                                            "type": "string"
                                                        },
                                                        "heartbeatConnector": {
                                                            "description": "The specification of the Kafka MirrorMaker 2.0 heartbeat connector.",
                                                            "properties": {
                                                                "config": {
                                                                    "description": "The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.",
                                                                    "type": "object"
                                                                },
                                                                "pause": {
                                                                    "description": "Whether the connector should be paused. Defaults to false.",
                                                                    "type": "boolean"
                                                                },
                                                                "tasksMax": {
                                                                    "description": "The maximum number of tasks for the Kafka Connector.",
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "sourceCluster": {
                                                            "description": "The alias of the source cluster used by the Kafka MirrorMaker 2.0 connectors. The alias must match a cluster in the list at `spec.clusters`.",
                                                            "type": "string"
                                                        },
                                                        "sourceConnector": {
                                                            "description": "The specification of the Kafka MirrorMaker 2.0 source connector.",
                                                            "properties": {
                                                                "config": {
                                                                    "description": "The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.",
                                                                    "type": "object"
                                                                },
                                                                "pause": {
                                                                    "description": "Whether the connector should be paused. Defaults to false.",
                                                                    "type": "boolean"
                                                                },
                                                                "tasksMax": {
                                                                    "description": "The maximum number of tasks for the Kafka Connector.",
                                                                    "minimum": 1,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "targetCluster": {
                                                            "description": "The alias of the target cluster used by the Kafka MirrorMaker 2.0 connectors. The alias must match a cluster in the list at `spec.clusters`.",
                                                            "type": "string"
                                                        },
                                                        "topicsBlacklistPattern": {
                                                            "description": "A regular expression matching the topics to exclude from mirroring. Comma-separated lists are also supported.",
                                                            "type": "string"
                                                        },
                                                        "topicsPattern": {
                                                            "description": "A regular expression matching the topics to be mirrored, for example, \"topic1\\|topic2\\|topic3\". Comma-separated lists are also supported.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "sourceCluster",
                                                        "targetCluster"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "readinessProbe": {
                                                "description": "Pod readiness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "replicas": {
                                                "description": "The number of pods in the Kafka Connect group.",
                                                "type": "integer"
                                            },
                                            "resources": {
                                                "description": "The maximum limits for CPU and memory resources and the requested initial resources.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template for Kafka Connect and Kafka Connect S2I resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.",
                                                "properties": {
                                                    "apiService": {
                                                        "description": "Template for Kafka Connect API `Service`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "connectContainer": {
                                                        "description": "Template for the Kafka Connect container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deployment": {
                                                        "description": "Template for Kafka Connect `Deployment`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "initContainer": {
                                                        "description": "Template for the Kafka init container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pod": {
                                                        "description": "Template for Kafka Connect `Pods`.",
                                                        "properties": {
                                                            "affinity": {
                                                                "description": "The pod's affinity rules.",
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hostAliases": {
                                                                "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                "items": {
                                                                    "properties": {
                                                                        "hostnames": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ip": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "imagePullSecrets": {
                                                                "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "priorityClassName": {
                                                                "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                "type": "string"
                                                            },
                                                            "securityContext": {
                                                                "description": "Configures pod-level security attributes and common container settings.",
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fsGroupChangePolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "terminationGracePeriodSeconds": {
                                                                "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "tolerations": {
                                                                "description": "The pod's tolerations.",
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podDisruptionBudget": {
                                                        "description": "Template for Kafka Connect `PodDisruptionBudget`.",
                                                        "properties": {
                                                            "maxUnavailable": {
                                                                "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tolerations": {
                                                "description": "The pod's tolerations.",
                                                "items": {
                                                    "properties": {
                                                        "effect": {
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "tracing": {
                                                "description": "The configuration of tracing in Kafka Connect.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
                                                        "enum": [
                                                            "jaeger"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "version": {
                                                "description": "The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "connectCluster"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka MirrorMaker 2.0 cluster.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "connectorPlugins": {
                                                "description": "The list of connector plugins available in this Kafka Connect deployment.",
                                                "items": {
                                                    "properties": {
                                                        "class": {
                                                            "description": "The class of the connector plugin.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The type of the connector plugin. The available types are `sink` and `source`.",
                                                            "type": "string"
                                                        },
                                                        "version": {
                                                            "description": "The version of the connector plugin.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "connectors": {
                                                "description": "List of MirrorMaker 2.0 connector statuses, as reported by the Kafka Connect REST API.",
                                                "items": {
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "labelSelector": {
                                                "description": "Label selector for pods providing this resource.",
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The current number of pods being used to provide this resource.",
                                                "type": "integer"
                                            },
                                            "url": {
                                                "description": "The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "scale": {
                                "labelSelectorPath": ".status.labelSelector",
                                "specReplicasPath": ".spec.replicas",
                                "statusReplicasPath": ".status.replicas"
                            },
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaMirrorMaker2",
                    "listKind": "KafkaMirrorMaker2List",
                    "plural": "kafkamirrormaker2s",
                    "shortNames": [
                        "kmm2"
                    ],
                    "singular": "kafkamirrormaker2"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:11Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:05Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkamirrormakers.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkamirrormakers.kafka.strimzi.io",
                "resourceVersion": "39662",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkamirrormakers.kafka.strimzi.io",
                "uid": "17f075ae-5f5d-4616-ad32-0409d11396f9"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaMirrorMaker",
                    "listKind": "KafkaMirrorMakerList",
                    "plural": "kafkamirrormakers",
                    "shortNames": [
                        "kmm"
                    ],
                    "singular": "kafkamirrormaker"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka MirrorMaker replicas",
                                "jsonPath": ".spec.replicas",
                                "name": "Desired replicas",
                                "type": "integer"
                            },
                            {
                                "description": "The boostrap servers for the consumer",
                                "jsonPath": ".spec.consumer.bootstrapServers",
                                "name": "Consumer Bootstrap Servers",
                                "priority": 1,
                                "type": "string"
                            },
                            {
                                "description": "The boostrap servers for the producer",
                                "jsonPath": ".spec.producer.bootstrapServers",
                                "name": "Producer Bootstrap Servers",
                                "priority": 1,
                                "type": "string"
                            }
                        ],
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of Kafka MirrorMaker.",
                                        "properties": {
                                            "affinity": {
                                                "description": "The pod's affinity rules.",
                                                "properties": {
                                                    "nodeAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "preference": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "properties": {
                                                                    "nodeSelectorTerms": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAntiAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "consumer": {
                                                "description": "Configuration of source cluster.",
                                                "properties": {
                                                    "authentication": {
                                                        "description": "Authentication configuration for connecting to the cluster.",
                                                        "properties": {
                                                            "accessToken": {
                                                                "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "accessTokenIsJwt": {
                                                                "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                "type": "boolean"
                                                            },
                                                            "certificateAndKey": {
                                                                "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                                "properties": {
                                                                    "certificate": {
                                                                        "description": "The name of the file certificate in the Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "description": "The name of the private key in the Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Secret containing the certificate.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "certificate",
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "clientId": {
                                                                "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "clientSecret": {
                                                                "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "disableTlsHostnameVerification": {
                                                                "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                "type": "boolean"
                                                            },
                                                            "maxTokenExpirySeconds": {
                                                                "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                                "type": "integer"
                                                            },
                                                            "passwordSecret": {
                                                                "description": "Reference to the `Secret` which holds the password.",
                                                                "properties": {
                                                                    "password": {
                                                                        "description": "The name of the key in the Secret under which the password is stored.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Secret containing the password.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "password",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "refreshToken": {
                                                                "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "scope": {
                                                                "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                                "type": "string"
                                                            },
                                                            "tlsTrustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tokenEndpointUri": {
                                                                "description": "Authorization server token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                                "enum": [
                                                                    "tls",
                                                                    "scram-sha-512",
                                                                    "plain",
                                                                    "oauth"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "username": {
                                                                "description": "Username used for the authentication.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "bootstrapServers": {
                                                        "description": "A list of host:port pairs for establishing the initial connection to the Kafka cluster.",
                                                        "type": "string"
                                                    },
                                                    "config": {
                                                        "description": "The MirrorMaker consumer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                        "type": "object"
                                                    },
                                                    "groupId": {
                                                        "description": "A unique string that identifies the consumer group this consumer belongs to.",
                                                        "type": "string"
                                                    },
                                                    "numStreams": {
                                                        "description": "Specifies the number of consumer stream threads to create.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "offsetCommitInterval": {
                                                        "description": "Specifies the offset auto-commit interval in ms. Default value is 60000.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration for connecting MirrorMaker to the cluster.",
                                                        "properties": {
                                                            "trustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "groupId",
                                                    "bootstrapServers"
                                                ],
                                                "type": "object"
                                            },
                                            "image": {
                                                "description": "The docker image for the pods.",
                                                "type": "string"
                                            },
                                            "jvmOptions": {
                                                "description": "JVM Options for pods.",
                                                "properties": {
                                                    "-XX": {
                                                        "description": "A map of -XX options to the JVM.",
                                                        "type": "object"
                                                    },
                                                    "-Xms": {
                                                        "description": "-Xms option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "-Xmx": {
                                                        "description": "-Xmx option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "gcLoggingEnabled": {
                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                        "type": "boolean"
                                                    },
                                                    "javaSystemProperties": {
                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The system property name.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The system property value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "livenessProbe": {
                                                "description": "Pod liveness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "Logging configuration for MirrorMaker.",
                                                "properties": {
                                                    "loggers": {
                                                        "description": "A Map from logger name to logger level.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                        "enum": [
                                                            "inline",
                                                            "external"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "metrics": {
                                                "description": "The Prometheus JMX Exporter configuration. See {JMXExporter} for details of the structure of this configuration.",
                                                "type": "object"
                                            },
                                            "producer": {
                                                "description": "Configuration of target cluster.",
                                                "properties": {
                                                    "abortOnSendFailure": {
                                                        "description": "Flag to set the MirrorMaker to exit on a failed send. Default value is `true`.",
                                                        "type": "boolean"
                                                    },
                                                    "authentication": {
                                                        "description": "Authentication configuration for connecting to the cluster.",
                                                        "properties": {
                                                            "accessToken": {
                                                                "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "accessTokenIsJwt": {
                                                                "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                "type": "boolean"
                                                            },
                                                            "certificateAndKey": {
                                                                "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                                "properties": {
                                                                    "certificate": {
                                                                        "description": "The name of the file certificate in the Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "description": "The name of the private key in the Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Secret containing the certificate.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "certificate",
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "clientId": {
                                                                "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "clientSecret": {
                                                                "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "disableTlsHostnameVerification": {
                                                                "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                "type": "boolean"
                                                            },
                                                            "maxTokenExpirySeconds": {
                                                                "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                                "type": "integer"
                                                            },
                                                            "passwordSecret": {
                                                                "description": "Reference to the `Secret` which holds the password.",
                                                                "properties": {
                                                                    "password": {
                                                                        "description": "The name of the key in the Secret under which the password is stored.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Secret containing the password.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "password",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "refreshToken": {
                                                                "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "scope": {
                                                                "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                                "type": "string"
                                                            },
                                                            "tlsTrustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tokenEndpointUri": {
                                                                "description": "Authorization server token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                                "enum": [
                                                                    "tls",
                                                                    "scram-sha-512",
                                                                    "plain",
                                                                    "oauth"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "username": {
                                                                "description": "Username used for the authentication.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "bootstrapServers": {
                                                        "description": "A list of host:port pairs for establishing the initial connection to the Kafka cluster.",
                                                        "type": "string"
                                                    },
                                                    "config": {
                                                        "description": "The MirrorMaker producer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration for connecting MirrorMaker to the cluster.",
                                                        "properties": {
                                                            "trustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "bootstrapServers"
                                                ],
                                                "type": "object"
                                            },
                                            "readinessProbe": {
                                                "description": "Pod readiness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "replicas": {
                                                "description": "The number of pods in the `Deployment`.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "resources": {
                                                "description": "CPU and memory resources to reserve.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template to specify how Kafka MirrorMaker resources, `Deployments` and `Pods`, are generated.",
                                                "properties": {
                                                    "deployment": {
                                                        "description": "Template for Kafka MirrorMaker `Deployment`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "mirrorMakerContainer": {
                                                        "description": "Template for Kafka MirrorMaker container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pod": {
                                                        "description": "Template for Kafka MirrorMaker `Pods`.",
                                                        "properties": {
                                                            "affinity": {
                                                                "description": "The pod's affinity rules.",
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hostAliases": {
                                                                "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                "items": {
                                                                    "properties": {
                                                                        "hostnames": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ip": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "imagePullSecrets": {
                                                                "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "priorityClassName": {
                                                                "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                "type": "string"
                                                            },
                                                            "securityContext": {
                                                                "description": "Configures pod-level security attributes and common container settings.",
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fsGroupChangePolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "terminationGracePeriodSeconds": {
                                                                "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "tolerations": {
                                                                "description": "The pod's tolerations.",
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podDisruptionBudget": {
                                                        "description": "Template for Kafka MirrorMaker `PodDisruptionBudget`.",
                                                        "properties": {
                                                            "maxUnavailable": {
                                                                "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tolerations": {
                                                "description": "The pod's tolerations.",
                                                "items": {
                                                    "properties": {
                                                        "effect": {
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "tracing": {
                                                "description": "The configuration of tracing in Kafka MirrorMaker.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
                                                        "enum": [
                                                            "jaeger"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "version": {
                                                "description": "The Kafka MirrorMaker version. Defaults to {DefaultKafkaVersion}. Consult the documentation to understand the process required to upgrade or downgrade the version.",
                                                "type": "string"
                                            },
                                            "whitelist": {
                                                "description": "List of topics which are included for mirroring. This option allows any regular expression using Java-style regular expressions. Mirroring two topics named A and B is achieved by using the whitelist `'A\\|B'`. Or, as a special case, you can mirror all topics using the whitelist '*'. You can also specify multiple regular expressions separated by commas.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "replicas",
                                            "whitelist",
                                            "consumer",
                                            "producer"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of Kafka MirrorMaker.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "labelSelector": {
                                                "description": "Label selector for pods providing this resource.",
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The current number of pods being used to provide this resource.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "scale": {
                                "labelSelectorPath": ".status.labelSelector",
                                "specReplicasPath": ".spec.replicas",
                                "statusReplicasPath": ".status.replicas"
                            },
                            "status": {}
                        }
                    },
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka MirrorMaker replicas",
                                "jsonPath": ".spec.replicas",
                                "name": "Desired replicas",
                                "type": "integer"
                            },
                            {
                                "description": "The boostrap servers for the consumer",
                                "jsonPath": ".spec.consumer.bootstrapServers",
                                "name": "Consumer Bootstrap Servers",
                                "priority": 1,
                                "type": "string"
                            },
                            {
                                "description": "The boostrap servers for the producer",
                                "jsonPath": ".spec.producer.bootstrapServers",
                                "name": "Producer Bootstrap Servers",
                                "priority": 1,
                                "type": "string"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of Kafka MirrorMaker.",
                                        "properties": {
                                            "affinity": {
                                                "description": "The pod's affinity rules.",
                                                "properties": {
                                                    "nodeAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "preference": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "properties": {
                                                                    "nodeSelectorTerms": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchFields": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podAntiAffinity": {
                                                        "properties": {
                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "podAffinityTerm": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                "items": {
                                                                    "properties": {
                                                                        "labelSelector": {
                                                                            "properties": {
                                                                                "matchExpressions": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "operator": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "values": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "matchLabels": {
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "namespaces": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "topologyKey": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "consumer": {
                                                "description": "Configuration of source cluster.",
                                                "properties": {
                                                    "authentication": {
                                                        "description": "Authentication configuration for connecting to the cluster.",
                                                        "properties": {
                                                            "accessToken": {
                                                                "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "accessTokenIsJwt": {
                                                                "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                "type": "boolean"
                                                            },
                                                            "certificateAndKey": {
                                                                "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                                "properties": {
                                                                    "certificate": {
                                                                        "description": "The name of the file certificate in the Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "description": "The name of the private key in the Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Secret containing the certificate.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "certificate",
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "clientId": {
                                                                "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "clientSecret": {
                                                                "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "disableTlsHostnameVerification": {
                                                                "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                "type": "boolean"
                                                            },
                                                            "maxTokenExpirySeconds": {
                                                                "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                                "type": "integer"
                                                            },
                                                            "passwordSecret": {
                                                                "description": "Reference to the `Secret` which holds the password.",
                                                                "properties": {
                                                                    "password": {
                                                                        "description": "The name of the key in the Secret under which the password is stored.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Secret containing the password.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "password",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "refreshToken": {
                                                                "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "scope": {
                                                                "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                                "type": "string"
                                                            },
                                                            "tlsTrustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tokenEndpointUri": {
                                                                "description": "Authorization server token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                                "enum": [
                                                                    "tls",
                                                                    "scram-sha-512",
                                                                    "plain",
                                                                    "oauth"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "username": {
                                                                "description": "Username used for the authentication.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "bootstrapServers": {
                                                        "description": "A list of host:port pairs for establishing the initial connection to the Kafka cluster.",
                                                        "type": "string"
                                                    },
                                                    "config": {
                                                        "description": "The MirrorMaker consumer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                        "type": "object"
                                                    },
                                                    "groupId": {
                                                        "description": "A unique string that identifies the consumer group this consumer belongs to.",
                                                        "type": "string"
                                                    },
                                                    "numStreams": {
                                                        "description": "Specifies the number of consumer stream threads to create.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "offsetCommitInterval": {
                                                        "description": "Specifies the offset auto-commit interval in ms. Default value is 60000.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration for connecting MirrorMaker to the cluster.",
                                                        "properties": {
                                                            "trustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "groupId",
                                                    "bootstrapServers"
                                                ],
                                                "type": "object"
                                            },
                                            "image": {
                                                "description": "The docker image for the pods.",
                                                "type": "string"
                                            },
                                            "jvmOptions": {
                                                "description": "JVM Options for pods.",
                                                "properties": {
                                                    "-XX": {
                                                        "description": "A map of -XX options to the JVM.",
                                                        "type": "object"
                                                    },
                                                    "-Xms": {
                                                        "description": "-Xms option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "-Xmx": {
                                                        "description": "-Xmx option to to the JVM.",
                                                        "pattern": "[0-9]+[mMgG]?",
                                                        "type": "string"
                                                    },
                                                    "gcLoggingEnabled": {
                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                        "type": "boolean"
                                                    },
                                                    "javaSystemProperties": {
                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The system property name.",
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "description": "The system property value.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "livenessProbe": {
                                                "description": "Pod liveness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "logging": {
                                                "description": "Logging configuration for MirrorMaker.",
                                                "properties": {
                                                    "loggers": {
                                                        "description": "A Map from logger name to logger level.",
                                                        "type": "object"
                                                    },
                                                    "name": {
                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                        "enum": [
                                                            "inline",
                                                            "external"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "metrics": {
                                                "description": "The Prometheus JMX Exporter configuration. See {JMXExporter} for details of the structure of this configuration.",
                                                "type": "object"
                                            },
                                            "producer": {
                                                "description": "Configuration of target cluster.",
                                                "properties": {
                                                    "abortOnSendFailure": {
                                                        "description": "Flag to set the MirrorMaker to exit on a failed send. Default value is `true`.",
                                                        "type": "boolean"
                                                    },
                                                    "authentication": {
                                                        "description": "Authentication configuration for connecting to the cluster.",
                                                        "properties": {
                                                            "accessToken": {
                                                                "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "accessTokenIsJwt": {
                                                                "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                "type": "boolean"
                                                            },
                                                            "certificateAndKey": {
                                                                "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                                                                "properties": {
                                                                    "certificate": {
                                                                        "description": "The name of the file certificate in the Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "key": {
                                                                        "description": "The name of the private key in the Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Secret containing the certificate.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "certificate",
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "clientId": {
                                                                "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "clientSecret": {
                                                                "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "disableTlsHostnameVerification": {
                                                                "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                "type": "boolean"
                                                            },
                                                            "maxTokenExpirySeconds": {
                                                                "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                                                                "type": "integer"
                                                            },
                                                            "passwordSecret": {
                                                                "description": "Reference to the `Secret` which holds the password.",
                                                                "properties": {
                                                                    "password": {
                                                                        "description": "The name of the key in the Secret under which the password is stored.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Secret containing the password.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "password",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "refreshToken": {
                                                                "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                                                                "properties": {
                                                                    "key": {
                                                                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                        "type": "string"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "key",
                                                                    "secretName"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "scope": {
                                                                "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                                                                "type": "string"
                                                            },
                                                            "tlsTrustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tokenEndpointUri": {
                                                                "description": "Authorization server token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                                                                "enum": [
                                                                    "tls",
                                                                    "scram-sha-512",
                                                                    "plain",
                                                                    "oauth"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "username": {
                                                                "description": "Username used for the authentication.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "bootstrapServers": {
                                                        "description": "A list of host:port pairs for establishing the initial connection to the Kafka cluster.",
                                                        "type": "string"
                                                    },
                                                    "config": {
                                                        "description": "The MirrorMaker producer config. Properties with the following prefixes cannot be set: ssl., bootstrap.servers, sasl., security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration for connecting MirrorMaker to the cluster.",
                                                        "properties": {
                                                            "trustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "bootstrapServers"
                                                ],
                                                "type": "object"
                                            },
                                            "readinessProbe": {
                                                "description": "Pod readiness checking.",
                                                "properties": {
                                                    "failureThreshold": {
                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "initialDelaySeconds": {
                                                        "description": "The initial delay before first the health is first checked.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "periodSeconds": {
                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "successThreshold": {
                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                        "type": "integer"
                                                    },
                                                    "timeoutSeconds": {
                                                        "description": "The timeout for each attempted health check.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "replicas": {
                                                "description": "The number of pods in the `Deployment`.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "resources": {
                                                "description": "CPU and memory resources to reserve.",
                                                "properties": {
                                                    "limits": {
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template to specify how Kafka MirrorMaker resources, `Deployments` and `Pods`, are generated.",
                                                "properties": {
                                                    "deployment": {
                                                        "description": "Template for Kafka MirrorMaker `Deployment`.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "mirrorMakerContainer": {
                                                        "description": "Template for Kafka MirrorMaker container.",
                                                        "properties": {
                                                            "env": {
                                                                "description": "Environment variables which should be applied to the container.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The environment variable key.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The environment variable value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "description": "Security context for the container.",
                                                                "properties": {
                                                                    "allowPrivilegeEscalation": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "capabilities": {
                                                                        "properties": {
                                                                            "add": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "drop": {
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "privileged": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "procMount": {
                                                                        "type": "string"
                                                                    },
                                                                    "readOnlyRootFilesystem": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pod": {
                                                        "description": "Template for Kafka MirrorMaker `Pods`.",
                                                        "properties": {
                                                            "affinity": {
                                                                "description": "The pod's affinity rules.",
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hostAliases": {
                                                                "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                "items": {
                                                                    "properties": {
                                                                        "hostnames": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "ip": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "imagePullSecrets": {
                                                                "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "priorityClassName": {
                                                                "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                "type": "string"
                                                            },
                                                            "securityContext": {
                                                                "description": "Configures pod-level security attributes and common container settings.",
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fsGroupChangePolicy": {
                                                                        "type": "string"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "windowsOptions": {
                                                                        "properties": {
                                                                            "gmsaCredentialSpec": {
                                                                                "type": "string"
                                                                            },
                                                                            "gmsaCredentialSpecName": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsUserName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "terminationGracePeriodSeconds": {
                                                                "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "tolerations": {
                                                                "description": "The pod's tolerations.",
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podDisruptionBudget": {
                                                        "description": "Template for Kafka MirrorMaker `PodDisruptionBudget`.",
                                                        "properties": {
                                                            "maxUnavailable": {
                                                                "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "metadata": {
                                                                "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "tolerations": {
                                                "description": "The pod's tolerations.",
                                                "items": {
                                                    "properties": {
                                                        "effect": {
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "tracing": {
                                                "description": "The configuration of tracing in Kafka MirrorMaker.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
                                                        "enum": [
                                                            "jaeger"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "version": {
                                                "description": "The Kafka MirrorMaker version. Defaults to {DefaultKafkaVersion}. Consult the documentation to understand the process required to upgrade or downgrade the version.",
                                                "type": "string"
                                            },
                                            "whitelist": {
                                                "description": "List of topics which are included for mirroring. This option allows any regular expression using Java-style regular expressions. Mirroring two topics named A and B is achieved by using the whitelist `'A\\|B'`. Or, as a special case, you can mirror all topics using the whitelist '*'. You can also specify multiple regular expressions separated by commas.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "replicas",
                                            "whitelist",
                                            "consumer",
                                            "producer"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of Kafka MirrorMaker.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "labelSelector": {
                                                "description": "Label selector for pods providing this resource.",
                                                "type": "string"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The current number of pods being used to provide this resource.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": false,
                        "subresources": {
                            "scale": {
                                "labelSelectorPath": ".status.labelSelector",
                                "specReplicasPath": ".spec.replicas",
                                "statusReplicasPath": ".status.replicas"
                            },
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaMirrorMaker",
                    "listKind": "KafkaMirrorMakerList",
                    "plural": "kafkamirrormakers",
                    "shortNames": [
                        "kmm"
                    ],
                    "singular": "kafkamirrormaker"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:05Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:08Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:07Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkarebalances.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkarebalances.kafka.strimzi.io",
                "resourceVersion": "39682",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkarebalances.kafka.strimzi.io",
                "uid": "e87d8c61-182e-4a7d-9176-29b4958ca8d2"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaRebalance",
                    "listKind": "KafkaRebalanceList",
                    "plural": "kafkarebalances",
                    "shortNames": [
                        "kr"
                    ],
                    "singular": "kafkarebalance"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The name of the Kafka cluster this resource rebalances",
                                "jsonPath": ".metadata.labels.strimzi\\.io/cluster",
                                "name": "Cluster",
                                "type": "string"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka rebalance.",
                                        "properties": {
                                            "concurrentIntraBrokerPartitionMovements": {
                                                "description": "The upper bound of ongoing partition replica movements between disks within each broker. Default is 2.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "concurrentLeaderMovements": {
                                                "description": "The upper bound of ongoing partition leadership movements. Default is 1000.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "concurrentPartitionMovementsPerBroker": {
                                                "description": "The upper bound of ongoing partition replica movements going into/out of each broker. Default is 5.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "excludedTopics": {
                                                "description": "A regular expression where any matching topics will be excluded from the calculation of optimization proposals. This expression will be parsed by the java.util.regex.Pattern class; for more information on the supported formar consult the documentation for that class.",
                                                "type": "string"
                                            },
                                            "goals": {
                                                "description": "A list of goals, ordered by decreasing priority, to use for generating and executing the rebalance proposal. The supported goals are available at https://github.com/linkedin/cruise-control#goals. If an empty goals list is provided, the goals declared in the default.goals Cruise Control configuration parameter are used.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "replicaMovementStrategies": {
                                                "description": "A list of strategy class names used to determine the execution order for the replica movements in the generated optimization proposal. By default BaseReplicaMovementStrategy is used, which will execute the replica movements in the order that they were generated.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "replicationThrottle": {
                                                "description": "The upper bound, in bytes per second, on the bandwidth used to move replicas. There is no limit by default.",
                                                "minimum": 0,
                                                "type": "integer"
                                            },
                                            "skipHardGoalCheck": {
                                                "description": "Whether to allow the hard goals specified in the Kafka CR to be skipped in optimization proposal generation. This can be useful when some of those hard goals are preventing a balance solution being found. Default is false.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka rebalance.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "optimizationResult": {
                                                "description": "A JSON object describing the optimization result.",
                                                "type": "object"
                                            },
                                            "sessionId": {
                                                "description": "The session identifier for requests to Cruise Control pertaining to this KafkaRebalance resource. This is used by the Kafka Rebalance operator to track the status of ongoing rebalancing operations.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaRebalance",
                    "listKind": "KafkaRebalanceList",
                    "plural": "kafkarebalances",
                    "shortNames": [
                        "kr"
                    ],
                    "singular": "kafkarebalance"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:08Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:11Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:04Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkas.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkas.kafka.strimzi.io",
                "resourceVersion": "39664",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkas.kafka.strimzi.io",
                "uid": "1e39d943-32e4-409d-97ea-8b336a4b192b"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "Kafka",
                    "listKind": "KafkaList",
                    "plural": "kafkas",
                    "shortNames": [
                        "k"
                    ],
                    "singular": "kafka"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka replicas in the cluster",
                                "jsonPath": ".spec.kafka.replicas",
                                "name": "Desired Kafka replicas",
                                "type": "integer"
                            },
                            {
                                "description": "The desired number of ZooKeeper replicas in the cluster",
                                "jsonPath": ".spec.zookeeper.replicas",
                                "name": "Desired ZK replicas",
                                "type": "integer"
                            }
                        ],
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka and ZooKeeper clusters, and Topic Operator.",
                                        "properties": {
                                            "clientsCa": {
                                                "description": "Configuration of the clients certificate authority.",
                                                "properties": {
                                                    "certificateExpirationPolicy": {
                                                        "description": "How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.",
                                                        "enum": [
                                                            "renew-certificate",
                                                            "replace-key"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "generateCertificateAuthority": {
                                                        "description": "If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.",
                                                        "type": "boolean"
                                                    },
                                                    "renewalDays": {
                                                        "description": "The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "validityDays": {
                                                        "description": "The number of days generated certificates should be valid for. The default is 365.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "clusterCa": {
                                                "description": "Configuration of the cluster certificate authority.",
                                                "properties": {
                                                    "certificateExpirationPolicy": {
                                                        "description": "How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.",
                                                        "enum": [
                                                            "renew-certificate",
                                                            "replace-key"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "generateCertificateAuthority": {
                                                        "description": "If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.",
                                                        "type": "boolean"
                                                    },
                                                    "renewalDays": {
                                                        "description": "The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "validityDays": {
                                                        "description": "The number of days generated certificates should be valid for. The default is 365.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "cruiseControl": {
                                                "description": "Configuration for Cruise Control deployment. Deploys a Cruise Control instance when specified.",
                                                "properties": {
                                                    "brokerCapacity": {
                                                        "description": "The Cruise Control `brokerCapacity` configuration.",
                                                        "properties": {
                                                            "cpuUtilization": {
                                                                "description": "Broker capacity for CPU resource utilization as a percentage (0 - 100).",
                                                                "maximum": 100,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "disk": {
                                                                "description": "Broker capacity for disk in bytes, for example, 100Gi.",
                                                                "pattern": "^[0-9]+([.][0-9]*)?([KMGTPE]i?|e[0-9]+)?$",
                                                                "type": "string"
                                                            },
                                                            "inboundNetwork": {
                                                                "description": "Broker capacity for inbound network throughput in bytes per second, for example, 10000KB/s.",
                                                                "pattern": "[0-9]+([KMG]i?)?B/s",
                                                                "type": "string"
                                                            },
                                                            "outboundNetwork": {
                                                                "description": "Broker capacity for outbound network throughput in bytes per second, for example 10000KB/s.",
                                                                "pattern": "[0-9]+([KMG]i?)?B/s",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "config": {
                                                        "description": "The Cruise Control configuration. For a full list of configuration options refer to https://github.com/linkedin/cruise-control/wiki/Configurations. Note that properties with the following prefixes cannot be set: bootstrap.servers, client.id, zookeeper., network., security., failed.brokers.zk.path,webserver.http., webserver.api.urlprefix, webserver.session.path, webserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.bootstrap.servers, metric.reporter.topic, partition.metric.sample.store.topic, broker.metric.sample.store.topic,capacity.config.file, self.healing., anomaly.detection., ssl.",
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "description": "The docker image for the pods.",
                                                        "type": "string"
                                                    },
                                                    "jvmOptions": {
                                                        "description": "JVM Options for the Cruise Control container.",
                                                        "properties": {
                                                            "-XX": {
                                                                "description": "A map of -XX options to the JVM.",
                                                                "type": "object"
                                                            },
                                                            "-Xms": {
                                                                "description": "-Xms option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "-Xmx": {
                                                                "description": "-Xmx option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "gcLoggingEnabled": {
                                                                "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                "type": "boolean"
                                                            },
                                                            "javaSystemProperties": {
                                                                "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The system property name.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The system property value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness checking for the Cruise Control container.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Logging configuration (log4j1) for Cruise Control.",
                                                        "properties": {
                                                            "loggers": {
                                                                "description": "A Map from logger name to logger level.",
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Logging type, must be either 'inline' or 'external'.",
                                                                "enum": [
                                                                    "inline",
                                                                    "external"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "metrics": {
                                                        "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                        "type": "object"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness checking for the Cruise Control container.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve for the Cruise Control container.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template to specify how Cruise Control resources, `Deployments` and `Pods`, are generated.",
                                                        "properties": {
                                                            "apiService": {
                                                                "description": "Template for Cruise Control API `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "cruiseControlContainer": {
                                                                "description": "Template for the Cruise Control container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "deployment": {
                                                                "description": "Template for Cruise Control `Deployment`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for Cruise Control `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podDisruptionBudget": {
                                                                "description": "Template for Cruise Control `PodDisruptionBudget`.",
                                                                "properties": {
                                                                    "maxUnavailable": {
                                                                        "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tlsSidecarContainer": {
                                                                "description": "Template for the Cruise Control TLS sidecar container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "entityOperator": {
                                                "description": "Configuration of the Entity Operator.",
                                                "properties": {
                                                    "affinity": {
                                                        "description": "The pod's affinity rules.",
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template for Entity Operator resources. The template allows users to specify how is the `Deployment` and `Pods` generated.",
                                                        "properties": {
                                                            "deployment": {
                                                                "description": "Template for Entity Operator `Deployment`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for Entity Operator `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tlsSidecarContainer": {
                                                                "description": "Template for the Entity Operator TLS sidecar container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "topicOperatorContainer": {
                                                                "description": "Template for the Entity Topic Operator container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "userOperatorContainer": {
                                                                "description": "Template for the Entity User Operator container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tolerations": {
                                                        "description": "The pod's tolerations.",
                                                        "items": {
                                                            "properties": {
                                                                "effect": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "type": "string"
                                                                },
                                                                "tolerationSeconds": {
                                                                    "type": "integer"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "topicOperator": {
                                                        "description": "Configuration of the Topic Operator.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The image to use for the Topic Operator.",
                                                                "type": "string"
                                                            },
                                                            "jvmOptions": {
                                                                "description": "JVM Options for pods.",
                                                                "properties": {
                                                                    "-XX": {
                                                                        "description": "A map of -XX options to the JVM.",
                                                                        "type": "object"
                                                                    },
                                                                    "-Xms": {
                                                                        "description": "-Xms option to to the JVM.",
                                                                        "pattern": "[0-9]+[mMgG]?",
                                                                        "type": "string"
                                                                    },
                                                                    "-Xmx": {
                                                                        "description": "-Xmx option to to the JVM.",
                                                                        "pattern": "[0-9]+[mMgG]?",
                                                                        "type": "string"
                                                                    },
                                                                    "gcLoggingEnabled": {
                                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "javaSystemProperties": {
                                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The system property name.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The system property value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logging": {
                                                                "description": "Logging configuration.",
                                                                "properties": {
                                                                    "loggers": {
                                                                        "description": "A Map from logger name to logger level.",
                                                                        "type": "object"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                                        "enum": [
                                                                            "inline",
                                                                            "external"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "reconciliationIntervalSeconds": {
                                                                "description": "Interval between periodic reconciliations.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "topicMetadataMaxAttempts": {
                                                                "description": "The number of attempts at getting topic metadata.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "watchedNamespace": {
                                                                "description": "The namespace the Topic Operator should watch.",
                                                                "type": "string"
                                                            },
                                                            "zookeeperSessionTimeoutSeconds": {
                                                                "description": "Timeout for the ZooKeeper session.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "userOperator": {
                                                        "description": "Configuration of the User Operator.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The image to use for the User Operator.",
                                                                "type": "string"
                                                            },
                                                            "jvmOptions": {
                                                                "description": "JVM Options for pods.",
                                                                "properties": {
                                                                    "-XX": {
                                                                        "description": "A map of -XX options to the JVM.",
                                                                        "type": "object"
                                                                    },
                                                                    "-Xms": {
                                                                        "description": "-Xms option to to the JVM.",
                                                                        "pattern": "[0-9]+[mMgG]?",
                                                                        "type": "string"
                                                                    },
                                                                    "-Xmx": {
                                                                        "description": "-Xmx option to to the JVM.",
                                                                        "pattern": "[0-9]+[mMgG]?",
                                                                        "type": "string"
                                                                    },
                                                                    "gcLoggingEnabled": {
                                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "javaSystemProperties": {
                                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The system property name.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The system property value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logging": {
                                                                "description": "Logging configuration.",
                                                                "properties": {
                                                                    "loggers": {
                                                                        "description": "A Map from logger name to logger level.",
                                                                        "type": "object"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                                        "enum": [
                                                                            "inline",
                                                                            "external"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "reconciliationIntervalSeconds": {
                                                                "description": "Interval between periodic reconciliations.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "watchedNamespace": {
                                                                "description": "The namespace the User Operator should watch.",
                                                                "type": "string"
                                                            },
                                                            "zookeeperSessionTimeoutSeconds": {
                                                                "description": "Timeout for the ZooKeeper session.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "jmxTrans": {
                                                "description": "Configuration for JmxTrans. When the property is present a JmxTrans deployment is created for gathering JMX metrics from each Kafka broker. For more information see https://github.com/jmxtrans/jmxtrans[JmxTrans GitHub].",
                                                "properties": {
                                                    "image": {
                                                        "description": "The image to use for the JmxTrans.",
                                                        "type": "string"
                                                    },
                                                    "kafkaQueries": {
                                                        "description": "Queries to send to the Kafka brokers to define what data should be read from each broker. For more information on these properties see, xref:type-JmxTransQueryTemplate-reference[`JmxTransQueryTemplate` schema reference].",
                                                        "items": {
                                                            "properties": {
                                                                "attributes": {
                                                                    "description": "Determine which attributes of the targeted MBean should be included.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "outputs": {
                                                                    "description": "List of the names of output definitions specified in the spec.kafka.jmxTrans.outputDefinitions that have defined where JMX metrics are pushed to, and in which data format.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "targetMBean": {
                                                                    "description": "If using wildcards instead of a specific MBean then the data is gathered from multiple MBeans. Otherwise if specifying an MBean then data is gathered from that specified MBean.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "targetMBean",
                                                                "attributes",
                                                                "outputs"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "logLevel": {
                                                        "description": "Sets the logging level of the JmxTrans deployment.For more information see, https://github.com/jmxtrans/jmxtrans-agent/wiki/Troubleshooting[JmxTrans Logging Level].",
                                                        "type": "string"
                                                    },
                                                    "outputDefinitions": {
                                                        "description": "Defines the output hosts that will be referenced later on. For more information on these properties see, xref:type-JmxTransOutputDefinitionTemplate-reference[`JmxTransOutputDefinitionTemplate` schema reference].",
                                                        "items": {
                                                            "properties": {
                                                                "flushDelayInSeconds": {
                                                                    "description": "How many seconds the JmxTrans waits before pushing a new set of data out.",
                                                                    "type": "integer"
                                                                },
                                                                "host": {
                                                                    "description": "The DNS/hostname of the remote host that the data is pushed to.",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "Template for setting the name of the output definition. This is used to identify where to send the results of queries should be sent.",
                                                                    "type": "string"
                                                                },
                                                                "outputType": {
                                                                    "description": "Template for setting the format of the data that will be pushed.For more information see https://github.com/jmxtrans/jmxtrans/wiki/OutputWriters[JmxTrans OutputWriters].",
                                                                    "type": "string"
                                                                },
                                                                "port": {
                                                                    "description": "The port of the remote host that the data is pushed to.",
                                                                    "type": "integer"
                                                                },
                                                                "typeNames": {
                                                                    "description": "Template for filtering data to be included in response to a wildcard query. For more information see https://github.com/jmxtrans/jmxtrans/wiki/Queries[JmxTrans queries].",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "outputType",
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template for JmxTrans resources.",
                                                        "properties": {
                                                            "container": {
                                                                "description": "Template for JmxTrans container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "deployment": {
                                                                "description": "Template for JmxTrans `Deployment`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for JmxTrans `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "outputDefinitions",
                                                    "kafkaQueries"
                                                ],
                                                "type": "object"
                                            },
                                            "kafka": {
                                                "description": "Configuration of the Kafka cluster.",
                                                "properties": {
                                                    "affinity": {
                                                        "description": "The pod's affinity rules.",
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "authorization": {
                                                        "description": "Authorization configuration for Kafka brokers.",
                                                        "properties": {
                                                            "allowOnError": {
                                                                "description": "Defines whether a Kafka client should be allowed or denied by default when the authorizer fails to query the Open Policy Agent, for example, when it is temporarily unavailable). Defaults to `false` - all actions will be denied.",
                                                                "type": "boolean"
                                                            },
                                                            "clientId": {
                                                                "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "delegateToKafkaAcls": {
                                                                "description": "Whether authorization decision should be delegated to the 'Simple' authorizer if DENIED by Keycloak Authorization Services policies. Default value is `false`.",
                                                                "type": "boolean"
                                                            },
                                                            "disableTlsHostnameVerification": {
                                                                "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                "type": "boolean"
                                                            },
                                                            "expireAfterMs": {
                                                                "description": "The expiration of the records kept in the local cache to avoid querying the Open Policy Agent for every request. Defines how often the cached authorization decisions are reloaded from the Open Policy Agent server. In milliseconds. Defaults to `3600000`.",
                                                                "type": "integer"
                                                            },
                                                            "grantsRefreshPeriodSeconds": {
                                                                "description": "The time between two consecutive grants refresh runs in seconds. The default value is 60.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "grantsRefreshPoolSize": {
                                                                "description": "The number of threads to use to refresh grants for active sessions. The more threads, the more parallelism, so the sooner the job completes. However, using more threads places a heavier load on the authorization server. The default value is 5.",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "initialCacheCapacity": {
                                                                "description": "Initial capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request Defaults to `5000`.",
                                                                "type": "integer"
                                                            },
                                                            "maximumCacheSize": {
                                                                "description": "Maximum capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request. Defaults to `50000`.",
                                                                "type": "integer"
                                                            },
                                                            "superUsers": {
                                                                "description": "List of super users. Should contain list of user principals which should get unlimited access rights.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tlsTrustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tokenEndpointUri": {
                                                                "description": "Authorization server token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Authorization type. Currently, the supported types are `simple`, `keycloak`, and `opa`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization. `keycloak` authorization type uses Keycloak Authorization Services for authorization. `opa` authorization type uses Open Policy Agent based authorization.",
                                                                "enum": [
                                                                    "simple",
                                                                    "opa",
                                                                    "keycloak"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "description": "The URL used to connect to the Open Policy Agent server. The URL has to include the policy which will be queried by the authorizer. This option is required.",
                                                                "example": "http://opa:8181/v1/data/kafka/authz/allow",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "brokerRackInitImage": {
                                                        "description": "The image of the init container used for initializing the `broker.rack`.",
                                                        "type": "string"
                                                    },
                                                    "config": {
                                                        "description": "Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., principal.builder.class, log.dir, zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers (with the exception of: zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols,cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms,cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms).",
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "description": "The docker image for the pods. The default value depends on the configured `Kafka.spec.kafka.version`.",
                                                        "type": "string"
                                                    },
                                                    "jmxOptions": {
                                                        "description": "JMX Options for Kafka brokers.",
                                                        "properties": {
                                                            "authentication": {
                                                                "description": "Authentication configuration for connecting to the Kafka JMX port.",
                                                                "properties": {
                                                                    "type": {
                                                                        "description": "Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.",
                                                                        "enum": [
                                                                            "password"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "jvmOptions": {
                                                        "description": "JVM Options for pods.",
                                                        "properties": {
                                                            "-XX": {
                                                                "description": "A map of -XX options to the JVM.",
                                                                "type": "object"
                                                            },
                                                            "-Xms": {
                                                                "description": "-Xms option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "-Xmx": {
                                                                "description": "-Xmx option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "gcLoggingEnabled": {
                                                                "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                "type": "boolean"
                                                            },
                                                            "javaSystemProperties": {
                                                                "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The system property name.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The system property value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "listeners": {
                                                        "oneOf": [
                                                            {
                                                                "items": {
                                                                    "properties": {
                                                                        "authentication": {
                                                                            "description": "Authentication configuration for this listener.",
                                                                            "properties": {
                                                                                "accessTokenIsJwt": {
                                                                                    "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "checkAccessTokenType": {
                                                                                    "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "checkIssuer": {
                                                                                    "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "clientId": {
                                                                                    "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                    "type": "string"
                                                                                },
                                                                                "clientSecret": {
                                                                                    "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "secretName": {
                                                                                            "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key",
                                                                                        "secretName"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "disableTlsHostnameVerification": {
                                                                                    "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "enableECDSA": {
                                                                                    "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. Default value is `false`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "fallbackUserNameClaim": {
                                                                                    "description": "The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.",
                                                                                    "type": "string"
                                                                                },
                                                                                "fallbackUserNamePrefix": {
                                                                                    "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                                                                                    "type": "string"
                                                                                },
                                                                                "introspectionEndpointUri": {
                                                                                    "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                                                                                    "type": "string"
                                                                                },
                                                                                "jwksEndpointUri": {
                                                                                    "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                                                                                    "type": "string"
                                                                                },
                                                                                "jwksExpirySeconds": {
                                                                                    "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                                                                                    "minimum": 1,
                                                                                    "type": "integer"
                                                                                },
                                                                                "jwksMinRefreshPauseSeconds": {
                                                                                    "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                                                                                    "minimum": 0,
                                                                                    "type": "integer"
                                                                                },
                                                                                "jwksRefreshSeconds": {
                                                                                    "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                                                                                    "minimum": 1,
                                                                                    "type": "integer"
                                                                                },
                                                                                "maxSecondsWithoutReauthentication": {
                                                                                    "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "tlsTrustedCertificates": {
                                                                                    "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "certificate": {
                                                                                                "description": "The name of the file certificate in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Secret containing the certificate.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "certificate",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "type": {
                                                                                    "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.",
                                                                                    "enum": [
                                                                                        "tls",
                                                                                        "scram-sha-512",
                                                                                        "oauth"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "userInfoEndpointUri": {
                                                                                    "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                                                                                    "type": "string"
                                                                                },
                                                                                "userNameClaim": {
                                                                                    "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                                                                                    "type": "string"
                                                                                },
                                                                                "validIssuerUri": {
                                                                                    "description": "URI of the token issuer used for authentication.",
                                                                                    "type": "string"
                                                                                },
                                                                                "validTokenType": {
                                                                                    "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "type"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "configuration": {
                                                                            "description": "Additional listener configuration.",
                                                                            "properties": {
                                                                                "bootstrap": {
                                                                                    "description": "Bootstrap configuration.",
                                                                                    "properties": {
                                                                                        "alternativeNames": {
                                                                                            "description": "Additional alternative names for the bootstrap service. The alternative names will be added to the list of subject alternative names of the TLS certificates.",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "annotations": {
                                                                                            "description": "Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners.",
                                                                                            "type": "object"
                                                                                        },
                                                                                        "host": {
                                                                                            "description": "The bootstrap host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "loadBalancerIP": {
                                                                                            "description": "The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "nodePort": {
                                                                                            "description": "Node port for the bootstrap service. This field can be used only with `nodeport` type listener.",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "brokerCertChainAndKey": {
                                                                                    "description": "Reference to the `Secret` which holds the certificate and private key pair which will be used for this listener. The certificate can optionally contain the whole chain. This field can be used only with listeners with enabled TLS encryption.",
                                                                                    "properties": {
                                                                                        "certificate": {
                                                                                            "description": "The name of the file certificate in the Secret.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "The name of the private key in the Secret.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "secretName": {
                                                                                            "description": "The name of the Secret containing the certificate.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "certificate",
                                                                                        "key",
                                                                                        "secretName"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "brokers": {
                                                                                    "description": "Per-broker configurations.",
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "advertisedHost": {
                                                                                                "description": "The host name which will be used in the brokers' `advertised.brokers`.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "advertisedPort": {
                                                                                                "description": "The port number which will be used in the brokers' `advertised.brokers`.",
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "annotations": {
                                                                                                "description": "Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners.",
                                                                                                "type": "object"
                                                                                            },
                                                                                            "broker": {
                                                                                                "description": "ID of the kafka broker (broker identifier). Broker IDs start from 0 and correspond to the number of broker replicas.",
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "host": {
                                                                                                "description": "The broker host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "loadBalancerIP": {
                                                                                                "description": "The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "nodePort": {
                                                                                                "description": "Node port for the per-broker service. This field can be used only with `nodeport` type listener.",
                                                                                                "type": "integer"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "broker"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "class": {
                                                                                    "description": "Configures the `Ingress` class that defines which `Ingress` controller will be used. If not set, the `Ingress` class is set to `nginx`. This field can be used only with `ingress` type listener.",
                                                                                    "type": "string"
                                                                                },
                                                                                "externalTrafficPolicy": {
                                                                                    "description": "Specifies whether the service routes external traffic to node-local or cluster-wide endpoints. `Cluster` may cause a second hop to another node and obscures the client source IP. `Local` avoids a second hop for LoadBalancer and Nodeport type services and preserves the client source IP (when supported by the infrastructure). If unspecified, Kubernetes will use `Cluster` as the default.This field can be used only with `loadbalancer` or `nodeport` type listener.",
                                                                                    "enum": [
                                                                                        "Local",
                                                                                        "Cluster"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "loadBalancerSourceRanges": {
                                                                                    "description": "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to load balancer type listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/This field can be used only with `loadbalancer` type listener.",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "preferredNodePortAddressType": {
                                                                                    "description": "Defines which address type should be used as the node address. Available types are: `ExternalDNS`, `ExternalIP`, `InternalDNS`, `InternalIP` and `Hostname`. By default, the addresses will be used in the following order (the first one found will be used):\n* `ExternalDNS`\n* `ExternalIP`\n* `InternalDNS`\n* `InternalIP`\n* `Hostname`\n\nThis field can be used to select the address type which will be used as the preferred type and checked first. In case no address will be found for this address type, the other types will be used in the default order.This field can be used only with `nodeport` type listener..",
                                                                                    "enum": [
                                                                                        "ExternalIP",
                                                                                        "ExternalDNS",
                                                                                        "InternalIP",
                                                                                        "InternalDNS",
                                                                                        "Hostname"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "useServiceDnsDomain": {
                                                                                    "description": "Configures whether the Kubernetes service DNS domain should be used or not. If set to `true`, the generated addresses with contain the service DNS domain suffix (by default `.cluster.local`, can be configured using environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`). Defaults to `false`.This field can be used only with `internal` type listener.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of the listener. The name will be used to identify the listener and the related Kubernetes objects. The name has to be unique within given a Kafka cluster. The name can consist of lowercase characters and numbers and be up to 11 characters long.",
                                                                            "pattern": "^[a-z0-9]{1,11}$",
                                                                            "type": "string"
                                                                        },
                                                                        "networkPolicyPeers": {
                                                                            "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "ipBlock": {
                                                                                        "properties": {
                                                                                            "cidr": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "except": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "namespaceSelector": {
                                                                                        "properties": {
                                                                                            "matchExpressions": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "key": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "operator": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "values": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            },
                                                                                            "matchLabels": {
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "podSelector": {
                                                                                        "properties": {
                                                                                            "matchExpressions": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "key": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "operator": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "values": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            },
                                                                                            "matchLabels": {
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "port": {
                                                                            "description": "Port number used by the listener inside Kafka. The port number has to be unique within a given Kafka cluster. Allowed port numbers are 9092 and higher with the exception of ports 9404 and 9999, which are already used for Prometheus and JMX. Depending on the listener type, the port number might not be the same as the port number that connects Kafka clients.",
                                                                            "minimum": 9092,
                                                                            "type": "integer"
                                                                        },
                                                                        "tls": {
                                                                            "description": "Enables TLS encryption on the listener. This is a required property.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "Type of the listener. Currently the supported types are `internal`, `route`, `loadbalancer`, `nodeport` and `ingress`. \n\n* `internal` type exposes Kafka internally only within the Kubernetes cluster.\n* `route` type uses OpenShift Routes to expose Kafka.\n* `loadbalancer` type uses LoadBalancer type services to expose Kafka.\n* `nodeport` type uses NodePort type services to expose Kafka.\n* `ingress` type uses Kubernetes Nginx Ingress to expose Kafka.\n.",
                                                                            "enum": [
                                                                                "internal",
                                                                                "route",
                                                                                "loadbalancer",
                                                                                "nodeport",
                                                                                "ingress"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "port",
                                                                        "type",
                                                                        "tls"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "external": {
                                                                        "description": "Configures external listener on port 9094.",
                                                                        "properties": {
                                                                            "authentication": {
                                                                                "description": "Authentication configuration for Kafka brokers.",
                                                                                "properties": {
                                                                                    "accessTokenIsJwt": {
                                                                                        "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkAccessTokenType": {
                                                                                        "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkIssuer": {
                                                                                        "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "clientId": {
                                                                                        "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "clientSecret": {
                                                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "disableTlsHostnameVerification": {
                                                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "enableECDSA": {
                                                                                        "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "fallbackUserNameClaim": {
                                                                                        "description": "The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "fallbackUserNamePrefix": {
                                                                                        "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "introspectionEndpointUri": {
                                                                                        "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksEndpointUri": {
                                                                                        "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksExpirySeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksMinRefreshPauseSeconds": {
                                                                                        "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                                                                                        "minimum": 0,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksRefreshSeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "maxSecondsWithoutReauthentication": {
                                                                                        "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "tlsTrustedCertificates": {
                                                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "certificate": {
                                                                                                    "description": "The name of the file certificate in the Secret.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "secretName": {
                                                                                                    "description": "The name of the Secret containing the certificate.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "certificate",
                                                                                                "secretName"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.",
                                                                                        "enum": [
                                                                                            "tls",
                                                                                            "scram-sha-512",
                                                                                            "oauth"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userInfoEndpointUri": {
                                                                                        "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userNameClaim": {
                                                                                        "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validIssuerUri": {
                                                                                        "description": "URI of the token issuer used for authentication.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validTokenType": {
                                                                                        "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "class": {
                                                                                "description": "Configures the `Ingress` class that defines which `Ingress` controller will be used. If not set, the `Ingress` class is set to `nginx`.",
                                                                                "type": "string"
                                                                            },
                                                                            "configuration": {
                                                                                "description": "External listener configuration.",
                                                                                "properties": {
                                                                                    "bootstrap": {
                                                                                        "description": "External bootstrap ingress configuration.",
                                                                                        "properties": {
                                                                                            "address": {
                                                                                                "description": "Additional address name for the bootstrap service. The address will be added to the list of subject alternative names of the TLS certificates.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "dnsAnnotations": {
                                                                                                "description": "Annotations that will be added to the `Ingress` resource. You can use this field to configure DNS providers such as External DNS.",
                                                                                                "type": "object"
                                                                                            },
                                                                                            "host": {
                                                                                                "description": "Host for the bootstrap route. This field will be used in the Ingress resource.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "host"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "brokerCertChainAndKey": {
                                                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair. The certificate can optionally contain the whole chain.",
                                                                                        "properties": {
                                                                                            "certificate": {
                                                                                                "description": "The name of the file certificate in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "key": {
                                                                                                "description": "The name of the private key in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Secret containing the certificate.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "certificate",
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "brokers": {
                                                                                        "description": "External broker ingress configuration.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "advertisedHost": {
                                                                                                    "description": "The host name which will be used in the brokers' `advertised.brokers`.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "advertisedPort": {
                                                                                                    "description": "The port number which will be used in the brokers' `advertised.brokers`.",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "broker": {
                                                                                                    "description": "Id of the kafka broker (broker identifier).",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "dnsAnnotations": {
                                                                                                    "description": "Annotations that will be added to the `Ingress` resources for individual brokers. You can use this field to configure DNS providers such as External DNS.",
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "host": {
                                                                                                    "description": "Host for the broker ingress. This field will be used in the Ingress resource.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "host"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "networkPolicyPeers": {
                                                                                "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "ipBlock": {
                                                                                            "properties": {
                                                                                                "cidr": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "except": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaceSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "podSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "overrides": {
                                                                                "description": "Overrides for external bootstrap and broker services and externally advertised addresses.",
                                                                                "properties": {
                                                                                    "bootstrap": {
                                                                                        "description": "External bootstrap service configuration.",
                                                                                        "properties": {
                                                                                            "address": {
                                                                                                "description": "Additional address name for the bootstrap service. The address will be added to the list of subject alternative names of the TLS certificates.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "dnsAnnotations": {
                                                                                                "description": "Annotations that will be added to the `Service` resource. You can use this field to configure DNS providers such as External DNS.",
                                                                                                "type": "object"
                                                                                            },
                                                                                            "nodePort": {
                                                                                                "description": "Node port for the bootstrap service.",
                                                                                                "type": "integer"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "brokers": {
                                                                                        "description": "External broker services configuration.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "advertisedHost": {
                                                                                                    "description": "The host name which will be used in the brokers' `advertised.brokers`.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "advertisedPort": {
                                                                                                    "description": "The port number which will be used in the brokers' `advertised.brokers`.",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "broker": {
                                                                                                    "description": "Id of the kafka broker (broker identifier).",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "dnsAnnotations": {
                                                                                                    "description": "Annotations that will be added to the `Service` resources for individual brokers. You can use this field to configure DNS providers such as External DNS.",
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "nodePort": {
                                                                                                    "description": "Node port for the broker service.",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "tls": {
                                                                                "description": "Enables TLS encryption on the listener. By default set to `true` for enabled TLS encryption.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "type": {
                                                                                "description": "Type of the external listener. Currently the supported types are `route`, `loadbalancer`, and `nodeport`. \n\n* `route` type uses OpenShift Routes to expose Kafka.* `loadbalancer` type uses LoadBalancer type services to expose Kafka.* `nodeport` type uses NodePort type services to expose Kafka..",
                                                                                "enum": [
                                                                                    "route",
                                                                                    "loadbalancer",
                                                                                    "nodeport",
                                                                                    "ingress"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "plain": {
                                                                        "description": "Configures plain listener on port 9092.",
                                                                        "properties": {
                                                                            "authentication": {
                                                                                "description": "Authentication configuration for this listener. Since this listener does not use TLS transport you cannot configure an authentication with `type: tls`.",
                                                                                "properties": {
                                                                                    "accessTokenIsJwt": {
                                                                                        "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkAccessTokenType": {
                                                                                        "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkIssuer": {
                                                                                        "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "clientId": {
                                                                                        "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "clientSecret": {
                                                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "disableTlsHostnameVerification": {
                                                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "enableECDSA": {
                                                                                        "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "fallbackUserNameClaim": {
                                                                                        "description": "The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "fallbackUserNamePrefix": {
                                                                                        "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "introspectionEndpointUri": {
                                                                                        "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksEndpointUri": {
                                                                                        "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksExpirySeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksMinRefreshPauseSeconds": {
                                                                                        "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                                                                                        "minimum": 0,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksRefreshSeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "maxSecondsWithoutReauthentication": {
                                                                                        "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "tlsTrustedCertificates": {
                                                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "certificate": {
                                                                                                    "description": "The name of the file certificate in the Secret.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "secretName": {
                                                                                                    "description": "The name of the Secret containing the certificate.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "certificate",
                                                                                                "secretName"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.",
                                                                                        "enum": [
                                                                                            "tls",
                                                                                            "scram-sha-512",
                                                                                            "oauth"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userInfoEndpointUri": {
                                                                                        "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userNameClaim": {
                                                                                        "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validIssuerUri": {
                                                                                        "description": "URI of the token issuer used for authentication.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validTokenType": {
                                                                                        "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "networkPolicyPeers": {
                                                                                "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "ipBlock": {
                                                                                            "properties": {
                                                                                                "cidr": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "except": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaceSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "podSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "tls": {
                                                                        "description": "Configures TLS listener on port 9093.",
                                                                        "properties": {
                                                                            "authentication": {
                                                                                "description": "Authentication configuration for this listener.",
                                                                                "properties": {
                                                                                    "accessTokenIsJwt": {
                                                                                        "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkAccessTokenType": {
                                                                                        "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkIssuer": {
                                                                                        "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "clientId": {
                                                                                        "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "clientSecret": {
                                                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "disableTlsHostnameVerification": {
                                                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "enableECDSA": {
                                                                                        "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "fallbackUserNameClaim": {
                                                                                        "description": "The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "fallbackUserNamePrefix": {
                                                                                        "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "introspectionEndpointUri": {
                                                                                        "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksEndpointUri": {
                                                                                        "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksExpirySeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksMinRefreshPauseSeconds": {
                                                                                        "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                                                                                        "minimum": 0,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksRefreshSeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "maxSecondsWithoutReauthentication": {
                                                                                        "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "tlsTrustedCertificates": {
                                                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "certificate": {
                                                                                                    "description": "The name of the file certificate in the Secret.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "secretName": {
                                                                                                    "description": "The name of the Secret containing the certificate.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "certificate",
                                                                                                "secretName"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.",
                                                                                        "enum": [
                                                                                            "tls",
                                                                                            "scram-sha-512",
                                                                                            "oauth"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userInfoEndpointUri": {
                                                                                        "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userNameClaim": {
                                                                                        "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validIssuerUri": {
                                                                                        "description": "URI of the token issuer used for authentication.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validTokenType": {
                                                                                        "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "configuration": {
                                                                                "description": "Configuration of TLS listener.",
                                                                                "properties": {
                                                                                    "brokerCertChainAndKey": {
                                                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair. The certificate can optionally contain the whole chain.",
                                                                                        "properties": {
                                                                                            "certificate": {
                                                                                                "description": "The name of the file certificate in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "key": {
                                                                                                "description": "The name of the private key in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Secret containing the certificate.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "certificate",
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "networkPolicyPeers": {
                                                                                "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "ipBlock": {
                                                                                            "properties": {
                                                                                                "cidr": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "except": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaceSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "podSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Logging configuration for Kafka.",
                                                        "properties": {
                                                            "loggers": {
                                                                "description": "A Map from logger name to logger level.",
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Logging type, must be either 'inline' or 'external'.",
                                                                "enum": [
                                                                    "inline",
                                                                    "external"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "metrics": {
                                                        "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                        "type": "object"
                                                    },
                                                    "rack": {
                                                        "description": "Configuration of the `broker.rack` broker config.",
                                                        "properties": {
                                                            "topologyKey": {
                                                                "description": "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set the broker's `broker.rack` config.",
                                                                "example": "topology.kubernetes.io/zone",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "topologyKey"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "replicas": {
                                                        "description": "The number of pods in the cluster.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "storage": {
                                                        "description": "Storage configuration (disk). Cannot be updated.",
                                                        "properties": {
                                                            "class": {
                                                                "description": "The storage class to use for dynamic volume allocation.",
                                                                "type": "string"
                                                            },
                                                            "deleteClaim": {
                                                                "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                                                                "type": "boolean"
                                                            },
                                                            "id": {
                                                                "description": "Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "overrides": {
                                                                "description": "Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.",
                                                                "items": {
                                                                    "properties": {
                                                                        "broker": {
                                                                            "description": "Id of the kafka broker (broker identifier).",
                                                                            "type": "integer"
                                                                        },
                                                                        "class": {
                                                                            "description": "The storage class to use for dynamic volume allocation for this broker.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "selector": {
                                                                "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                                                                "type": "object"
                                                            },
                                                            "size": {
                                                                "description": "When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.",
                                                                "type": "string"
                                                            },
                                                            "sizeLimit": {
                                                                "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                                                                "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Storage type, must be either 'ephemeral', 'persistent-claim', or 'jbod'.",
                                                                "enum": [
                                                                    "ephemeral",
                                                                    "persistent-claim",
                                                                    "jbod"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "volumes": {
                                                                "description": "List of volumes as Storage objects representing the JBOD disks array.",
                                                                "items": {
                                                                    "properties": {
                                                                        "class": {
                                                                            "description": "The storage class to use for dynamic volume allocation.",
                                                                            "type": "string"
                                                                        },
                                                                        "deleteClaim": {
                                                                            "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "id": {
                                                                            "description": "Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.",
                                                                            "minimum": 0,
                                                                            "type": "integer"
                                                                        },
                                                                        "overrides": {
                                                                            "description": "Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "broker": {
                                                                                        "description": "Id of the kafka broker (broker identifier).",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "class": {
                                                                                        "description": "The storage class to use for dynamic volume allocation for this broker.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "selector": {
                                                                            "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                                                                            "type": "object"
                                                                        },
                                                                        "size": {
                                                                            "description": "When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.",
                                                                            "type": "string"
                                                                        },
                                                                        "sizeLimit": {
                                                                            "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                                                                            "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "description": "Storage type, must be either 'ephemeral' or 'persistent-claim'.",
                                                                            "enum": [
                                                                                "ephemeral",
                                                                                "persistent-claim"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template for Kafka cluster resources. The template allows users to specify how are the `StatefulSet`, `Pods` and `Services` generated.",
                                                        "properties": {
                                                            "bootstrapService": {
                                                                "description": "Template for Kafka bootstrap `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "brokersService": {
                                                                "description": "Template for Kafka broker `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "externalBootstrapIngress": {
                                                                "description": "Template for Kafka external bootstrap `Ingress`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "externalBootstrapRoute": {
                                                                "description": "Template for Kafka external bootstrap `Route`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "externalBootstrapService": {
                                                                "description": "Template for Kafka external bootstrap `Service`.",
                                                                "properties": {
                                                                    "externalTrafficPolicy": {
                                                                        "description": "Specifies whether the service routes external traffic to node-local or cluster-wide endpoints. `Cluster` may cause a second hop to another node and obscures the client source IP. `Local` avoids a second hop for LoadBalancer and Nodeport type services and preserves the client source IP (when supported by the infrastructure). If unspecified, Kubernetes will use `Cluster` as the default.",
                                                                        "enum": [
                                                                            "Local",
                                                                            "Cluster"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "loadBalancerSourceRanges": {
                                                                        "description": "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to load balancer type listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "initContainer": {
                                                                "description": "Template for the Kafka init container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "kafkaContainer": {
                                                                "description": "Template for the Kafka broker container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "perPodIngress": {
                                                                "description": "Template for Kafka per-pod `Ingress` used for access from outside of Kubernetes.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "perPodRoute": {
                                                                "description": "Template for Kafka per-pod `Routes` used for access from outside of OpenShift.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "perPodService": {
                                                                "description": "Template for Kafka per-pod `Services` used for access from outside of Kubernetes.",
                                                                "properties": {
                                                                    "externalTrafficPolicy": {
                                                                        "description": "Specifies whether the service routes external traffic to node-local or cluster-wide endpoints. `Cluster` may cause a second hop to another node and obscures the client source IP. `Local` avoids a second hop for LoadBalancer and Nodeport type services and preserves the client source IP (when supported by the infrastructure). If unspecified, Kubernetes will use `Cluster` as the default.",
                                                                        "enum": [
                                                                            "Local",
                                                                            "Cluster"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "loadBalancerSourceRanges": {
                                                                        "description": "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to load balancer type listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "persistentVolumeClaim": {
                                                                "description": "Template for all Kafka `PersistentVolumeClaims`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for Kafka `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podDisruptionBudget": {
                                                                "description": "Template for Kafka `PodDisruptionBudget`.",
                                                                "properties": {
                                                                    "maxUnavailable": {
                                                                        "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "statefulset": {
                                                                "description": "Template for Kafka `StatefulSet`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podManagementPolicy": {
                                                                        "description": "PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.",
                                                                        "enum": [
                                                                            "OrderedReady",
                                                                            "Parallel"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tlsSidecarContainer": {
                                                                "description": "Template for the Kafka broker TLS sidecar container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tolerations": {
                                                        "description": "The pod's tolerations.",
                                                        "items": {
                                                            "properties": {
                                                                "effect": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "type": "string"
                                                                },
                                                                "tolerationSeconds": {
                                                                    "type": "integer"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "version": {
                                                        "description": "The kafka broker version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "replicas",
                                                    "storage",
                                                    "listeners"
                                                ],
                                                "type": "object"
                                            },
                                            "kafkaExporter": {
                                                "description": "Configuration of the Kafka Exporter. Kafka Exporter can provide additional metrics, for example lag of consumer group at topic/partition.",
                                                "properties": {
                                                    "enableSaramaLogging": {
                                                        "description": "Enable Sarama logging, a Go client library used by the Kafka Exporter.",
                                                        "type": "boolean"
                                                    },
                                                    "groupRegex": {
                                                        "description": "Regular expression to specify which consumer groups to collect. Default value is `.*`.",
                                                        "type": "string"
                                                    },
                                                    "image": {
                                                        "description": "The docker image for the pods.",
                                                        "type": "string"
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness check.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Only log messages with the given severity or above. Valid levels: [`debug`, `info`, `warn`, `error`, `fatal`]. Default log level is `info`.",
                                                        "type": "string"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness check.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Customization of deployment templates and pods.",
                                                        "properties": {
                                                            "container": {
                                                                "description": "Template for the Kafka Exporter container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "deployment": {
                                                                "description": "Template for Kafka Exporter `Deployment`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for Kafka Exporter `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "service": {
                                                                "description": "Template for Kafka Exporter `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "topicRegex": {
                                                        "description": "Regular expression to specify which topics to collect. Default value is `.*`.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maintenanceTimeWindows": {
                                                "description": "A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "topicOperator": {
                                                "description": "Configuration of the Topic Operator.",
                                                "properties": {
                                                    "affinity": {
                                                        "description": "Pod affinity rules.",
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "description": "The image to use for the Topic Operator.",
                                                        "type": "string"
                                                    },
                                                    "jvmOptions": {
                                                        "description": "JVM Options for pods.",
                                                        "properties": {
                                                            "-XX": {
                                                                "description": "A map of -XX options to the JVM.",
                                                                "type": "object"
                                                            },
                                                            "-Xms": {
                                                                "description": "-Xms option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "-Xmx": {
                                                                "description": "-Xmx option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "gcLoggingEnabled": {
                                                                "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                "type": "boolean"
                                                            },
                                                            "javaSystemProperties": {
                                                                "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The system property name.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The system property value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Logging configuration.",
                                                        "properties": {
                                                            "loggers": {
                                                                "description": "A Map from logger name to logger level.",
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Logging type, must be either 'inline' or 'external'.",
                                                                "enum": [
                                                                    "inline",
                                                                    "external"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "reconciliationIntervalSeconds": {
                                                        "description": "Interval between periodic reconciliations.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "topicMetadataMaxAttempts": {
                                                        "description": "The number of attempts at getting topic metadata.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "watchedNamespace": {
                                                        "description": "The namespace the Topic Operator should watch.",
                                                        "type": "string"
                                                    },
                                                    "zookeeperSessionTimeoutSeconds": {
                                                        "description": "Timeout for the ZooKeeper session.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "zookeeper": {
                                                "description": "Configuration of the ZooKeeper cluster.",
                                                "properties": {
                                                    "affinity": {
                                                        "description": "The pod's affinity rules.",
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "config": {
                                                        "description": "The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).",
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "description": "The docker image for the pods.",
                                                        "type": "string"
                                                    },
                                                    "jvmOptions": {
                                                        "description": "JVM Options for pods.",
                                                        "properties": {
                                                            "-XX": {
                                                                "description": "A map of -XX options to the JVM.",
                                                                "type": "object"
                                                            },
                                                            "-Xms": {
                                                                "description": "-Xms option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "-Xmx": {
                                                                "description": "-Xmx option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "gcLoggingEnabled": {
                                                                "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                "type": "boolean"
                                                            },
                                                            "javaSystemProperties": {
                                                                "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The system property name.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The system property value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Logging configuration for ZooKeeper.",
                                                        "properties": {
                                                            "loggers": {
                                                                "description": "A Map from logger name to logger level.",
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Logging type, must be either 'inline' or 'external'.",
                                                                "enum": [
                                                                    "inline",
                                                                    "external"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "metrics": {
                                                        "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                        "type": "object"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "replicas": {
                                                        "description": "The number of pods in the cluster.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "storage": {
                                                        "description": "Storage configuration (disk). Cannot be updated.",
                                                        "properties": {
                                                            "class": {
                                                                "description": "The storage class to use for dynamic volume allocation.",
                                                                "type": "string"
                                                            },
                                                            "deleteClaim": {
                                                                "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                                                                "type": "boolean"
                                                            },
                                                            "id": {
                                                                "description": "Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "overrides": {
                                                                "description": "Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.",
                                                                "items": {
                                                                    "properties": {
                                                                        "broker": {
                                                                            "description": "Id of the kafka broker (broker identifier).",
                                                                            "type": "integer"
                                                                        },
                                                                        "class": {
                                                                            "description": "The storage class to use for dynamic volume allocation for this broker.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "selector": {
                                                                "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                                                                "type": "object"
                                                            },
                                                            "size": {
                                                                "description": "When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.",
                                                                "type": "string"
                                                            },
                                                            "sizeLimit": {
                                                                "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                                                                "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Storage type, must be either 'ephemeral' or 'persistent-claim'.",
                                                                "enum": [
                                                                    "ephemeral",
                                                                    "persistent-claim"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template for ZooKeeper cluster resources. The template allows users to specify how are the `StatefulSet`, `Pods` and `Services` generated.",
                                                        "properties": {
                                                            "clientService": {
                                                                "description": "Template for ZooKeeper client `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "nodesService": {
                                                                "description": "Template for ZooKeeper nodes `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "persistentVolumeClaim": {
                                                                "description": "Template for all ZooKeeper `PersistentVolumeClaims`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for ZooKeeper `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podDisruptionBudget": {
                                                                "description": "Template for ZooKeeper `PodDisruptionBudget`.",
                                                                "properties": {
                                                                    "maxUnavailable": {
                                                                        "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "statefulset": {
                                                                "description": "Template for ZooKeeper `StatefulSet`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podManagementPolicy": {
                                                                        "description": "PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.",
                                                                        "enum": [
                                                                            "OrderedReady",
                                                                            "Parallel"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tlsSidecarContainer": {
                                                                "description": "Template for the Zookeeper server TLS sidecar container. The TLS sidecar is not used anymore and this option will be ignored.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "zookeeperContainer": {
                                                                "description": "Template for the ZooKeeper container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration. The TLS sidecar is not used anymore and this option will be ignored.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tolerations": {
                                                        "description": "The pod's tolerations.",
                                                        "items": {
                                                            "properties": {
                                                                "effect": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "type": "string"
                                                                },
                                                                "tolerationSeconds": {
                                                                    "type": "integer"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "replicas",
                                                    "storage"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "kafka",
                                            "zookeeper"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka and ZooKeeper clusters, and Topic Operator.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "listeners": {
                                                "description": "Addresses of the internal and external listeners.",
                                                "items": {
                                                    "properties": {
                                                        "addresses": {
                                                            "description": "A list of the addresses for this listener.",
                                                            "items": {
                                                                "properties": {
                                                                    "host": {
                                                                        "description": "The DNS name or IP address of the Kafka bootstrap service.",
                                                                        "type": "string"
                                                                    },
                                                                    "port": {
                                                                        "description": "The port of the Kafka bootstrap service.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "bootstrapServers": {
                                                            "description": "A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.",
                                                            "type": "string"
                                                        },
                                                        "certificates": {
                                                            "description": "A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "type": {
                                                            "description": "The type of the listener. Can be one of the following three types: `plain`, `tls`, and `external`.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    },
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The desired number of Kafka replicas in the cluster",
                                "jsonPath": ".spec.kafka.replicas",
                                "name": "Desired Kafka replicas",
                                "type": "integer"
                            },
                            {
                                "description": "The desired number of ZooKeeper replicas in the cluster",
                                "jsonPath": ".spec.zookeeper.replicas",
                                "name": "Desired ZK replicas",
                                "type": "integer"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the Kafka and ZooKeeper clusters, and Topic Operator.",
                                        "properties": {
                                            "clientsCa": {
                                                "description": "Configuration of the clients certificate authority.",
                                                "properties": {
                                                    "certificateExpirationPolicy": {
                                                        "description": "How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.",
                                                        "enum": [
                                                            "renew-certificate",
                                                            "replace-key"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "generateCertificateAuthority": {
                                                        "description": "If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.",
                                                        "type": "boolean"
                                                    },
                                                    "renewalDays": {
                                                        "description": "The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "validityDays": {
                                                        "description": "The number of days generated certificates should be valid for. The default is 365.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "clusterCa": {
                                                "description": "Configuration of the cluster certificate authority.",
                                                "properties": {
                                                    "certificateExpirationPolicy": {
                                                        "description": "How should CA certificate expiration be handled when `generateCertificateAuthority=true`. The default is for a new CA certificate to be generated reusing the existing private key.",
                                                        "enum": [
                                                            "renew-certificate",
                                                            "replace-key"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "generateCertificateAuthority": {
                                                        "description": "If true then Certificate Authority certificates will be generated automatically. Otherwise the user will need to provide a Secret with the CA certificate. Default is true.",
                                                        "type": "boolean"
                                                    },
                                                    "renewalDays": {
                                                        "description": "The number of days in the certificate renewal period. This is the number of days before the a certificate expires during which renewal actions may be performed. When `generateCertificateAuthority` is true, this will cause the generation of a new certificate. When `generateCertificateAuthority` is true, this will cause extra logging at WARN level about the pending certificate expiry. Default is 30.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "validityDays": {
                                                        "description": "The number of days generated certificates should be valid for. The default is 365.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "cruiseControl": {
                                                "description": "Configuration for Cruise Control deployment. Deploys a Cruise Control instance when specified.",
                                                "properties": {
                                                    "brokerCapacity": {
                                                        "description": "The Cruise Control `brokerCapacity` configuration.",
                                                        "properties": {
                                                            "cpuUtilization": {
                                                                "description": "Broker capacity for CPU resource utilization as a percentage (0 - 100).",
                                                                "maximum": 100,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "disk": {
                                                                "description": "Broker capacity for disk in bytes, for example, 100Gi.",
                                                                "pattern": "^[0-9]+([.][0-9]*)?([KMGTPE]i?|e[0-9]+)?$",
                                                                "type": "string"
                                                            },
                                                            "inboundNetwork": {
                                                                "description": "Broker capacity for inbound network throughput in bytes per second, for example, 10000KB/s.",
                                                                "pattern": "[0-9]+([KMG]i?)?B/s",
                                                                "type": "string"
                                                            },
                                                            "outboundNetwork": {
                                                                "description": "Broker capacity for outbound network throughput in bytes per second, for example 10000KB/s.",
                                                                "pattern": "[0-9]+([KMG]i?)?B/s",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "config": {
                                                        "description": "The Cruise Control configuration. For a full list of configuration options refer to https://github.com/linkedin/cruise-control/wiki/Configurations. Note that properties with the following prefixes cannot be set: bootstrap.servers, client.id, zookeeper., network., security., failed.brokers.zk.path,webserver.http., webserver.api.urlprefix, webserver.session.path, webserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.bootstrap.servers, metric.reporter.topic, partition.metric.sample.store.topic, broker.metric.sample.store.topic,capacity.config.file, self.healing., anomaly.detection., ssl.",
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "description": "The docker image for the pods.",
                                                        "type": "string"
                                                    },
                                                    "jvmOptions": {
                                                        "description": "JVM Options for the Cruise Control container.",
                                                        "properties": {
                                                            "-XX": {
                                                                "description": "A map of -XX options to the JVM.",
                                                                "type": "object"
                                                            },
                                                            "-Xms": {
                                                                "description": "-Xms option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "-Xmx": {
                                                                "description": "-Xmx option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "gcLoggingEnabled": {
                                                                "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                "type": "boolean"
                                                            },
                                                            "javaSystemProperties": {
                                                                "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The system property name.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The system property value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness checking for the Cruise Control container.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Logging configuration (log4j1) for Cruise Control.",
                                                        "properties": {
                                                            "loggers": {
                                                                "description": "A Map from logger name to logger level.",
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Logging type, must be either 'inline' or 'external'.",
                                                                "enum": [
                                                                    "inline",
                                                                    "external"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "metrics": {
                                                        "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                        "type": "object"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness checking for the Cruise Control container.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve for the Cruise Control container.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template to specify how Cruise Control resources, `Deployments` and `Pods`, are generated.",
                                                        "properties": {
                                                            "apiService": {
                                                                "description": "Template for Cruise Control API `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "cruiseControlContainer": {
                                                                "description": "Template for the Cruise Control container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "deployment": {
                                                                "description": "Template for Cruise Control `Deployment`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for Cruise Control `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podDisruptionBudget": {
                                                                "description": "Template for Cruise Control `PodDisruptionBudget`.",
                                                                "properties": {
                                                                    "maxUnavailable": {
                                                                        "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tlsSidecarContainer": {
                                                                "description": "Template for the Cruise Control TLS sidecar container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "entityOperator": {
                                                "description": "Configuration of the Entity Operator.",
                                                "properties": {
                                                    "affinity": {
                                                        "description": "The pod's affinity rules.",
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template for Entity Operator resources. The template allows users to specify how is the `Deployment` and `Pods` generated.",
                                                        "properties": {
                                                            "deployment": {
                                                                "description": "Template for Entity Operator `Deployment`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for Entity Operator `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tlsSidecarContainer": {
                                                                "description": "Template for the Entity Operator TLS sidecar container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "topicOperatorContainer": {
                                                                "description": "Template for the Entity Topic Operator container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "userOperatorContainer": {
                                                                "description": "Template for the Entity User Operator container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tolerations": {
                                                        "description": "The pod's tolerations.",
                                                        "items": {
                                                            "properties": {
                                                                "effect": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "type": "string"
                                                                },
                                                                "tolerationSeconds": {
                                                                    "type": "integer"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "topicOperator": {
                                                        "description": "Configuration of the Topic Operator.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The image to use for the Topic Operator.",
                                                                "type": "string"
                                                            },
                                                            "jvmOptions": {
                                                                "description": "JVM Options for pods.",
                                                                "properties": {
                                                                    "-XX": {
                                                                        "description": "A map of -XX options to the JVM.",
                                                                        "type": "object"
                                                                    },
                                                                    "-Xms": {
                                                                        "description": "-Xms option to to the JVM.",
                                                                        "pattern": "[0-9]+[mMgG]?",
                                                                        "type": "string"
                                                                    },
                                                                    "-Xmx": {
                                                                        "description": "-Xmx option to to the JVM.",
                                                                        "pattern": "[0-9]+[mMgG]?",
                                                                        "type": "string"
                                                                    },
                                                                    "gcLoggingEnabled": {
                                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "javaSystemProperties": {
                                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The system property name.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The system property value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logging": {
                                                                "description": "Logging configuration.",
                                                                "properties": {
                                                                    "loggers": {
                                                                        "description": "A Map from logger name to logger level.",
                                                                        "type": "object"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                                        "enum": [
                                                                            "inline",
                                                                            "external"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "reconciliationIntervalSeconds": {
                                                                "description": "Interval between periodic reconciliations.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "topicMetadataMaxAttempts": {
                                                                "description": "The number of attempts at getting topic metadata.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "watchedNamespace": {
                                                                "description": "The namespace the Topic Operator should watch.",
                                                                "type": "string"
                                                            },
                                                            "zookeeperSessionTimeoutSeconds": {
                                                                "description": "Timeout for the ZooKeeper session.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "userOperator": {
                                                        "description": "Configuration of the User Operator.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The image to use for the User Operator.",
                                                                "type": "string"
                                                            },
                                                            "jvmOptions": {
                                                                "description": "JVM Options for pods.",
                                                                "properties": {
                                                                    "-XX": {
                                                                        "description": "A map of -XX options to the JVM.",
                                                                        "type": "object"
                                                                    },
                                                                    "-Xms": {
                                                                        "description": "-Xms option to to the JVM.",
                                                                        "pattern": "[0-9]+[mMgG]?",
                                                                        "type": "string"
                                                                    },
                                                                    "-Xmx": {
                                                                        "description": "-Xmx option to to the JVM.",
                                                                        "pattern": "[0-9]+[mMgG]?",
                                                                        "type": "string"
                                                                    },
                                                                    "gcLoggingEnabled": {
                                                                        "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "javaSystemProperties": {
                                                                        "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The system property name.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The system property value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logging": {
                                                                "description": "Logging configuration.",
                                                                "properties": {
                                                                    "loggers": {
                                                                        "description": "A Map from logger name to logger level.",
                                                                        "type": "object"
                                                                    },
                                                                    "name": {
                                                                        "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "Logging type, must be either 'inline' or 'external'.",
                                                                        "enum": [
                                                                            "inline",
                                                                            "external"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "reconciliationIntervalSeconds": {
                                                                "description": "Interval between periodic reconciliations.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "watchedNamespace": {
                                                                "description": "The namespace the User Operator should watch.",
                                                                "type": "string"
                                                            },
                                                            "zookeeperSessionTimeoutSeconds": {
                                                                "description": "Timeout for the ZooKeeper session.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "jmxTrans": {
                                                "description": "Configuration for JmxTrans. When the property is present a JmxTrans deployment is created for gathering JMX metrics from each Kafka broker. For more information see https://github.com/jmxtrans/jmxtrans[JmxTrans GitHub].",
                                                "properties": {
                                                    "image": {
                                                        "description": "The image to use for the JmxTrans.",
                                                        "type": "string"
                                                    },
                                                    "kafkaQueries": {
                                                        "description": "Queries to send to the Kafka brokers to define what data should be read from each broker. For more information on these properties see, xref:type-JmxTransQueryTemplate-reference[`JmxTransQueryTemplate` schema reference].",
                                                        "items": {
                                                            "properties": {
                                                                "attributes": {
                                                                    "description": "Determine which attributes of the targeted MBean should be included.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "outputs": {
                                                                    "description": "List of the names of output definitions specified in the spec.kafka.jmxTrans.outputDefinitions that have defined where JMX metrics are pushed to, and in which data format.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "targetMBean": {
                                                                    "description": "If using wildcards instead of a specific MBean then the data is gathered from multiple MBeans. Otherwise if specifying an MBean then data is gathered from that specified MBean.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "targetMBean",
                                                                "attributes",
                                                                "outputs"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "logLevel": {
                                                        "description": "Sets the logging level of the JmxTrans deployment.For more information see, https://github.com/jmxtrans/jmxtrans-agent/wiki/Troubleshooting[JmxTrans Logging Level].",
                                                        "type": "string"
                                                    },
                                                    "outputDefinitions": {
                                                        "description": "Defines the output hosts that will be referenced later on. For more information on these properties see, xref:type-JmxTransOutputDefinitionTemplate-reference[`JmxTransOutputDefinitionTemplate` schema reference].",
                                                        "items": {
                                                            "properties": {
                                                                "flushDelayInSeconds": {
                                                                    "description": "How many seconds the JmxTrans waits before pushing a new set of data out.",
                                                                    "type": "integer"
                                                                },
                                                                "host": {
                                                                    "description": "The DNS/hostname of the remote host that the data is pushed to.",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "description": "Template for setting the name of the output definition. This is used to identify where to send the results of queries should be sent.",
                                                                    "type": "string"
                                                                },
                                                                "outputType": {
                                                                    "description": "Template for setting the format of the data that will be pushed.For more information see https://github.com/jmxtrans/jmxtrans/wiki/OutputWriters[JmxTrans OutputWriters].",
                                                                    "type": "string"
                                                                },
                                                                "port": {
                                                                    "description": "The port of the remote host that the data is pushed to.",
                                                                    "type": "integer"
                                                                },
                                                                "typeNames": {
                                                                    "description": "Template for filtering data to be included in response to a wildcard query. For more information see https://github.com/jmxtrans/jmxtrans/wiki/Queries[JmxTrans queries].",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "required": [
                                                                "outputType",
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template for JmxTrans resources.",
                                                        "properties": {
                                                            "container": {
                                                                "description": "Template for JmxTrans container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "deployment": {
                                                                "description": "Template for JmxTrans `Deployment`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for JmxTrans `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "outputDefinitions",
                                                    "kafkaQueries"
                                                ],
                                                "type": "object"
                                            },
                                            "kafka": {
                                                "description": "Configuration of the Kafka cluster.",
                                                "properties": {
                                                    "affinity": {
                                                        "description": "The pod's affinity rules.",
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "authorization": {
                                                        "description": "Authorization configuration for Kafka brokers.",
                                                        "properties": {
                                                            "allowOnError": {
                                                                "description": "Defines whether a Kafka client should be allowed or denied by default when the authorizer fails to query the Open Policy Agent, for example, when it is temporarily unavailable). Defaults to `false` - all actions will be denied.",
                                                                "type": "boolean"
                                                            },
                                                            "clientId": {
                                                                "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "delegateToKafkaAcls": {
                                                                "description": "Whether authorization decision should be delegated to the 'Simple' authorizer if DENIED by Keycloak Authorization Services policies. Default value is `false`.",
                                                                "type": "boolean"
                                                            },
                                                            "disableTlsHostnameVerification": {
                                                                "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                "type": "boolean"
                                                            },
                                                            "expireAfterMs": {
                                                                "description": "The expiration of the records kept in the local cache to avoid querying the Open Policy Agent for every request. Defines how often the cached authorization decisions are reloaded from the Open Policy Agent server. In milliseconds. Defaults to `3600000`.",
                                                                "type": "integer"
                                                            },
                                                            "grantsRefreshPeriodSeconds": {
                                                                "description": "The time between two consecutive grants refresh runs in seconds. The default value is 60.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "grantsRefreshPoolSize": {
                                                                "description": "The number of threads to use to refresh grants for active sessions. The more threads, the more parallelism, so the sooner the job completes. However, using more threads places a heavier load on the authorization server. The default value is 5.",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "initialCacheCapacity": {
                                                                "description": "Initial capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request Defaults to `5000`.",
                                                                "type": "integer"
                                                            },
                                                            "maximumCacheSize": {
                                                                "description": "Maximum capacity of the local cache used by the authorizer to avoid querying the Open Policy Agent for every request. Defaults to `50000`.",
                                                                "type": "integer"
                                                            },
                                                            "superUsers": {
                                                                "description": "List of super users. Should contain list of user principals which should get unlimited access rights.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tlsTrustedCertificates": {
                                                                "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                "items": {
                                                                    "properties": {
                                                                        "certificate": {
                                                                            "description": "The name of the file certificate in the Secret.",
                                                                            "type": "string"
                                                                        },
                                                                        "secretName": {
                                                                            "description": "The name of the Secret containing the certificate.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "certificate",
                                                                        "secretName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tokenEndpointUri": {
                                                                "description": "Authorization server token endpoint URI.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Authorization type. Currently, the supported types are `simple`, `keycloak`, and `opa`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization. `keycloak` authorization type uses Keycloak Authorization Services for authorization. `opa` authorization type uses Open Policy Agent based authorization.",
                                                                "enum": [
                                                                    "simple",
                                                                    "opa",
                                                                    "keycloak"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "description": "The URL used to connect to the Open Policy Agent server. The URL has to include the policy which will be queried by the authorizer. This option is required.",
                                                                "example": "http://opa:8181/v1/data/kafka/authz/allow",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "brokerRackInitImage": {
                                                        "description": "The image of the init container used for initializing the `broker.rack`.",
                                                        "type": "string"
                                                    },
                                                    "config": {
                                                        "description": "Kafka broker config properties with the following prefixes cannot be set: listeners, advertised., broker., listener., host.name, port, inter.broker.listener.name, sasl., ssl., security., password., principal.builder.class, log.dir, zookeeper.connect, zookeeper.set.acl, zookeeper.ssl, zookeeper.clientCnxnSocket, authorizer., super.user, cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers (with the exception of: zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols,cruise.control.metrics.topic.num.partitions, cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms,cruise.control.metrics.topic.auto.create.retries, cruise.control.metrics.topic.auto.create.timeout.ms).",
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "description": "The docker image for the pods. The default value depends on the configured `Kafka.spec.kafka.version`.",
                                                        "type": "string"
                                                    },
                                                    "jmxOptions": {
                                                        "description": "JMX Options for Kafka brokers.",
                                                        "properties": {
                                                            "authentication": {
                                                                "description": "Authentication configuration for connecting to the Kafka JMX port.",
                                                                "properties": {
                                                                    "type": {
                                                                        "description": "Authentication type. Currently the only supported types are `password`.`password` type creates a username and protected port with no TLS.",
                                                                        "enum": [
                                                                            "password"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "jvmOptions": {
                                                        "description": "JVM Options for pods.",
                                                        "properties": {
                                                            "-XX": {
                                                                "description": "A map of -XX options to the JVM.",
                                                                "type": "object"
                                                            },
                                                            "-Xms": {
                                                                "description": "-Xms option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "-Xmx": {
                                                                "description": "-Xmx option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "gcLoggingEnabled": {
                                                                "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                "type": "boolean"
                                                            },
                                                            "javaSystemProperties": {
                                                                "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The system property name.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The system property value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "listeners": {
                                                        "oneOf": [
                                                            {
                                                                "items": {
                                                                    "properties": {
                                                                        "authentication": {
                                                                            "description": "Authentication configuration for this listener.",
                                                                            "properties": {
                                                                                "accessTokenIsJwt": {
                                                                                    "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "checkAccessTokenType": {
                                                                                    "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "checkIssuer": {
                                                                                    "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "clientId": {
                                                                                    "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                    "type": "string"
                                                                                },
                                                                                "clientSecret": {
                                                                                    "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "secretName": {
                                                                                            "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key",
                                                                                        "secretName"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "disableTlsHostnameVerification": {
                                                                                    "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "enableECDSA": {
                                                                                    "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. Default value is `false`.",
                                                                                    "type": "boolean"
                                                                                },
                                                                                "fallbackUserNameClaim": {
                                                                                    "description": "The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.",
                                                                                    "type": "string"
                                                                                },
                                                                                "fallbackUserNamePrefix": {
                                                                                    "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                                                                                    "type": "string"
                                                                                },
                                                                                "introspectionEndpointUri": {
                                                                                    "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                                                                                    "type": "string"
                                                                                },
                                                                                "jwksEndpointUri": {
                                                                                    "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                                                                                    "type": "string"
                                                                                },
                                                                                "jwksExpirySeconds": {
                                                                                    "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                                                                                    "minimum": 1,
                                                                                    "type": "integer"
                                                                                },
                                                                                "jwksMinRefreshPauseSeconds": {
                                                                                    "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                                                                                    "minimum": 0,
                                                                                    "type": "integer"
                                                                                },
                                                                                "jwksRefreshSeconds": {
                                                                                    "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                                                                                    "minimum": 1,
                                                                                    "type": "integer"
                                                                                },
                                                                                "maxSecondsWithoutReauthentication": {
                                                                                    "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires.",
                                                                                    "type": "integer"
                                                                                },
                                                                                "tlsTrustedCertificates": {
                                                                                    "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "certificate": {
                                                                                                "description": "The name of the file certificate in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Secret containing the certificate.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "certificate",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "type": {
                                                                                    "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.",
                                                                                    "enum": [
                                                                                        "tls",
                                                                                        "scram-sha-512",
                                                                                        "oauth"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "userInfoEndpointUri": {
                                                                                    "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                                                                                    "type": "string"
                                                                                },
                                                                                "userNameClaim": {
                                                                                    "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                                                                                    "type": "string"
                                                                                },
                                                                                "validIssuerUri": {
                                                                                    "description": "URI of the token issuer used for authentication.",
                                                                                    "type": "string"
                                                                                },
                                                                                "validTokenType": {
                                                                                    "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "type"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "configuration": {
                                                                            "description": "Additional listener configuration.",
                                                                            "properties": {
                                                                                "bootstrap": {
                                                                                    "description": "Bootstrap configuration.",
                                                                                    "properties": {
                                                                                        "alternativeNames": {
                                                                                            "description": "Additional alternative names for the bootstrap service. The alternative names will be added to the list of subject alternative names of the TLS certificates.",
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "annotations": {
                                                                                            "description": "Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners.",
                                                                                            "type": "object"
                                                                                        },
                                                                                        "host": {
                                                                                            "description": "The bootstrap host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "loadBalancerIP": {
                                                                                            "description": "The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "nodePort": {
                                                                                            "description": "Node port for the bootstrap service. This field can be used only with `nodeport` type listener.",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "brokerCertChainAndKey": {
                                                                                    "description": "Reference to the `Secret` which holds the certificate and private key pair which will be used for this listener. The certificate can optionally contain the whole chain. This field can be used only with listeners with enabled TLS encryption.",
                                                                                    "properties": {
                                                                                        "certificate": {
                                                                                            "description": "The name of the file certificate in the Secret.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "description": "The name of the private key in the Secret.",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "secretName": {
                                                                                            "description": "The name of the Secret containing the certificate.",
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "certificate",
                                                                                        "key",
                                                                                        "secretName"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "brokers": {
                                                                                    "description": "Per-broker configurations.",
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "advertisedHost": {
                                                                                                "description": "The host name which will be used in the brokers' `advertised.brokers`.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "advertisedPort": {
                                                                                                "description": "The port number which will be used in the brokers' `advertised.brokers`.",
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "annotations": {
                                                                                                "description": "Annotations that will be added to the `Ingress` or `Service` resource. You can use this field to configure DNS providers such as External DNS. This field can be used only with `loadbalancer`, `nodeport`, or `ingress` type listeners.",
                                                                                                "type": "object"
                                                                                            },
                                                                                            "broker": {
                                                                                                "description": "ID of the kafka broker (broker identifier). Broker IDs start from 0 and correspond to the number of broker replicas.",
                                                                                                "type": "integer"
                                                                                            },
                                                                                            "host": {
                                                                                                "description": "The broker host. This field will be used in the Ingress resource or in the Route resource to specify the desired hostname. This field can be used only with `route` (optional) or `ingress` (required) type listeners.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "loadBalancerIP": {
                                                                                                "description": "The loadbalancer is requested with the IP address specified in this field. This feature depends on whether the underlying cloud provider supports specifying the `loadBalancerIP` when a load balancer is created. This field is ignored if the cloud provider does not support the feature.This field can be used only with `loadbalancer` type listener.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "nodePort": {
                                                                                                "description": "Node port for the per-broker service. This field can be used only with `nodeport` type listener.",
                                                                                                "type": "integer"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "broker"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "class": {
                                                                                    "description": "Configures the `Ingress` class that defines which `Ingress` controller will be used. If not set, the `Ingress` class is set to `nginx`. This field can be used only with `ingress` type listener.",
                                                                                    "type": "string"
                                                                                },
                                                                                "externalTrafficPolicy": {
                                                                                    "description": "Specifies whether the service routes external traffic to node-local or cluster-wide endpoints. `Cluster` may cause a second hop to another node and obscures the client source IP. `Local` avoids a second hop for LoadBalancer and Nodeport type services and preserves the client source IP (when supported by the infrastructure). If unspecified, Kubernetes will use `Cluster` as the default.This field can be used only with `loadbalancer` or `nodeport` type listener.",
                                                                                    "enum": [
                                                                                        "Local",
                                                                                        "Cluster"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "loadBalancerSourceRanges": {
                                                                                    "description": "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to load balancer type listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/This field can be used only with `loadbalancer` type listener.",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "preferredNodePortAddressType": {
                                                                                    "description": "Defines which address type should be used as the node address. Available types are: `ExternalDNS`, `ExternalIP`, `InternalDNS`, `InternalIP` and `Hostname`. By default, the addresses will be used in the following order (the first one found will be used):\n* `ExternalDNS`\n* `ExternalIP`\n* `InternalDNS`\n* `InternalIP`\n* `Hostname`\n\nThis field can be used to select the address type which will be used as the preferred type and checked first. In case no address will be found for this address type, the other types will be used in the default order.This field can be used only with `nodeport` type listener..",
                                                                                    "enum": [
                                                                                        "ExternalIP",
                                                                                        "ExternalDNS",
                                                                                        "InternalIP",
                                                                                        "InternalDNS",
                                                                                        "Hostname"
                                                                                    ],
                                                                                    "type": "string"
                                                                                },
                                                                                "useServiceDnsDomain": {
                                                                                    "description": "Configures whether the Kubernetes service DNS domain should be used or not. If set to `true`, the generated addresses with contain the service DNS domain suffix (by default `.cluster.local`, can be configured using environment variable `KUBERNETES_SERVICE_DNS_DOMAIN`). Defaults to `false`.This field can be used only with `internal` type listener.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "name": {
                                                                            "description": "Name of the listener. The name will be used to identify the listener and the related Kubernetes objects. The name has to be unique within given a Kafka cluster. The name can consist of lowercase characters and numbers and be up to 11 characters long.",
                                                                            "pattern": "^[a-z0-9]{1,11}$",
                                                                            "type": "string"
                                                                        },
                                                                        "networkPolicyPeers": {
                                                                            "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "ipBlock": {
                                                                                        "properties": {
                                                                                            "cidr": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "except": {
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "namespaceSelector": {
                                                                                        "properties": {
                                                                                            "matchExpressions": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "key": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "operator": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "values": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            },
                                                                                            "matchLabels": {
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "podSelector": {
                                                                                        "properties": {
                                                                                            "matchExpressions": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "key": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "operator": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "values": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            },
                                                                                            "matchLabels": {
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "port": {
                                                                            "description": "Port number used by the listener inside Kafka. The port number has to be unique within a given Kafka cluster. Allowed port numbers are 9092 and higher with the exception of ports 9404 and 9999, which are already used for Prometheus and JMX. Depending on the listener type, the port number might not be the same as the port number that connects Kafka clients.",
                                                                            "minimum": 9092,
                                                                            "type": "integer"
                                                                        },
                                                                        "tls": {
                                                                            "description": "Enables TLS encryption on the listener. This is a required property.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "type": {
                                                                            "description": "Type of the listener. Currently the supported types are `internal`, `route`, `loadbalancer`, `nodeport` and `ingress`. \n\n* `internal` type exposes Kafka internally only within the Kubernetes cluster.\n* `route` type uses OpenShift Routes to expose Kafka.\n* `loadbalancer` type uses LoadBalancer type services to expose Kafka.\n* `nodeport` type uses NodePort type services to expose Kafka.\n* `ingress` type uses Kubernetes Nginx Ingress to expose Kafka.\n.",
                                                                            "enum": [
                                                                                "internal",
                                                                                "route",
                                                                                "loadbalancer",
                                                                                "nodeport",
                                                                                "ingress"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "port",
                                                                        "type",
                                                                        "tls"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "minItems": 1,
                                                                "type": "array"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "external": {
                                                                        "description": "Configures external listener on port 9094.",
                                                                        "properties": {
                                                                            "authentication": {
                                                                                "description": "Authentication configuration for Kafka brokers.",
                                                                                "properties": {
                                                                                    "accessTokenIsJwt": {
                                                                                        "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkAccessTokenType": {
                                                                                        "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkIssuer": {
                                                                                        "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "clientId": {
                                                                                        "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "clientSecret": {
                                                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "disableTlsHostnameVerification": {
                                                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "enableECDSA": {
                                                                                        "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "fallbackUserNameClaim": {
                                                                                        "description": "The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "fallbackUserNamePrefix": {
                                                                                        "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "introspectionEndpointUri": {
                                                                                        "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksEndpointUri": {
                                                                                        "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksExpirySeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksMinRefreshPauseSeconds": {
                                                                                        "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                                                                                        "minimum": 0,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksRefreshSeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "maxSecondsWithoutReauthentication": {
                                                                                        "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "tlsTrustedCertificates": {
                                                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "certificate": {
                                                                                                    "description": "The name of the file certificate in the Secret.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "secretName": {
                                                                                                    "description": "The name of the Secret containing the certificate.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "certificate",
                                                                                                "secretName"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.",
                                                                                        "enum": [
                                                                                            "tls",
                                                                                            "scram-sha-512",
                                                                                            "oauth"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userInfoEndpointUri": {
                                                                                        "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userNameClaim": {
                                                                                        "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validIssuerUri": {
                                                                                        "description": "URI of the token issuer used for authentication.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validTokenType": {
                                                                                        "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "class": {
                                                                                "description": "Configures the `Ingress` class that defines which `Ingress` controller will be used. If not set, the `Ingress` class is set to `nginx`.",
                                                                                "type": "string"
                                                                            },
                                                                            "configuration": {
                                                                                "description": "External listener configuration.",
                                                                                "properties": {
                                                                                    "bootstrap": {
                                                                                        "description": "External bootstrap ingress configuration.",
                                                                                        "properties": {
                                                                                            "address": {
                                                                                                "description": "Additional address name for the bootstrap service. The address will be added to the list of subject alternative names of the TLS certificates.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "dnsAnnotations": {
                                                                                                "description": "Annotations that will be added to the `Ingress` resource. You can use this field to configure DNS providers such as External DNS.",
                                                                                                "type": "object"
                                                                                            },
                                                                                            "host": {
                                                                                                "description": "Host for the bootstrap route. This field will be used in the Ingress resource.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "host"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "brokerCertChainAndKey": {
                                                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair. The certificate can optionally contain the whole chain.",
                                                                                        "properties": {
                                                                                            "certificate": {
                                                                                                "description": "The name of the file certificate in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "key": {
                                                                                                "description": "The name of the private key in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Secret containing the certificate.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "certificate",
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "brokers": {
                                                                                        "description": "External broker ingress configuration.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "advertisedHost": {
                                                                                                    "description": "The host name which will be used in the brokers' `advertised.brokers`.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "advertisedPort": {
                                                                                                    "description": "The port number which will be used in the brokers' `advertised.brokers`.",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "broker": {
                                                                                                    "description": "Id of the kafka broker (broker identifier).",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "dnsAnnotations": {
                                                                                                    "description": "Annotations that will be added to the `Ingress` resources for individual brokers. You can use this field to configure DNS providers such as External DNS.",
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "host": {
                                                                                                    "description": "Host for the broker ingress. This field will be used in the Ingress resource.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "host"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "networkPolicyPeers": {
                                                                                "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "ipBlock": {
                                                                                            "properties": {
                                                                                                "cidr": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "except": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaceSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "podSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "overrides": {
                                                                                "description": "Overrides for external bootstrap and broker services and externally advertised addresses.",
                                                                                "properties": {
                                                                                    "bootstrap": {
                                                                                        "description": "External bootstrap service configuration.",
                                                                                        "properties": {
                                                                                            "address": {
                                                                                                "description": "Additional address name for the bootstrap service. The address will be added to the list of subject alternative names of the TLS certificates.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "dnsAnnotations": {
                                                                                                "description": "Annotations that will be added to the `Service` resource. You can use this field to configure DNS providers such as External DNS.",
                                                                                                "type": "object"
                                                                                            },
                                                                                            "nodePort": {
                                                                                                "description": "Node port for the bootstrap service.",
                                                                                                "type": "integer"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "brokers": {
                                                                                        "description": "External broker services configuration.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "advertisedHost": {
                                                                                                    "description": "The host name which will be used in the brokers' `advertised.brokers`.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "advertisedPort": {
                                                                                                    "description": "The port number which will be used in the brokers' `advertised.brokers`.",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "broker": {
                                                                                                    "description": "Id of the kafka broker (broker identifier).",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "dnsAnnotations": {
                                                                                                    "description": "Annotations that will be added to the `Service` resources for individual brokers. You can use this field to configure DNS providers such as External DNS.",
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "nodePort": {
                                                                                                    "description": "Node port for the broker service.",
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "tls": {
                                                                                "description": "Enables TLS encryption on the listener. By default set to `true` for enabled TLS encryption.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "type": {
                                                                                "description": "Type of the external listener. Currently the supported types are `route`, `loadbalancer`, and `nodeport`. \n\n* `route` type uses OpenShift Routes to expose Kafka.* `loadbalancer` type uses LoadBalancer type services to expose Kafka.* `nodeport` type uses NodePort type services to expose Kafka..",
                                                                                "enum": [
                                                                                    "route",
                                                                                    "loadbalancer",
                                                                                    "nodeport",
                                                                                    "ingress"
                                                                                ],
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "plain": {
                                                                        "description": "Configures plain listener on port 9092.",
                                                                        "properties": {
                                                                            "authentication": {
                                                                                "description": "Authentication configuration for this listener. Since this listener does not use TLS transport you cannot configure an authentication with `type: tls`.",
                                                                                "properties": {
                                                                                    "accessTokenIsJwt": {
                                                                                        "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkAccessTokenType": {
                                                                                        "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkIssuer": {
                                                                                        "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "clientId": {
                                                                                        "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "clientSecret": {
                                                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "disableTlsHostnameVerification": {
                                                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "enableECDSA": {
                                                                                        "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "fallbackUserNameClaim": {
                                                                                        "description": "The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "fallbackUserNamePrefix": {
                                                                                        "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "introspectionEndpointUri": {
                                                                                        "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksEndpointUri": {
                                                                                        "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksExpirySeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksMinRefreshPauseSeconds": {
                                                                                        "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                                                                                        "minimum": 0,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksRefreshSeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "maxSecondsWithoutReauthentication": {
                                                                                        "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "tlsTrustedCertificates": {
                                                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "certificate": {
                                                                                                    "description": "The name of the file certificate in the Secret.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "secretName": {
                                                                                                    "description": "The name of the Secret containing the certificate.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "certificate",
                                                                                                "secretName"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.",
                                                                                        "enum": [
                                                                                            "tls",
                                                                                            "scram-sha-512",
                                                                                            "oauth"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userInfoEndpointUri": {
                                                                                        "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userNameClaim": {
                                                                                        "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validIssuerUri": {
                                                                                        "description": "URI of the token issuer used for authentication.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validTokenType": {
                                                                                        "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "networkPolicyPeers": {
                                                                                "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "ipBlock": {
                                                                                            "properties": {
                                                                                                "cidr": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "except": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaceSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "podSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "tls": {
                                                                        "description": "Configures TLS listener on port 9093.",
                                                                        "properties": {
                                                                            "authentication": {
                                                                                "description": "Authentication configuration for this listener.",
                                                                                "properties": {
                                                                                    "accessTokenIsJwt": {
                                                                                        "description": "Configure whether the access token is treated as JWT. This must be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkAccessTokenType": {
                                                                                        "description": "Configure whether the access token type check is performed or not. This should be set to `false` if the authorization server does not include 'typ' claim in JWT token. Defaults to `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "checkIssuer": {
                                                                                        "description": "Enable or disable issuer checking. By default issuer is checked using the value configured by `validIssuerUri`. Default value is `true`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "clientId": {
                                                                                        "description": "OAuth Client ID which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "clientSecret": {
                                                                                        "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka broker can use to authenticate against the authorization server and use the introspect endpoint URI.",
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Kubernetes Secret containing the secret value.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "disableTlsHostnameVerification": {
                                                                                        "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "enableECDSA": {
                                                                                        "description": "Enable or disable ECDSA support by installing BouncyCastle crypto provider. Default value is `false`.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "fallbackUserNameClaim": {
                                                                                        "description": "The fallback username claim to be used for the user id if the claim specified by `userNameClaim` is not present. This is useful when `client_credentials` authentication only results in the client id being provided in another claim. It only takes effect if `userNameClaim` is set.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "fallbackUserNamePrefix": {
                                                                                        "description": "The prefix to use with the value of `fallbackUserNameClaim` to construct the user id. This only takes effect if `fallbackUserNameClaim` is true, and the value is present for the claim. Mapping usernames and client ids into the same user id space is useful in preventing name collisions.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "introspectionEndpointUri": {
                                                                                        "description": "URI of the token introspection endpoint which can be used to validate opaque non-JWT tokens.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksEndpointUri": {
                                                                                        "description": "URI of the JWKS certificate endpoint, which can be used for local JWT validation.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "jwksExpirySeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates considered valid. The expiry interval has to be at least 60 seconds longer then the refresh interval specified in `jwksRefreshSeconds`. Defaults to 360 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksMinRefreshPauseSeconds": {
                                                                                        "description": "The minimum pause between two consecutive refreshes. When an unknown signing key is encountered the refresh is scheduled immediately, but will always wait for this minimum pause. Defaults to 1 second.",
                                                                                        "minimum": 0,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "jwksRefreshSeconds": {
                                                                                        "description": "Configures how often are the JWKS certificates refreshed. The refresh interval has to be at least 60 seconds shorter then the expiry interval specified in `jwksExpirySeconds`. Defaults to 300 seconds.",
                                                                                        "minimum": 1,
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "maxSecondsWithoutReauthentication": {
                                                                                        "description": "Maximum number of seconds the authenticated session remains valid without re-authentication. This enables Apache Kafka re-authentication feature, and causes sessions to expire when the access token expires. If the access token expires before max time or if max time is reached, the client has to re-authenticate, otherwise the server will drop the connection. Not set by default - the authenticated session does not expire when the access token expires.",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "tlsTrustedCertificates": {
                                                                                        "description": "Trusted certificates for TLS connection to the OAuth server.",
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "certificate": {
                                                                                                    "description": "The name of the file certificate in the Secret.",
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "secretName": {
                                                                                                    "description": "The name of the Secret containing the certificate.",
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "certificate",
                                                                                                "secretName"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "type": {
                                                                                        "description": "Authentication type. `oauth` type uses SASL OAUTHBEARER Authentication. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `tls` type uses TLS Client Authentication. `tls` type is supported only on TLS listeners.",
                                                                                        "enum": [
                                                                                            "tls",
                                                                                            "scram-sha-512",
                                                                                            "oauth"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userInfoEndpointUri": {
                                                                                        "description": "URI of the User Info Endpoint to use as a fallback to obtaining the user id when the Introspection Endpoint does not return information that can be used for the user id. ",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "userNameClaim": {
                                                                                        "description": "Name of the claim from the JWT authentication token, Introspection Endpoint response or User Info Endpoint response which will be used to extract the user id. Defaults to `sub`.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validIssuerUri": {
                                                                                        "description": "URI of the token issuer used for authentication.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "validTokenType": {
                                                                                        "description": "Valid value for the `token_type` attribute returned by the Introspection Endpoint. No default value, and not checked by default.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "type"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "configuration": {
                                                                                "description": "Configuration of TLS listener.",
                                                                                "properties": {
                                                                                    "brokerCertChainAndKey": {
                                                                                        "description": "Reference to the `Secret` which holds the certificate and private key pair. The certificate can optionally contain the whole chain.",
                                                                                        "properties": {
                                                                                            "certificate": {
                                                                                                "description": "The name of the file certificate in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "key": {
                                                                                                "description": "The name of the private key in the Secret.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretName": {
                                                                                                "description": "The name of the Secret containing the certificate.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "certificate",
                                                                                            "key",
                                                                                            "secretName"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "networkPolicyPeers": {
                                                                                "description": "List of peers which should be able to connect to this listener. Peers in this list are combined using a logical OR operation. If this field is empty or missing, all connections will be allowed for this listener. If this field is present and contains at least one item, the listener only allows the traffic which matches at least one item in this list.",
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "ipBlock": {
                                                                                            "properties": {
                                                                                                "cidr": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "except": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaceSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "podSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        ]
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Logging configuration for Kafka.",
                                                        "properties": {
                                                            "loggers": {
                                                                "description": "A Map from logger name to logger level.",
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Logging type, must be either 'inline' or 'external'.",
                                                                "enum": [
                                                                    "inline",
                                                                    "external"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "metrics": {
                                                        "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                        "type": "object"
                                                    },
                                                    "rack": {
                                                        "description": "Configuration of the `broker.rack` broker config.",
                                                        "properties": {
                                                            "topologyKey": {
                                                                "description": "A key that matches labels assigned to the Kubernetes cluster nodes. The value of the label is used to set the broker's `broker.rack` config.",
                                                                "example": "topology.kubernetes.io/zone",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "topologyKey"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "replicas": {
                                                        "description": "The number of pods in the cluster.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "storage": {
                                                        "description": "Storage configuration (disk). Cannot be updated.",
                                                        "properties": {
                                                            "class": {
                                                                "description": "The storage class to use for dynamic volume allocation.",
                                                                "type": "string"
                                                            },
                                                            "deleteClaim": {
                                                                "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                                                                "type": "boolean"
                                                            },
                                                            "id": {
                                                                "description": "Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "overrides": {
                                                                "description": "Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.",
                                                                "items": {
                                                                    "properties": {
                                                                        "broker": {
                                                                            "description": "Id of the kafka broker (broker identifier).",
                                                                            "type": "integer"
                                                                        },
                                                                        "class": {
                                                                            "description": "The storage class to use for dynamic volume allocation for this broker.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "selector": {
                                                                "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                                                                "type": "object"
                                                            },
                                                            "size": {
                                                                "description": "When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.",
                                                                "type": "string"
                                                            },
                                                            "sizeLimit": {
                                                                "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                                                                "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Storage type, must be either 'ephemeral', 'persistent-claim', or 'jbod'.",
                                                                "enum": [
                                                                    "ephemeral",
                                                                    "persistent-claim",
                                                                    "jbod"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "volumes": {
                                                                "description": "List of volumes as Storage objects representing the JBOD disks array.",
                                                                "items": {
                                                                    "properties": {
                                                                        "class": {
                                                                            "description": "The storage class to use for dynamic volume allocation.",
                                                                            "type": "string"
                                                                        },
                                                                        "deleteClaim": {
                                                                            "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "id": {
                                                                            "description": "Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.",
                                                                            "minimum": 0,
                                                                            "type": "integer"
                                                                        },
                                                                        "overrides": {
                                                                            "description": "Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "broker": {
                                                                                        "description": "Id of the kafka broker (broker identifier).",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "class": {
                                                                                        "description": "The storage class to use for dynamic volume allocation for this broker.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "selector": {
                                                                            "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                                                                            "type": "object"
                                                                        },
                                                                        "size": {
                                                                            "description": "When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.",
                                                                            "type": "string"
                                                                        },
                                                                        "sizeLimit": {
                                                                            "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                                                                            "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "description": "Storage type, must be either 'ephemeral' or 'persistent-claim'.",
                                                                            "enum": [
                                                                                "ephemeral",
                                                                                "persistent-claim"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template for Kafka cluster resources. The template allows users to specify how are the `StatefulSet`, `Pods` and `Services` generated.",
                                                        "properties": {
                                                            "bootstrapService": {
                                                                "description": "Template for Kafka bootstrap `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "brokersService": {
                                                                "description": "Template for Kafka broker `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "externalBootstrapIngress": {
                                                                "description": "Template for Kafka external bootstrap `Ingress`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "externalBootstrapRoute": {
                                                                "description": "Template for Kafka external bootstrap `Route`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "externalBootstrapService": {
                                                                "description": "Template for Kafka external bootstrap `Service`.",
                                                                "properties": {
                                                                    "externalTrafficPolicy": {
                                                                        "description": "Specifies whether the service routes external traffic to node-local or cluster-wide endpoints. `Cluster` may cause a second hop to another node and obscures the client source IP. `Local` avoids a second hop for LoadBalancer and Nodeport type services and preserves the client source IP (when supported by the infrastructure). If unspecified, Kubernetes will use `Cluster` as the default.",
                                                                        "enum": [
                                                                            "Local",
                                                                            "Cluster"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "loadBalancerSourceRanges": {
                                                                        "description": "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to load balancer type listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "initContainer": {
                                                                "description": "Template for the Kafka init container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "kafkaContainer": {
                                                                "description": "Template for the Kafka broker container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "perPodIngress": {
                                                                "description": "Template for Kafka per-pod `Ingress` used for access from outside of Kubernetes.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "perPodRoute": {
                                                                "description": "Template for Kafka per-pod `Routes` used for access from outside of OpenShift.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "perPodService": {
                                                                "description": "Template for Kafka per-pod `Services` used for access from outside of Kubernetes.",
                                                                "properties": {
                                                                    "externalTrafficPolicy": {
                                                                        "description": "Specifies whether the service routes external traffic to node-local or cluster-wide endpoints. `Cluster` may cause a second hop to another node and obscures the client source IP. `Local` avoids a second hop for LoadBalancer and Nodeport type services and preserves the client source IP (when supported by the infrastructure). If unspecified, Kubernetes will use `Cluster` as the default.",
                                                                        "enum": [
                                                                            "Local",
                                                                            "Cluster"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "loadBalancerSourceRanges": {
                                                                        "description": "A list of CIDR ranges (for example `10.0.0.0/8` or `130.211.204.1/32`) from which clients can connect to load balancer type listeners. If supported by the platform, traffic through the loadbalancer is restricted to the specified CIDR ranges. This field is applicable only for loadbalancer type services and is ignored if the cloud provider does not support the feature. For more information, see https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/.",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "persistentVolumeClaim": {
                                                                "description": "Template for all Kafka `PersistentVolumeClaims`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for Kafka `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podDisruptionBudget": {
                                                                "description": "Template for Kafka `PodDisruptionBudget`.",
                                                                "properties": {
                                                                    "maxUnavailable": {
                                                                        "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "statefulset": {
                                                                "description": "Template for Kafka `StatefulSet`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podManagementPolicy": {
                                                                        "description": "PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.",
                                                                        "enum": [
                                                                            "OrderedReady",
                                                                            "Parallel"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tlsSidecarContainer": {
                                                                "description": "Template for the Kafka broker TLS sidecar container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tolerations": {
                                                        "description": "The pod's tolerations.",
                                                        "items": {
                                                            "properties": {
                                                                "effect": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "type": "string"
                                                                },
                                                                "tolerationSeconds": {
                                                                    "type": "integer"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "version": {
                                                        "description": "The kafka broker version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "replicas",
                                                    "storage",
                                                    "listeners"
                                                ],
                                                "type": "object"
                                            },
                                            "kafkaExporter": {
                                                "description": "Configuration of the Kafka Exporter. Kafka Exporter can provide additional metrics, for example lag of consumer group at topic/partition.",
                                                "properties": {
                                                    "enableSaramaLogging": {
                                                        "description": "Enable Sarama logging, a Go client library used by the Kafka Exporter.",
                                                        "type": "boolean"
                                                    },
                                                    "groupRegex": {
                                                        "description": "Regular expression to specify which consumer groups to collect. Default value is `.*`.",
                                                        "type": "string"
                                                    },
                                                    "image": {
                                                        "description": "The docker image for the pods.",
                                                        "type": "string"
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness check.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Only log messages with the given severity or above. Valid levels: [`debug`, `info`, `warn`, `error`, `fatal`]. Default log level is `info`.",
                                                        "type": "string"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness check.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Customization of deployment templates and pods.",
                                                        "properties": {
                                                            "container": {
                                                                "description": "Template for the Kafka Exporter container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "deployment": {
                                                                "description": "Template for Kafka Exporter `Deployment`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for Kafka Exporter `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "service": {
                                                                "description": "Template for Kafka Exporter `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "topicRegex": {
                                                        "description": "Regular expression to specify which topics to collect. Default value is `.*`.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "maintenanceTimeWindows": {
                                                "description": "A list of time windows for maintenance tasks (that is, certificates renewal). Each time window is defined by a cron expression.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "topicOperator": {
                                                "description": "Configuration of the Topic Operator.",
                                                "properties": {
                                                    "affinity": {
                                                        "description": "Pod affinity rules.",
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "description": "The image to use for the Topic Operator.",
                                                        "type": "string"
                                                    },
                                                    "jvmOptions": {
                                                        "description": "JVM Options for pods.",
                                                        "properties": {
                                                            "-XX": {
                                                                "description": "A map of -XX options to the JVM.",
                                                                "type": "object"
                                                            },
                                                            "-Xms": {
                                                                "description": "-Xms option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "-Xmx": {
                                                                "description": "-Xmx option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "gcLoggingEnabled": {
                                                                "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                "type": "boolean"
                                                            },
                                                            "javaSystemProperties": {
                                                                "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The system property name.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The system property value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Logging configuration.",
                                                        "properties": {
                                                            "loggers": {
                                                                "description": "A Map from logger name to logger level.",
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Logging type, must be either 'inline' or 'external'.",
                                                                "enum": [
                                                                    "inline",
                                                                    "external"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "reconciliationIntervalSeconds": {
                                                        "description": "Interval between periodic reconciliations.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "topicMetadataMaxAttempts": {
                                                        "description": "The number of attempts at getting topic metadata.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "watchedNamespace": {
                                                        "description": "The namespace the Topic Operator should watch.",
                                                        "type": "string"
                                                    },
                                                    "zookeeperSessionTimeoutSeconds": {
                                                        "description": "Timeout for the ZooKeeper session.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "zookeeper": {
                                                "description": "Configuration of the ZooKeeper cluster.",
                                                "properties": {
                                                    "affinity": {
                                                        "description": "The pod's affinity rules.",
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "config": {
                                                        "description": "The ZooKeeper broker config. Properties with the following prefixes cannot be set: server., dataDir, dataLogDir, clientPort, authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification, ssl.quorum.hostnameVerification).",
                                                        "type": "object"
                                                    },
                                                    "image": {
                                                        "description": "The docker image for the pods.",
                                                        "type": "string"
                                                    },
                                                    "jvmOptions": {
                                                        "description": "JVM Options for pods.",
                                                        "properties": {
                                                            "-XX": {
                                                                "description": "A map of -XX options to the JVM.",
                                                                "type": "object"
                                                            },
                                                            "-Xms": {
                                                                "description": "-Xms option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "-Xmx": {
                                                                "description": "-Xmx option to to the JVM.",
                                                                "pattern": "[0-9]+[mMgG]?",
                                                                "type": "string"
                                                            },
                                                            "gcLoggingEnabled": {
                                                                "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
                                                                "type": "boolean"
                                                            },
                                                            "javaSystemProperties": {
                                                                "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "The system property name.",
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "description": "The system property value.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "livenessProbe": {
                                                        "description": "Pod liveness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "logging": {
                                                        "description": "Logging configuration for ZooKeeper.",
                                                        "properties": {
                                                            "loggers": {
                                                                "description": "A Map from logger name to logger level.",
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "description": "The name of the `ConfigMap` from which to get the logging configuration.",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Logging type, must be either 'inline' or 'external'.",
                                                                "enum": [
                                                                    "inline",
                                                                    "external"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "metrics": {
                                                        "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
                                                        "type": "object"
                                                    },
                                                    "readinessProbe": {
                                                        "description": "Pod readiness checking.",
                                                        "properties": {
                                                            "failureThreshold": {
                                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "initialDelaySeconds": {
                                                                "description": "The initial delay before first the health is first checked.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "periodSeconds": {
                                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "successThreshold": {
                                                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                "type": "integer"
                                                            },
                                                            "timeoutSeconds": {
                                                                "description": "The timeout for each attempted health check.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "replicas": {
                                                        "description": "The number of pods in the cluster.",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "resources": {
                                                        "description": "CPU and memory resources to reserve.",
                                                        "properties": {
                                                            "limits": {
                                                                "type": "object"
                                                            },
                                                            "requests": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "storage": {
                                                        "description": "Storage configuration (disk). Cannot be updated.",
                                                        "properties": {
                                                            "class": {
                                                                "description": "The storage class to use for dynamic volume allocation.",
                                                                "type": "string"
                                                            },
                                                            "deleteClaim": {
                                                                "description": "Specifies if the persistent volume claim has to be deleted when the cluster is un-deployed.",
                                                                "type": "boolean"
                                                            },
                                                            "id": {
                                                                "description": "Storage identification number. It is mandatory only for storage volumes defined in a storage of type 'jbod'.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "overrides": {
                                                                "description": "Overrides for individual brokers. The `overrides` field allows to specify a different configuration for different brokers.",
                                                                "items": {
                                                                    "properties": {
                                                                        "broker": {
                                                                            "description": "Id of the kafka broker (broker identifier).",
                                                                            "type": "integer"
                                                                        },
                                                                        "class": {
                                                                            "description": "The storage class to use for dynamic volume allocation for this broker.",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "selector": {
                                                                "description": "Specifies a specific persistent volume to use. It contains key:value pairs representing labels for selecting such a volume.",
                                                                "type": "object"
                                                            },
                                                            "size": {
                                                                "description": "When type=persistent-claim, defines the size of the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.",
                                                                "type": "string"
                                                            },
                                                            "sizeLimit": {
                                                                "description": "When type=ephemeral, defines the total amount of local storage required for this EmptyDir volume (for example 1Gi).",
                                                                "pattern": "^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "Storage type, must be either 'ephemeral' or 'persistent-claim'.",
                                                                "enum": [
                                                                    "ephemeral",
                                                                    "persistent-claim"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "template": {
                                                        "description": "Template for ZooKeeper cluster resources. The template allows users to specify how are the `StatefulSet`, `Pods` and `Services` generated.",
                                                        "properties": {
                                                            "clientService": {
                                                                "description": "Template for ZooKeeper client `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "nodesService": {
                                                                "description": "Template for ZooKeeper nodes `Service`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "persistentVolumeClaim": {
                                                                "description": "Template for all ZooKeeper `PersistentVolumeClaims`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "pod": {
                                                                "description": "Template for ZooKeeper `Pods`.",
                                                                "properties": {
                                                                    "affinity": {
                                                                        "description": "The pod's affinity rules.",
                                                                        "properties": {
                                                                            "nodeAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "preference": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "properties": {
                                                                                            "nodeSelectorTerms": {
                                                                                                "items": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchFields": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "type": "array"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "podAntiAffinity": {
                                                                                "properties": {
                                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "podAffinityTerm": {
                                                                                                    "properties": {
                                                                                                        "labelSelector": {
                                                                                                            "properties": {
                                                                                                                "matchExpressions": {
                                                                                                                    "items": {
                                                                                                                        "properties": {
                                                                                                                            "key": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "operator": {
                                                                                                                                "type": "string"
                                                                                                                            },
                                                                                                                            "values": {
                                                                                                                                "items": {
                                                                                                                                    "type": "string"
                                                                                                                                },
                                                                                                                                "type": "array"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "type": "object"
                                                                                                                    },
                                                                                                                    "type": "array"
                                                                                                                },
                                                                                                                "matchLabels": {
                                                                                                                    "type": "object"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "namespaces": {
                                                                                                            "items": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "topologyKey": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "weight": {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "hostAliases": {
                                                                        "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "hostnames": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "ip": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "imagePullSecrets": {
                                                                        "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "priorityClassName": {
                                                                        "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                                                                        "type": "string"
                                                                    },
                                                                    "schedulerName": {
                                                                        "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                                                                        "type": "string"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Configures pod-level security attributes and common container settings.",
                                                                        "properties": {
                                                                            "fsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "fsGroupChangePolicy": {
                                                                                "type": "string"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "supplementalGroups": {
                                                                                "items": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "sysctls": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "terminationGracePeriodSeconds": {
                                                                        "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "tolerations": {
                                                                        "description": "The pod's tolerations.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "effect": {
                                                                                    "type": "string"
                                                                                },
                                                                                "key": {
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "type": "string"
                                                                                },
                                                                                "tolerationSeconds": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podDisruptionBudget": {
                                                                "description": "Template for ZooKeeper `PodDisruptionBudget`.",
                                                                "properties": {
                                                                    "maxUnavailable": {
                                                                        "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "metadata": {
                                                                        "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "statefulset": {
                                                                "description": "Template for ZooKeeper `StatefulSet`.",
                                                                "properties": {
                                                                    "metadata": {
                                                                        "description": "Metadata applied to the resource.",
                                                                        "properties": {
                                                                            "annotations": {
                                                                                "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            },
                                                                            "labels": {
                                                                                "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podManagementPolicy": {
                                                                        "description": "PodManagementPolicy which will be used for this StatefulSet. Valid values are `Parallel` and `OrderedReady`. Defaults to `Parallel`.",
                                                                        "enum": [
                                                                            "OrderedReady",
                                                                            "Parallel"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "tlsSidecarContainer": {
                                                                "description": "Template for the Zookeeper server TLS sidecar container. The TLS sidecar is not used anymore and this option will be ignored.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "zookeeperContainer": {
                                                                "description": "Template for the ZooKeeper container.",
                                                                "properties": {
                                                                    "env": {
                                                                        "description": "Environment variables which should be applied to the container.",
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "description": "The environment variable key.",
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "description": "The environment variable value.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "securityContext": {
                                                                        "description": "Security context for the container.",
                                                                        "properties": {
                                                                            "allowPrivilegeEscalation": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "capabilities": {
                                                                                "properties": {
                                                                                    "add": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "drop": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "privileged": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "procMount": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnlyRootFilesystem": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsGroup": {
                                                                                "type": "integer"
                                                                            },
                                                                            "runAsNonRoot": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "runAsUser": {
                                                                                "type": "integer"
                                                                            },
                                                                            "seLinuxOptions": {
                                                                                "properties": {
                                                                                    "level": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "role": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "user": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "windowsOptions": {
                                                                                "properties": {
                                                                                    "gmsaCredentialSpec": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "gmsaCredentialSpecName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "runAsUserName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSidecar": {
                                                        "description": "TLS sidecar configuration. The TLS sidecar is not used anymore and this option will be ignored.",
                                                        "properties": {
                                                            "image": {
                                                                "description": "The docker image for the container.",
                                                                "type": "string"
                                                            },
                                                            "livenessProbe": {
                                                                "description": "Pod liveness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "logLevel": {
                                                                "description": "The log level for the TLS sidecar. Default value is `notice`.",
                                                                "enum": [
                                                                    "emerg",
                                                                    "alert",
                                                                    "crit",
                                                                    "err",
                                                                    "warning",
                                                                    "notice",
                                                                    "info",
                                                                    "debug"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "readinessProbe": {
                                                                "description": "Pod readiness checking.",
                                                                "properties": {
                                                                    "failureThreshold": {
                                                                        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "initialDelaySeconds": {
                                                                        "description": "The initial delay before first the health is first checked.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    },
                                                                    "periodSeconds": {
                                                                        "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "successThreshold": {
                                                                        "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                                                        "type": "integer"
                                                                    },
                                                                    "timeoutSeconds": {
                                                                        "description": "The timeout for each attempted health check.",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "resources": {
                                                                "description": "CPU and memory resources to reserve.",
                                                                "properties": {
                                                                    "limits": {
                                                                        "type": "object"
                                                                    },
                                                                    "requests": {
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tolerations": {
                                                        "description": "The pod's tolerations.",
                                                        "items": {
                                                            "properties": {
                                                                "effect": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "type": "string"
                                                                },
                                                                "tolerationSeconds": {
                                                                    "type": "integer"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "replicas",
                                                    "storage"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "kafka",
                                            "zookeeper"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka and ZooKeeper clusters, and Topic Operator.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "listeners": {
                                                "description": "Addresses of the internal and external listeners.",
                                                "items": {
                                                    "properties": {
                                                        "addresses": {
                                                            "description": "A list of the addresses for this listener.",
                                                            "items": {
                                                                "properties": {
                                                                    "host": {
                                                                        "description": "The DNS name or IP address of the Kafka bootstrap service.",
                                                                        "type": "string"
                                                                    },
                                                                    "port": {
                                                                        "description": "The port of the Kafka bootstrap service.",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "bootstrapServers": {
                                                            "description": "A comma-separated list of `host:port` pairs for connecting to the Kafka cluster using this listener.",
                                                            "type": "string"
                                                        },
                                                        "certificates": {
                                                            "description": "A list of TLS certificates which can be used to verify the identity of the server when connecting to the given listener. Set only for `tls` and `external` listeners.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "type": {
                                                            "description": "The type of the listener. Can be one of the following three types: `plain`, `tls`, and `external`.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": false,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "Kafka",
                    "listKind": "KafkaList",
                    "plural": "kafkas",
                    "shortNames": [
                        "k"
                    ],
                    "singular": "kafka"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:04Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:04Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:08Z",
                        "message": "[spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[accessTokenIsJwt].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[accessTokenIsJwt].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[checkAccessTokenType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[checkAccessTokenType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[checkIssuer].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[checkIssuer].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[clientId].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[clientId].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[clientSecret].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[clientSecret].properties[key].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[clientSecret].properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[clientSecret].properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[clientSecret].properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[clientSecret].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[disableTlsHostnameVerification].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[disableTlsHostnameVerification].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[enableECDSA].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[enableECDSA].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[fallbackUserNameClaim].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[fallbackUserNameClaim].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[fallbackUserNamePrefix].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[fallbackUserNamePrefix].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[introspectionEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[introspectionEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[jwksEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[jwksEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[jwksExpirySeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[jwksExpirySeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[jwksMinRefreshPauseSeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[jwksMinRefreshPauseSeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[jwksRefreshSeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[jwksRefreshSeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[maxSecondsWithoutReauthentication].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[maxSecondsWithoutReauthentication].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[tlsTrustedCertificates].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[tlsTrustedCertificates].items.properties[certificate].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[tlsTrustedCertificates].items.properties[certificate].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[tlsTrustedCertificates].items.properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[tlsTrustedCertificates].items.properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[tlsTrustedCertificates].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[tlsTrustedCertificates].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[type].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[type].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[userInfoEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[userInfoEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[userNameClaim].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[userNameClaim].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[validIssuerUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[validIssuerUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[validTokenType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].properties[validTokenType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[authentication].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[alternativeNames].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[alternativeNames].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[alternativeNames].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[annotations].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[annotations].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[host].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[host].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[loadBalancerIP].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[loadBalancerIP].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[nodePort].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].properties[nodePort].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[bootstrap].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokerCertChainAndKey].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokerCertChainAndKey].properties[certificate].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokerCertChainAndKey].properties[certificate].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokerCertChainAndKey].properties[key].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokerCertChainAndKey].properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokerCertChainAndKey].properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokerCertChainAndKey].properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokerCertChainAndKey].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[advertisedHost].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[advertisedHost].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[advertisedPort].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[advertisedPort].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[annotations].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[annotations].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[broker].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[broker].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[host].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[host].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[loadBalancerIP].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[loadBalancerIP].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[nodePort].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.properties[nodePort].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[brokers].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[class].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[class].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[externalTrafficPolicy].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[externalTrafficPolicy].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[loadBalancerSourceRanges].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[loadBalancerSourceRanges].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[loadBalancerSourceRanges].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[preferredNodePortAddressType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[preferredNodePortAddressType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[useServiceDnsDomain].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].properties[useServiceDnsDomain].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[configuration].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[name].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[name].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[ipBlock].properties[cidr].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[ipBlock].properties[except].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[ipBlock].properties[except].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[ipBlock].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[operator].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[values].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[values].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchLabels].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[namespaceSelector].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[operator].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[values].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[values].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[podSelector].properties[matchLabels].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.properties[podSelector].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[networkPolicyPeers].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[port].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[port].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[tls].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[tls].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[type].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.properties[type].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[accessTokenIsJwt].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[accessTokenIsJwt].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[checkAccessTokenType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[checkAccessTokenType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[checkIssuer].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[checkIssuer].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[clientId].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[clientId].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[clientSecret].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[clientSecret].properties[key].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[clientSecret].properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[clientSecret].properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[clientSecret].properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[clientSecret].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[disableTlsHostnameVerification].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[disableTlsHostnameVerification].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[enableECDSA].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[enableECDSA].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[fallbackUserNameClaim].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[fallbackUserNameClaim].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[fallbackUserNamePrefix].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[fallbackUserNamePrefix].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[introspectionEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[introspectionEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[jwksEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[jwksEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[jwksExpirySeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[jwksExpirySeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[jwksMinRefreshPauseSeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[jwksMinRefreshPauseSeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[jwksRefreshSeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[jwksRefreshSeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[maxSecondsWithoutReauthentication].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[maxSecondsWithoutReauthentication].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[tlsTrustedCertificates].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[tlsTrustedCertificates].items.properties[certificate].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[tlsTrustedCertificates].items.properties[certificate].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[tlsTrustedCertificates].items.properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[tlsTrustedCertificates].items.properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[tlsTrustedCertificates].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[tlsTrustedCertificates].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[type].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[type].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[userInfoEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[userInfoEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[userNameClaim].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[userNameClaim].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[validIssuerUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[validIssuerUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[validTokenType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].properties[validTokenType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[authentication].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[class].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[class].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[bootstrap].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[bootstrap].properties[address].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[bootstrap].properties[address].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[bootstrap].properties[dnsAnnotations].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[bootstrap].properties[dnsAnnotations].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[bootstrap].properties[host].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[bootstrap].properties[host].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[bootstrap].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokerCertChainAndKey].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokerCertChainAndKey].properties[certificate].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokerCertChainAndKey].properties[certificate].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokerCertChainAndKey].properties[key].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokerCertChainAndKey].properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokerCertChainAndKey].properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokerCertChainAndKey].properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokerCertChainAndKey].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[advertisedHost].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[advertisedHost].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[advertisedPort].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[advertisedPort].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[broker].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[broker].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[dnsAnnotations].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[dnsAnnotations].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[host].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.properties[host].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].properties[brokers].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[configuration].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[ipBlock].properties[cidr].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[ipBlock].properties[except].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[ipBlock].properties[except].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[ipBlock].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[operator].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[values].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[values].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchLabels].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[namespaceSelector].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[operator].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[values].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[values].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[podSelector].properties[matchLabels].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.properties[podSelector].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[networkPolicyPeers].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[bootstrap].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[bootstrap].properties[address].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[bootstrap].properties[address].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[bootstrap].properties[dnsAnnotations].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[bootstrap].properties[dnsAnnotations].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[bootstrap].properties[nodePort].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[bootstrap].properties[nodePort].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[bootstrap].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[advertisedHost].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[advertisedHost].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[advertisedPort].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[advertisedPort].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[broker].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[broker].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[dnsAnnotations].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[dnsAnnotations].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[nodePort].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.properties[nodePort].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].properties[brokers].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[overrides].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[tls].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[tls].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[type].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].properties[type].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[external].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[accessTokenIsJwt].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[accessTokenIsJwt].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[checkAccessTokenType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[checkAccessTokenType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[checkIssuer].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[checkIssuer].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[clientId].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[clientId].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[clientSecret].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[clientSecret].properties[key].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[clientSecret].properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[clientSecret].properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[clientSecret].properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[clientSecret].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[disableTlsHostnameVerification].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[disableTlsHostnameVerification].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[enableECDSA].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[enableECDSA].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[fallbackUserNameClaim].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[fallbackUserNameClaim].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[fallbackUserNamePrefix].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[fallbackUserNamePrefix].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[introspectionEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[introspectionEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[jwksEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[jwksEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[jwksExpirySeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[jwksExpirySeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[jwksMinRefreshPauseSeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[jwksMinRefreshPauseSeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[jwksRefreshSeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[jwksRefreshSeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[maxSecondsWithoutReauthentication].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[maxSecondsWithoutReauthentication].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[tlsTrustedCertificates].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[tlsTrustedCertificates].items.properties[certificate].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[tlsTrustedCertificates].items.properties[certificate].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[tlsTrustedCertificates].items.properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[tlsTrustedCertificates].items.properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[tlsTrustedCertificates].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[tlsTrustedCertificates].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[type].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[type].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[userInfoEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[userInfoEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[userNameClaim].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[userNameClaim].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[validIssuerUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[validIssuerUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[validTokenType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].properties[validTokenType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[authentication].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[ipBlock].properties[cidr].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[ipBlock].properties[except].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[ipBlock].properties[except].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[ipBlock].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[operator].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[values].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[values].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchLabels].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[namespaceSelector].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[operator].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[values].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[values].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[podSelector].properties[matchLabels].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.properties[podSelector].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].properties[networkPolicyPeers].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[plain].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[accessTokenIsJwt].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[accessTokenIsJwt].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[checkAccessTokenType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[checkAccessTokenType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[checkIssuer].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[checkIssuer].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[clientId].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[clientId].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[clientSecret].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[clientSecret].properties[key].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[clientSecret].properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[clientSecret].properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[clientSecret].properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[clientSecret].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[disableTlsHostnameVerification].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[disableTlsHostnameVerification].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[enableECDSA].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[enableECDSA].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[fallbackUserNameClaim].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[fallbackUserNameClaim].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[fallbackUserNamePrefix].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[fallbackUserNamePrefix].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[introspectionEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[introspectionEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[jwksEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[jwksEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[jwksExpirySeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[jwksExpirySeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[jwksMinRefreshPauseSeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[jwksMinRefreshPauseSeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[jwksRefreshSeconds].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[jwksRefreshSeconds].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[maxSecondsWithoutReauthentication].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[maxSecondsWithoutReauthentication].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[tlsTrustedCertificates].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[tlsTrustedCertificates].items.properties[certificate].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[tlsTrustedCertificates].items.properties[certificate].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[tlsTrustedCertificates].items.properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[tlsTrustedCertificates].items.properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[tlsTrustedCertificates].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[tlsTrustedCertificates].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[type].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[type].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[userInfoEndpointUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[userInfoEndpointUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[userNameClaim].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[userNameClaim].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[validIssuerUri].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[validIssuerUri].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[validTokenType].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].properties[validTokenType].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[authentication].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].properties[brokerCertChainAndKey].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].properties[brokerCertChainAndKey].properties[certificate].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].properties[brokerCertChainAndKey].properties[certificate].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].properties[brokerCertChainAndKey].properties[key].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].properties[brokerCertChainAndKey].properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].properties[brokerCertChainAndKey].properties[secretName].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].properties[brokerCertChainAndKey].properties[secretName].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].properties[brokerCertChainAndKey].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[configuration].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].description: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[ipBlock].properties[cidr].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[ipBlock].properties[except].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[ipBlock].properties[except].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[ipBlock].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[operator].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[values].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.properties[values].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchExpressions].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[namespaceSelector].properties[matchLabels].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[namespaceSelector].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[key].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[operator].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[values].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.properties[values].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[podSelector].properties[matchExpressions].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[podSelector].properties[matchLabels].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.properties[podSelector].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].items.type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].properties[networkPolicyPeers].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].properties[tls].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].oneOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[kafka].properties[listeners].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root]",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:05Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkatopics.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkatopics.kafka.strimzi.io",
                "resourceVersion": "39642",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkatopics.kafka.strimzi.io",
                "uid": "82c78fe3-ef73-434f-b918-93a419720520"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaTopic",
                    "listKind": "KafkaTopicList",
                    "plural": "kafkatopics",
                    "shortNames": [
                        "kt"
                    ],
                    "singular": "kafkatopic"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The name of the Kafka cluster this topic belongs to",
                                "jsonPath": ".metadata.labels.strimzi\\.io/cluster",
                                "name": "Cluster",
                                "type": "string"
                            },
                            {
                                "description": "The desired number of partitions in the topic",
                                "jsonPath": ".spec.partitions",
                                "name": "Partitions",
                                "type": "integer"
                            },
                            {
                                "description": "The desired number of replicas of each partition",
                                "jsonPath": ".spec.replicas",
                                "name": "Replication factor",
                                "type": "integer"
                            }
                        ],
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the topic.",
                                        "properties": {
                                            "config": {
                                                "description": "The topic configuration.",
                                                "type": "object"
                                            },
                                            "partitions": {
                                                "description": "The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning.",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The number of replicas the topic should have.",
                                                "maximum": 32767,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "topicName": {
                                                "description": "The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "partitions",
                                            "replicas"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the topic.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    },
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The name of the Kafka cluster this topic belongs to",
                                "jsonPath": ".metadata.labels.strimzi\\.io/cluster",
                                "name": "Cluster",
                                "type": "string"
                            },
                            {
                                "description": "The desired number of partitions in the topic",
                                "jsonPath": ".spec.partitions",
                                "name": "Partitions",
                                "type": "integer"
                            },
                            {
                                "description": "The desired number of replicas of each partition",
                                "jsonPath": ".spec.replicas",
                                "name": "Replication factor",
                                "type": "integer"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the topic.",
                                        "properties": {
                                            "config": {
                                                "description": "The topic configuration.",
                                                "type": "object"
                                            },
                                            "partitions": {
                                                "description": "The number of partitions the topic should have. This cannot be decreased after topic creation. It can be increased after topic creation, but it is important to understand the consequences that has, especially for topics with semantic partitioning.",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "replicas": {
                                                "description": "The number of replicas the topic should have.",
                                                "maximum": 32767,
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "topicName": {
                                                "description": "The name of the topic. When absent this will default to the metadata.name of the topic. It is recommended to not set this unless the topic name is not a valid Kubernetes resource name.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "partitions",
                                            "replicas"
                                        ],
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the topic.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": false,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaTopic",
                    "listKind": "KafkaTopicList",
                    "plural": "kafkatopics",
                    "shortNames": [
                        "kt"
                    ],
                    "singular": "kafkatopic"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:05Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:05Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "creationTimestamp": "2020-10-26T16:08:05Z",
                "generation": 1,
                "labels": {
                    "app": "strimzi",
                    "component": "kafkausers.kafka.strimzi.io-crd",
                    "strimzi.io/crd-install": "true"
                },
                "name": "kafkausers.kafka.strimzi.io",
                "resourceVersion": "39651",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/kafkausers.kafka.strimzi.io",
                "uid": "38cbadd0-cd3b-4d0b-b0db-f485137f1fae"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "kafka.strimzi.io",
                "names": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaUser",
                    "listKind": "KafkaUserList",
                    "plural": "kafkausers",
                    "shortNames": [
                        "ku"
                    ],
                    "singular": "kafkauser"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The name of the Kafka cluster this user belongs to",
                                "jsonPath": ".metadata.labels.strimzi\\.io/cluster",
                                "name": "Cluster",
                                "type": "string"
                            },
                            {
                                "description": "How the user is authenticated",
                                "jsonPath": ".spec.authentication.type",
                                "name": "Authentication",
                                "type": "string"
                            },
                            {
                                "description": "How the user is authorised",
                                "jsonPath": ".spec.authorization.type",
                                "name": "Authorization",
                                "type": "string"
                            }
                        ],
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the user.",
                                        "properties": {
                                            "authentication": {
                                                "description": "Authentication mechanism enabled for this Kafka user.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Authentication type.",
                                                        "enum": [
                                                            "tls",
                                                            "scram-sha-512"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "authorization": {
                                                "description": "Authorization rules for this Kafka user.",
                                                "properties": {
                                                    "acls": {
                                                        "description": "List of ACL rules which should be applied to this user.",
                                                        "items": {
                                                            "properties": {
                                                                "host": {
                                                                    "description": "The host from which the action described in the ACL rule is allowed or denied.",
                                                                    "type": "string"
                                                                },
                                                                "operation": {
                                                                    "description": "Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.",
                                                                    "enum": [
                                                                        "Read",
                                                                        "Write",
                                                                        "Create",
                                                                        "Delete",
                                                                        "Alter",
                                                                        "Describe",
                                                                        "ClusterAction",
                                                                        "AlterConfigs",
                                                                        "DescribeConfigs",
                                                                        "IdempotentWrite",
                                                                        "All"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "resource": {
                                                                    "description": "Indicates the resource for which given ACL rule applies.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.",
                                                                            "type": "string"
                                                                        },
                                                                        "patternType": {
                                                                            "description": "Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.",
                                                                            "enum": [
                                                                                "literal",
                                                                                "prefix"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "description": "Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.",
                                                                            "enum": [
                                                                                "topic",
                                                                                "group",
                                                                                "cluster",
                                                                                "transactionalId"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "description": "The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.",
                                                                    "enum": [
                                                                        "allow",
                                                                        "deny"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "operation",
                                                                "resource"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "type": {
                                                        "description": "Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization.",
                                                        "enum": [
                                                            "simple"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "acls",
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "quotas": {
                                                "description": "Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.",
                                                "properties": {
                                                    "consumerByteRate": {
                                                        "description": "A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "producerByteRate": {
                                                        "description": "A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "requestPercentage": {
                                                        "description": "A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template to specify how Kafka User `Secrets` are generated.",
                                                "properties": {
                                                    "secret": {
                                                        "description": "Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka User.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "secret": {
                                                "description": "The name of `Secret` where the credentials are stored.",
                                                "type": "string"
                                            },
                                            "username": {
                                                "description": "Username.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    },
                    {
                        "additionalPrinterColumns": [
                            {
                                "description": "The name of the Kafka cluster this user belongs to",
                                "jsonPath": ".metadata.labels.strimzi\\.io/cluster",
                                "name": "Cluster",
                                "type": "string"
                            },
                            {
                                "description": "How the user is authenticated",
                                "jsonPath": ".spec.authentication.type",
                                "name": "Authentication",
                                "type": "string"
                            },
                            {
                                "description": "How the user is authorised",
                                "jsonPath": ".spec.authorization.type",
                                "name": "Authorization",
                                "type": "string"
                            }
                        ],
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "description": "The specification of the user.",
                                        "properties": {
                                            "authentication": {
                                                "description": "Authentication mechanism enabled for this Kafka user.",
                                                "properties": {
                                                    "type": {
                                                        "description": "Authentication type.",
                                                        "enum": [
                                                            "tls",
                                                            "scram-sha-512"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "authorization": {
                                                "description": "Authorization rules for this Kafka user.",
                                                "properties": {
                                                    "acls": {
                                                        "description": "List of ACL rules which should be applied to this user.",
                                                        "items": {
                                                            "properties": {
                                                                "host": {
                                                                    "description": "The host from which the action described in the ACL rule is allowed or denied.",
                                                                    "type": "string"
                                                                },
                                                                "operation": {
                                                                    "description": "Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.",
                                                                    "enum": [
                                                                        "Read",
                                                                        "Write",
                                                                        "Create",
                                                                        "Delete",
                                                                        "Alter",
                                                                        "Describe",
                                                                        "ClusterAction",
                                                                        "AlterConfigs",
                                                                        "DescribeConfigs",
                                                                        "IdempotentWrite",
                                                                        "All"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "resource": {
                                                                    "description": "Indicates the resource for which given ACL rule applies.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.",
                                                                            "type": "string"
                                                                        },
                                                                        "patternType": {
                                                                            "description": "Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.",
                                                                            "enum": [
                                                                                "literal",
                                                                                "prefix"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "description": "Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.",
                                                                            "enum": [
                                                                                "topic",
                                                                                "group",
                                                                                "cluster",
                                                                                "transactionalId"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "description": "The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.",
                                                                    "enum": [
                                                                        "allow",
                                                                        "deny"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "operation",
                                                                "resource"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "type": {
                                                        "description": "Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses Kafka's `kafka.security.authorizer.AclAuthorizer` class for authorization.",
                                                        "enum": [
                                                            "simple"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "acls",
                                                    "type"
                                                ],
                                                "type": "object"
                                            },
                                            "quotas": {
                                                "description": "Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.",
                                                "properties": {
                                                    "consumerByteRate": {
                                                        "description": "A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "producerByteRate": {
                                                        "description": "A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "requestPercentage": {
                                                        "description": "A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "template": {
                                                "description": "Template to specify how Kafka User `Secrets` are generated.",
                                                "properties": {
                                                    "secret": {
                                                        "description": "Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.",
                                                        "properties": {
                                                            "metadata": {
                                                                "description": "Metadata applied to the resource.",
                                                                "properties": {
                                                                    "annotations": {
                                                                        "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    },
                                                                    "labels": {
                                                                        "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "The status of the Kafka User.",
                                        "properties": {
                                            "conditions": {
                                                "description": "List of status conditions.",
                                                "items": {
                                                    "properties": {
                                                        "lastTransitionTime": {
                                                            "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "description": "Human-readable message indicating details about the condition's last transition.",
                                                            "type": "string"
                                                        },
                                                        "reason": {
                                                            "description": "The reason for the condition's last transition (a single word in CamelCase).",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "The status of the condition, either True, False or Unknown.",
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "observedGeneration": {
                                                "description": "The generation of the CRD that was last reconciled by the operator.",
                                                "type": "integer"
                                            },
                                            "secret": {
                                                "description": "The name of `Secret` where the credentials are stored.",
                                                "type": "string"
                                            },
                                            "username": {
                                                "description": "Username.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": false,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "categories": [
                        "strimzi"
                    ],
                    "kind": "KafkaUser",
                    "listKind": "KafkaUserList",
                    "plural": "kafkausers",
                    "shortNames": [
                        "ku"
                    ],
                    "singular": "kafkauser"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:05Z",
                        "message": "spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:07Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1beta1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "components.gke.io/component-name": "managedcertificates-crd",
                    "components.gke.io/component-version": "0.1.0",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"components.gke.io/component-name\":\"managedcertificates-crd\",\"components.gke.io/component-version\":\"0.1.0\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"managedcertificates.networking.gke.io\"},\"spec\":{\"group\":\"networking.gke.io\",\"names\":{\"kind\":\"ManagedCertificate\",\"plural\":\"managedcertificates\",\"shortNames\":[\"mcrt\"],\"singular\":\"managedcertificate\"},\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v1beta1\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"spec\":{\"properties\":{\"domains\":{\"items\":{\"maxLength\":63,\"pattern\":\"^(([a-zA-Z0-9]+|[a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9])\\\\.)+[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]\\\\.?$\",\"type\":\"string\"},\"maxItems\":1,\"type\":\"array\"}}},\"status\":{\"properties\":{\"certificateName\":{\"type\":\"string\"},\"certificateStatus\":{\"type\":\"string\"},\"domainStatus\":{\"items\":{\"properties\":{\"domain\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"}},\"required\":[\"domain\",\"status\"],\"type\":\"object\"},\"type\":\"array\"},\"expireTime\":{\"format\":\"date-time\",\"type\":\"string\"}}}}}},\"served\":true,\"storage\":false},{\"name\":\"v1beta2\",\"schema\":{\"openAPIV3Schema\":{\"properties\":{\"spec\":{\"properties\":{\"domains\":{\"items\":{\"maxLength\":63,\"pattern\":\"^(([a-zA-Z0-9]+|[a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9])\\\\.)+[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]\\\\.?$\",\"type\":\"string\"},\"maxItems\":100,\"type\":\"array\"}}},\"status\":{\"properties\":{\"certificateName\":{\"type\":\"string\"},\"certificateStatus\":{\"type\":\"string\"},\"domainStatus\":{\"items\":{\"properties\":{\"domain\":{\"type\":\"string\"},\"status\":{\"type\":\"string\"}},\"required\":[\"domain\",\"status\"],\"type\":\"object\"},\"type\":\"array\"},\"expireTime\":{\"format\":\"date-time\",\"type\":\"string\"}}}}}},\"served\":true,\"storage\":true}]}}\n"
                },
                "creationTimestamp": "2020-10-26T14:02:45Z",
                "generation": 1,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile"
                },
                "name": "managedcertificates.networking.gke.io",
                "resourceVersion": "443",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/managedcertificates.networking.gke.io",
                "uid": "b9adcaad-77b9-4667-ba7e-20a99edd2578"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "networking.gke.io",
                "names": {
                    "kind": "ManagedCertificate",
                    "listKind": "ManagedCertificateList",
                    "plural": "managedcertificates",
                    "shortNames": [
                        "mcrt"
                    ],
                    "singular": "managedcertificate"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1beta1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "domains": {
                                                "items": {
                                                    "maxLength": 63,
                                                    "pattern": "^(([a-zA-Z0-9]+|[a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9])\\.)+[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]\\.?$",
                                                    "type": "string"
                                                },
                                                "maxItems": 1,
                                                "type": "array"
                                            }
                                        }
                                    },
                                    "status": {
                                        "properties": {
                                            "certificateName": {
                                                "type": "string"
                                            },
                                            "certificateStatus": {
                                                "type": "string"
                                            },
                                            "domainStatus": {
                                                "items": {
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "domain",
                                                        "status"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "expireTime": {
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": false
                    },
                    {
                        "name": "v1beta2",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "domains": {
                                                "items": {
                                                    "maxLength": 63,
                                                    "pattern": "^(([a-zA-Z0-9]+|[a-zA-Z0-9][-a-zA-Z0-9]*[a-zA-Z0-9])\\.)+[a-zA-Z][-a-zA-Z0-9]*[a-zA-Z0-9]\\.?$",
                                                    "type": "string"
                                                },
                                                "maxItems": 100,
                                                "type": "array"
                                            }
                                        }
                                    },
                                    "status": {
                                        "properties": {
                                            "certificateName": {
                                                "type": "string"
                                            },
                                            "certificateStatus": {
                                                "type": "string"
                                            },
                                            "domainStatus": {
                                                "items": {
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "domain",
                                                        "status"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "expireTime": {
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "ManagedCertificate",
                    "listKind": "ManagedCertificateList",
                    "plural": "managedcertificates",
                    "shortNames": [
                        "mcrt"
                    ],
                    "singular": "managedcertificate"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T14:02:45Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:45Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:45Z",
                        "message": "[spec.version[v1beta1].schema.openAPIV3Schema.properties[spec].type: Required value: must not be empty for specified object fields, spec.version[v1beta1].schema.openAPIV3Schema.properties[status].type: Required value: must not be empty for specified object fields, spec.version[v1beta1].schema.openAPIV3Schema.type: Required value: must not be empty at the root, spec.version[v1beta2].schema.openAPIV3Schema.properties[spec].type: Required value: must not be empty for specified object fields, spec.version[v1beta2].schema.openAPIV3Schema.properties[status].type: Required value: must not be empty for specified object fields, spec.version[v1beta2].schema.openAPIV3Schema.type: Required value: must not be empty at the root]",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    }
                ],
                "storedVersions": [
                    "v1beta2"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "components.gke.io/component-name": "fluentd-scaler",
                    "components.gke.io/component-version": "1.0.1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"components.gke.io/component-name\":\"fluentd-scaler\",\"components.gke.io/component-version\":\"1.0.1\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"scalingpolicies.scalingpolicy.kope.io\"},\"spec\":{\"group\":\"scalingpolicy.kope.io\",\"names\":{\"kind\":\"ScalingPolicy\",\"plural\":\"scalingpolicies\"},\"scope\":\"Namespaced\",\"version\":\"v1alpha1\"}}\n"
                },
                "creationTimestamp": "2020-10-26T14:02:45Z",
                "generation": 1,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile"
                },
                "name": "scalingpolicies.scalingpolicy.kope.io",
                "resourceVersion": "408",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/scalingpolicies.scalingpolicy.kope.io",
                "uid": "12e9fc13-403f-4958-9a2e-e4303b0fceca"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "scalingpolicy.kope.io",
                "names": {
                    "kind": "ScalingPolicy",
                    "listKind": "ScalingPolicyList",
                    "plural": "scalingpolicies",
                    "singular": "scalingpolicy"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "ScalingPolicy",
                    "listKind": "ScalingPolicyList",
                    "plural": "scalingpolicies",
                    "singular": "scalingpolicy"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T14:02:45Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:45Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "helm.sh/hook-delete-policy": "before-hook-creation",
                    "meta.helm.sh/release-name": "spark-operator",
                    "meta.helm.sh/release-namespace": "cloudflow"
                },
                "creationTimestamp": "2020-10-26T16:08:26Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "sparkoperator"
                },
                "name": "scheduledsparkapplications.sparkoperator.k8s.io",
                "resourceVersion": "39832",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/scheduledsparkapplications.sparkoperator.k8s.io",
                "uid": "c3920f61-ce20-4a38-b1cd-4a84abacfa52"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "sparkoperator.k8s.io",
                "names": {
                    "kind": "ScheduledSparkApplication",
                    "listKind": "ScheduledSparkApplicationList",
                    "plural": "scheduledsparkapplications",
                    "shortNames": [
                        "scheduledsparkapp"
                    ],
                    "singular": "scheduledsparkapplication"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1beta2",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "type": "string"
                                    },
                                    "kind": {
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "properties": {
                                            "concurrencyPolicy": {
                                                "type": "string"
                                            },
                                            "failedRunHistoryLimit": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "schedule": {
                                                "type": "string"
                                            },
                                            "successfulRunHistoryLimit": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "suspend": {
                                                "type": "boolean"
                                            },
                                            "template": {
                                                "properties": {
                                                    "arguments": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "batchScheduler": {
                                                        "type": "string"
                                                    },
                                                    "batchSchedulerOptions": {
                                                        "properties": {
                                                            "priorityClassName": {
                                                                "type": "string"
                                                            },
                                                            "queue": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deps": {
                                                        "properties": {
                                                            "downloadTimeout": {
                                                                "format": "int32",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "files": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "filesDownloadDir": {
                                                                "type": "string"
                                                            },
                                                            "jars": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "jarsDownloadDir": {
                                                                "type": "string"
                                                            },
                                                            "maxSimultaneousDownloads": {
                                                                "format": "int32",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "pyFiles": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "properties": {
                                                            "affinity": {
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "preference",
                                                                                        "weight"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "nodeSelectorTerms"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "key",
                                                                                                                    "operator"
                                                                                                                ],
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "additionalProperties": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "topologyKey"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "podAffinityTerm",
                                                                                        "weight"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "topologyKey"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "key",
                                                                                                                    "operator"
                                                                                                                ],
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "additionalProperties": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "topologyKey"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "podAffinityTerm",
                                                                                        "weight"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "topologyKey"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "annotations": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "configMaps": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "path"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "coreLimit": {
                                                                "type": "string"
                                                            },
                                                            "cores": {
                                                                "format": "int32",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "dnsConfig": {
                                                                "properties": {
                                                                    "nameservers": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "options": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "searches": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "envSecretKeyRefs": {
                                                                "additionalProperties": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "envVars": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "gpu": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "quantity": {
                                                                        "format": "int64",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "quantity"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "hostNetwork": {
                                                                "type": "boolean"
                                                            },
                                                            "image": {
                                                                "type": "string"
                                                            },
                                                            "javaOptions": {
                                                                "type": "string"
                                                            },
                                                            "labels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "memory": {
                                                                "type": "string"
                                                            },
                                                            "memoryOverhead": {
                                                                "type": "string"
                                                            },
                                                            "nodeSelector": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podName": {
                                                                "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                                                "type": "string"
                                                            },
                                                            "schedulerName": {
                                                                "type": "string"
                                                            },
                                                            "secrets": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretType": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "path",
                                                                        "secretType"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "format": "int64",
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "format": "int64",
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "format": "int64",
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "format": "int64",
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "value"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "serviceAccount": {
                                                                "type": "string"
                                                            },
                                                            "sidecars": {
                                                                "items": {
                                                                    "properties": {
                                                                        "args": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "command": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "env": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueFrom": {
                                                                                        "properties": {
                                                                                            "configMapKeyRef": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "optional": {
                                                                                                        "type": "boolean"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "fieldRef": {
                                                                                                "properties": {
                                                                                                    "apiVersion": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "fieldPath": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "fieldPath"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "resourceFieldRef": {
                                                                                                "properties": {
                                                                                                    "containerName": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "divisor": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "resource": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "resource"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "secretKeyRef": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "optional": {
                                                                                                        "type": "boolean"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "envFrom": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "configMapRef": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "optional": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "prefix": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "secretRef": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "optional": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "image": {
                                                                            "type": "string"
                                                                        },
                                                                        "imagePullPolicy": {
                                                                            "type": "string"
                                                                        },
                                                                        "lifecycle": {
                                                                            "properties": {
                                                                                "postStart": {
                                                                                    "properties": {
                                                                                        "exec": {
                                                                                            "properties": {
                                                                                                "command": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "httpGet": {
                                                                                            "properties": {
                                                                                                "host": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "httpHeaders": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "name": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "name",
                                                                                                            "value"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "path": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "port": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "scheme": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "port"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "tcpSocket": {
                                                                                            "properties": {
                                                                                                "host": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "port": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "port"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "preStop": {
                                                                                    "properties": {
                                                                                        "exec": {
                                                                                            "properties": {
                                                                                                "command": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "httpGet": {
                                                                                            "properties": {
                                                                                                "host": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "httpHeaders": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "name": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "name",
                                                                                                            "value"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "path": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "port": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "scheme": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "port"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "tcpSocket": {
                                                                                            "properties": {
                                                                                                "host": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "port": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "port"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "livenessProbe": {
                                                                            "properties": {
                                                                                "exec": {
                                                                                    "properties": {
                                                                                        "command": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "failureThreshold": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "httpGet": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "httpHeaders": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "name",
                                                                                                    "value"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "path": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "scheme": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "initialDelaySeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "periodSeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "successThreshold": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "tcpSocket": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "timeoutSeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "ports": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "containerPort": {
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "hostIP": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hostPort": {
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "protocol": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "containerPort"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "readinessProbe": {
                                                                            "properties": {
                                                                                "exec": {
                                                                                    "properties": {
                                                                                        "command": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "failureThreshold": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "httpGet": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "httpHeaders": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "name",
                                                                                                    "value"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "path": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "scheme": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "initialDelaySeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "periodSeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "successThreshold": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "tcpSocket": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "timeoutSeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "resources": {
                                                                            "properties": {
                                                                                "limits": {
                                                                                    "additionalProperties": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "requests": {
                                                                                    "additionalProperties": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "securityContext": {
                                                                            "properties": {
                                                                                "allowPrivilegeEscalation": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "capabilities": {
                                                                                    "properties": {
                                                                                        "add": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "drop": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "privileged": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "procMount": {
                                                                                    "type": "string"
                                                                                },
                                                                                "readOnlyRootFilesystem": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "runAsGroup": {
                                                                                    "format": "int64",
                                                                                    "type": "integer"
                                                                                },
                                                                                "runAsNonRoot": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "runAsUser": {
                                                                                    "format": "int64",
                                                                                    "type": "integer"
                                                                                },
                                                                                "seLinuxOptions": {
                                                                                    "properties": {
                                                                                        "level": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "role": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "user": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "stdin": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "stdinOnce": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "terminationMessagePath": {
                                                                            "type": "string"
                                                                        },
                                                                        "terminationMessagePolicy": {
                                                                            "type": "string"
                                                                        },
                                                                        "tty": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "volumeDevices": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "devicePath": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "devicePath",
                                                                                    "name"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "volumeMounts": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "mountPath": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mountPropagation": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "readOnly": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "subPath": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "mountPath",
                                                                                    "name"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "workingDir": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tolerations": {
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "format": "int64",
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "volumeMounts": {
                                                                "items": {
                                                                    "properties": {
                                                                        "mountPath": {
                                                                            "type": "string"
                                                                        },
                                                                        "mountPropagation": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "readOnly": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "subPath": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "mountPath",
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "executor": {
                                                        "properties": {
                                                            "affinity": {
                                                                "properties": {
                                                                    "nodeAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "preference": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "preference",
                                                                                        "weight"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "properties": {
                                                                                    "nodeSelectorTerms": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchFields": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "nodeSelectorTerms"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "key",
                                                                                                                    "operator"
                                                                                                                ],
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "additionalProperties": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "topologyKey"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "podAffinityTerm",
                                                                                        "weight"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "topologyKey"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "podAntiAffinity": {
                                                                        "properties": {
                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "podAffinityTerm": {
                                                                                            "properties": {
                                                                                                "labelSelector": {
                                                                                                    "properties": {
                                                                                                        "matchExpressions": {
                                                                                                            "items": {
                                                                                                                "properties": {
                                                                                                                    "key": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "operator": {
                                                                                                                        "type": "string"
                                                                                                                    },
                                                                                                                    "values": {
                                                                                                                        "items": {
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "type": "array"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "key",
                                                                                                                    "operator"
                                                                                                                ],
                                                                                                                "type": "object"
                                                                                                            },
                                                                                                            "type": "array"
                                                                                                        },
                                                                                                        "matchLabels": {
                                                                                                            "additionalProperties": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "namespaces": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "topologyKey": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "topologyKey"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "weight": {
                                                                                            "format": "int32",
                                                                                            "type": "integer"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "podAffinityTerm",
                                                                                        "weight"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "topologyKey"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "annotations": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "configMaps": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "path"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "coreLimit": {
                                                                "type": "string"
                                                            },
                                                            "coreRequest": {
                                                                "type": "string"
                                                            },
                                                            "cores": {
                                                                "format": "int32",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "dnsConfig": {
                                                                "properties": {
                                                                    "nameservers": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "options": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "searches": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "envSecretKeyRefs": {
                                                                "additionalProperties": {
                                                                    "properties": {
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "envVars": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "gpu": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "quantity": {
                                                                        "format": "int64",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "quantity"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "hostNetwork": {
                                                                "type": "boolean"
                                                            },
                                                            "image": {
                                                                "type": "string"
                                                            },
                                                            "instances": {
                                                                "format": "int32",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "javaOptions": {
                                                                "type": "string"
                                                            },
                                                            "labels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "memory": {
                                                                "type": "string"
                                                            },
                                                            "memoryOverhead": {
                                                                "type": "string"
                                                            },
                                                            "nodeSelector": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "type": "object"
                                                            },
                                                            "schedulerName": {
                                                                "type": "string"
                                                            },
                                                            "secrets": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        },
                                                                        "secretType": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "path",
                                                                        "secretType"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "securityContext": {
                                                                "properties": {
                                                                    "fsGroup": {
                                                                        "format": "int64",
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsGroup": {
                                                                        "format": "int64",
                                                                        "type": "integer"
                                                                    },
                                                                    "runAsNonRoot": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "runAsUser": {
                                                                        "format": "int64",
                                                                        "type": "integer"
                                                                    },
                                                                    "seLinuxOptions": {
                                                                        "properties": {
                                                                            "level": {
                                                                                "type": "string"
                                                                            },
                                                                            "role": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "user": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "supplementalGroups": {
                                                                        "items": {
                                                                            "format": "int64",
                                                                            "type": "integer"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "sysctls": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "value"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "sidecars": {
                                                                "items": {
                                                                    "properties": {
                                                                        "args": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "command": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "env": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "valueFrom": {
                                                                                        "properties": {
                                                                                            "configMapKeyRef": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "optional": {
                                                                                                        "type": "boolean"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "fieldRef": {
                                                                                                "properties": {
                                                                                                    "apiVersion": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "fieldPath": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "fieldPath"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "resourceFieldRef": {
                                                                                                "properties": {
                                                                                                    "containerName": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "divisor": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "resource": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "resource"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "secretKeyRef": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "optional": {
                                                                                                        "type": "boolean"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "envFrom": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "configMapRef": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "optional": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "prefix": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "secretRef": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "optional": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "image": {
                                                                            "type": "string"
                                                                        },
                                                                        "imagePullPolicy": {
                                                                            "type": "string"
                                                                        },
                                                                        "lifecycle": {
                                                                            "properties": {
                                                                                "postStart": {
                                                                                    "properties": {
                                                                                        "exec": {
                                                                                            "properties": {
                                                                                                "command": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "httpGet": {
                                                                                            "properties": {
                                                                                                "host": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "httpHeaders": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "name": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "name",
                                                                                                            "value"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "path": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "port": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "scheme": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "port"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "tcpSocket": {
                                                                                            "properties": {
                                                                                                "host": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "port": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "port"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "preStop": {
                                                                                    "properties": {
                                                                                        "exec": {
                                                                                            "properties": {
                                                                                                "command": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "httpGet": {
                                                                                            "properties": {
                                                                                                "host": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "httpHeaders": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "name": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "name",
                                                                                                            "value"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "path": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "port": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "scheme": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "port"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "tcpSocket": {
                                                                                            "properties": {
                                                                                                "host": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "port": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "integer"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "port"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "livenessProbe": {
                                                                            "properties": {
                                                                                "exec": {
                                                                                    "properties": {
                                                                                        "command": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "failureThreshold": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "httpGet": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "httpHeaders": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "name",
                                                                                                    "value"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "path": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "scheme": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "initialDelaySeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "periodSeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "successThreshold": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "tcpSocket": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "timeoutSeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "ports": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "containerPort": {
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "hostIP": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "hostPort": {
                                                                                        "format": "int32",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "protocol": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "containerPort"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "readinessProbe": {
                                                                            "properties": {
                                                                                "exec": {
                                                                                    "properties": {
                                                                                        "command": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "failureThreshold": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "httpGet": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "httpHeaders": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "name",
                                                                                                    "value"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "path": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "scheme": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "initialDelaySeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "periodSeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "successThreshold": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                },
                                                                                "tcpSocket": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "timeoutSeconds": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "resources": {
                                                                            "properties": {
                                                                                "limits": {
                                                                                    "additionalProperties": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "requests": {
                                                                                    "additionalProperties": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "securityContext": {
                                                                            "properties": {
                                                                                "allowPrivilegeEscalation": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "capabilities": {
                                                                                    "properties": {
                                                                                        "add": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "drop": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "privileged": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "procMount": {
                                                                                    "type": "string"
                                                                                },
                                                                                "readOnlyRootFilesystem": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "runAsGroup": {
                                                                                    "format": "int64",
                                                                                    "type": "integer"
                                                                                },
                                                                                "runAsNonRoot": {
                                                                                    "type": "boolean"
                                                                                },
                                                                                "runAsUser": {
                                                                                    "format": "int64",
                                                                                    "type": "integer"
                                                                                },
                                                                                "seLinuxOptions": {
                                                                                    "properties": {
                                                                                        "level": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "role": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "user": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "stdin": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "stdinOnce": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "terminationMessagePath": {
                                                                            "type": "string"
                                                                        },
                                                                        "terminationMessagePolicy": {
                                                                            "type": "string"
                                                                        },
                                                                        "tty": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "volumeDevices": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "devicePath": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "devicePath",
                                                                                    "name"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "volumeMounts": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "mountPath": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "mountPropagation": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "readOnly": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "subPath": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "mountPath",
                                                                                    "name"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "workingDir": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "tolerations": {
                                                                "items": {
                                                                    "properties": {
                                                                        "effect": {
                                                                            "type": "string"
                                                                        },
                                                                        "key": {
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "type": "string"
                                                                        },
                                                                        "tolerationSeconds": {
                                                                            "format": "int64",
                                                                            "type": "integer"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "volumeMounts": {
                                                                "items": {
                                                                    "properties": {
                                                                        "mountPath": {
                                                                            "type": "string"
                                                                        },
                                                                        "mountPropagation": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "readOnly": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "subPath": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "mountPath",
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "failureRetries": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "hadoopConf": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hadoopConfigMap": {
                                                        "type": "string"
                                                    },
                                                    "image": {
                                                        "type": "string"
                                                    },
                                                    "imagePullPolicy": {
                                                        "type": "string"
                                                    },
                                                    "imagePullSecrets": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "initContainerImage": {
                                                        "type": "string"
                                                    },
                                                    "mainApplicationFile": {
                                                        "type": "string"
                                                    },
                                                    "mainClass": {
                                                        "type": "string"
                                                    },
                                                    "memoryOverheadFactor": {
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "enum": [
                                                            "cluster",
                                                            "client"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "monitoring": {
                                                        "properties": {
                                                            "exposeDriverMetrics": {
                                                                "type": "boolean"
                                                            },
                                                            "exposeExecutorMetrics": {
                                                                "type": "boolean"
                                                            },
                                                            "metricsProperties": {
                                                                "type": "string"
                                                            },
                                                            "prometheus": {
                                                                "properties": {
                                                                    "configFile": {
                                                                        "type": "string"
                                                                    },
                                                                    "configuration": {
                                                                        "type": "string"
                                                                    },
                                                                    "jmxExporterJar": {
                                                                        "type": "string"
                                                                    },
                                                                    "port": {
                                                                        "format": "int32",
                                                                        "maximum": 49151,
                                                                        "minimum": 1024,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "jmxExporterJar"
                                                                ],
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "exposeDriverMetrics",
                                                            "exposeExecutorMetrics"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "nodeSelector": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "pythonVersion": {
                                                        "enum": [
                                                            "2",
                                                            "3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "restartPolicy": {
                                                        "properties": {
                                                            "onFailureRetries": {
                                                                "format": "int32",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "onFailureRetryInterval": {
                                                                "format": "int64",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "onSubmissionFailureRetries": {
                                                                "format": "int32",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "onSubmissionFailureRetryInterval": {
                                                                "format": "int64",
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            },
                                                            "type": {
                                                                "enum": [
                                                                    "Never",
                                                                    "Always",
                                                                    "OnFailure"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "retryInterval": {
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "sparkConf": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "sparkConfigMap": {
                                                        "type": "string"
                                                    },
                                                    "sparkVersion": {
                                                        "type": "string"
                                                    },
                                                    "timeToLiveSeconds": {
                                                        "format": "int64",
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            "Java",
                                                            "Python",
                                                            "Scala",
                                                            "R"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "executor",
                                                    "mainApplicationFile",
                                                    "sparkVersion",
                                                    "type"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "required": [
                                            "schedule",
                                            "template"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "metadata",
                                    "spec"
                                ]
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "ScheduledSparkApplication",
                    "listKind": "ScheduledSparkApplicationList",
                    "plural": "scheduledsparkapplications",
                    "shortNames": [
                        "scheduledsparkapp"
                    ],
                    "singular": "scheduledsparkapplication"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:26Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:26Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:26Z",
                        "message": "protected groups must have approval annotation \"api-approved.kubernetes.io\", see https://github.com/kubernetes/enhancements/pull/1111",
                        "reason": "MissingAnnotation",
                        "status": "False",
                        "type": "KubernetesAPIApprovalPolicyConformant"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:27Z",
                        "message": "[spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[template].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root]",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    }
                ],
                "storedVersions": [
                    "v1beta2"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "helm.sh/hook-delete-policy": "before-hook-creation",
                    "meta.helm.sh/release-name": "spark-operator",
                    "meta.helm.sh/release-namespace": "cloudflow"
                },
                "creationTimestamp": "2020-10-26T16:08:26Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "sparkoperator"
                },
                "name": "sparkapplications.sparkoperator.k8s.io",
                "resourceVersion": "39834",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/sparkapplications.sparkoperator.k8s.io",
                "uid": "b8c9e1ac-f5af-4890-84de-37f8b03da1f7"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "sparkoperator.k8s.io",
                "names": {
                    "kind": "SparkApplication",
                    "listKind": "SparkApplicationList",
                    "plural": "sparkapplications",
                    "shortNames": [
                        "sparkapp"
                    ],
                    "singular": "sparkapplication"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1beta2",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "apiVersion": {
                                        "type": "string"
                                    },
                                    "kind": {
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    },
                                    "spec": {
                                        "properties": {
                                            "arguments": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "batchScheduler": {
                                                "type": "string"
                                            },
                                            "batchSchedulerOptions": {
                                                "properties": {
                                                    "priorityClassName": {
                                                        "type": "string"
                                                    },
                                                    "queue": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "deps": {
                                                "properties": {
                                                    "downloadTimeout": {
                                                        "format": "int32",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "files": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "filesDownloadDir": {
                                                        "type": "string"
                                                    },
                                                    "jars": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "jarsDownloadDir": {
                                                        "type": "string"
                                                    },
                                                    "maxSimultaneousDownloads": {
                                                        "format": "int32",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "pyFiles": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "driver": {
                                                "properties": {
                                                    "affinity": {
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "preference",
                                                                                "weight"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "nodeSelectorTerms"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "topologyKey"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "podAffinityTerm",
                                                                                "weight"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "additionalProperties": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "topologyKey"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "topologyKey"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "podAffinityTerm",
                                                                                "weight"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "additionalProperties": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "topologyKey"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "annotations": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "configMaps": {
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "path"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "coreLimit": {
                                                        "type": "string"
                                                    },
                                                    "cores": {
                                                        "format": "int32",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "dnsConfig": {
                                                        "properties": {
                                                            "nameservers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "options": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "searches": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "envSecretKeyRefs": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "envVars": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "gpu": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "quantity": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "quantity"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostNetwork": {
                                                        "type": "boolean"
                                                    },
                                                    "image": {
                                                        "type": "string"
                                                    },
                                                    "javaOptions": {
                                                        "type": "string"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "memory": {
                                                        "type": "string"
                                                    },
                                                    "memoryOverhead": {
                                                        "type": "string"
                                                    },
                                                    "nodeSelector": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "podName": {
                                                        "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                                                        "type": "string"
                                                    },
                                                    "schedulerName": {
                                                        "type": "string"
                                                    },
                                                    "secrets": {
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "path",
                                                                "secretType"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "securityContext": {
                                                        "properties": {
                                                            "fsGroup": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            },
                                                            "runAsGroup": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            },
                                                            "runAsNonRoot": {
                                                                "type": "boolean"
                                                            },
                                                            "runAsUser": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            },
                                                            "seLinuxOptions": {
                                                                "properties": {
                                                                    "level": {
                                                                        "type": "string"
                                                                    },
                                                                    "role": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "user": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "supplementalGroups": {
                                                                "items": {
                                                                    "format": "int64",
                                                                    "type": "integer"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "sysctls": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "value"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "serviceAccount": {
                                                        "type": "string"
                                                    },
                                                    "sidecars": {
                                                        "items": {
                                                            "properties": {
                                                                "args": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "command": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "env": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "value": {
                                                                                "type": "string"
                                                                            },
                                                                            "valueFrom": {
                                                                                "properties": {
                                                                                    "configMapKeyRef": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "optional": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "fieldRef": {
                                                                                        "properties": {
                                                                                            "apiVersion": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "fieldPath": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "fieldPath"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "resourceFieldRef": {
                                                                                        "properties": {
                                                                                            "containerName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "divisor": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "resource": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "resource"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "secretKeyRef": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "optional": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "envFrom": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "configMapRef": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "optional": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "prefix": {
                                                                                "type": "string"
                                                                            },
                                                                            "secretRef": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "optional": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "image": {
                                                                    "type": "string"
                                                                },
                                                                "imagePullPolicy": {
                                                                    "type": "string"
                                                                },
                                                                "lifecycle": {
                                                                    "properties": {
                                                                        "postStart": {
                                                                            "properties": {
                                                                                "exec": {
                                                                                    "properties": {
                                                                                        "command": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "httpGet": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "httpHeaders": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "name",
                                                                                                    "value"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "path": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "scheme": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "tcpSocket": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "preStop": {
                                                                            "properties": {
                                                                                "exec": {
                                                                                    "properties": {
                                                                                        "command": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "httpGet": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "httpHeaders": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "name",
                                                                                                    "value"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "path": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "scheme": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "tcpSocket": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "livenessProbe": {
                                                                    "properties": {
                                                                        "exec": {
                                                                            "properties": {
                                                                                "command": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "failureThreshold": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "httpGet": {
                                                                            "properties": {
                                                                                "host": {
                                                                                    "type": "string"
                                                                                },
                                                                                "httpHeaders": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "name",
                                                                                            "value"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "path": {
                                                                                    "type": "string"
                                                                                },
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "string"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "scheme": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "initialDelaySeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "periodSeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "successThreshold": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "tcpSocket": {
                                                                            "properties": {
                                                                                "host": {
                                                                                    "type": "string"
                                                                                },
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "string"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "timeoutSeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "ports": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "containerPort": {
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "hostIP": {
                                                                                "type": "string"
                                                                            },
                                                                            "hostPort": {
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "containerPort"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "readinessProbe": {
                                                                    "properties": {
                                                                        "exec": {
                                                                            "properties": {
                                                                                "command": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "failureThreshold": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "httpGet": {
                                                                            "properties": {
                                                                                "host": {
                                                                                    "type": "string"
                                                                                },
                                                                                "httpHeaders": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "name",
                                                                                            "value"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "path": {
                                                                                    "type": "string"
                                                                                },
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "string"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "scheme": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "initialDelaySeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "periodSeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "successThreshold": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "tcpSocket": {
                                                                            "properties": {
                                                                                "host": {
                                                                                    "type": "string"
                                                                                },
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "string"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "timeoutSeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "resources": {
                                                                    "properties": {
                                                                        "limits": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "requests": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "securityContext": {
                                                                    "properties": {
                                                                        "allowPrivilegeEscalation": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "capabilities": {
                                                                            "properties": {
                                                                                "add": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "drop": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "privileged": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "procMount": {
                                                                            "type": "string"
                                                                        },
                                                                        "readOnlyRootFilesystem": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "runAsGroup": {
                                                                            "format": "int64",
                                                                            "type": "integer"
                                                                        },
                                                                        "runAsNonRoot": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "runAsUser": {
                                                                            "format": "int64",
                                                                            "type": "integer"
                                                                        },
                                                                        "seLinuxOptions": {
                                                                            "properties": {
                                                                                "level": {
                                                                                    "type": "string"
                                                                                },
                                                                                "role": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": {
                                                                                    "type": "string"
                                                                                },
                                                                                "user": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "stdin": {
                                                                    "type": "boolean"
                                                                },
                                                                "stdinOnce": {
                                                                    "type": "boolean"
                                                                },
                                                                "terminationMessagePath": {
                                                                    "type": "string"
                                                                },
                                                                "terminationMessagePolicy": {
                                                                    "type": "string"
                                                                },
                                                                "tty": {
                                                                    "type": "boolean"
                                                                },
                                                                "volumeDevices": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "devicePath": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "devicePath",
                                                                            "name"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "volumeMounts": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "mountPath": {
                                                                                "type": "string"
                                                                            },
                                                                            "mountPropagation": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnly": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "subPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "mountPath",
                                                                            "name"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "workingDir": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tolerations": {
                                                        "items": {
                                                            "properties": {
                                                                "effect": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "type": "string"
                                                                },
                                                                "tolerationSeconds": {
                                                                    "format": "int64",
                                                                    "type": "integer"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "volumeMounts": {
                                                        "items": {
                                                            "properties": {
                                                                "mountPath": {
                                                                    "type": "string"
                                                                },
                                                                "mountPropagation": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "readOnly": {
                                                                    "type": "boolean"
                                                                },
                                                                "subPath": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "mountPath",
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "executor": {
                                                "properties": {
                                                    "affinity": {
                                                        "properties": {
                                                            "nodeAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "preference": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "preference",
                                                                                "weight"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "properties": {
                                                                            "nodeSelectorTerms": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchFields": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "nodeSelectorTerms"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "topologyKey"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "podAffinityTerm",
                                                                                "weight"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "additionalProperties": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "topologyKey"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "podAntiAffinity": {
                                                                "properties": {
                                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "podAffinityTerm": {
                                                                                    "properties": {
                                                                                        "labelSelector": {
                                                                                            "properties": {
                                                                                                "matchExpressions": {
                                                                                                    "items": {
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "operator": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "values": {
                                                                                                                "items": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "type": "array"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "key",
                                                                                                            "operator"
                                                                                                        ],
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "namespaces": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "topologyKey": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "topologyKey"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "weight": {
                                                                                    "format": "int32",
                                                                                    "type": "integer"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "podAffinityTerm",
                                                                                "weight"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "labelSelector": {
                                                                                    "properties": {
                                                                                        "matchExpressions": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "values": {
                                                                                                        "items": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "key",
                                                                                                    "operator"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "matchLabels": {
                                                                                            "additionalProperties": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "object"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "namespaces": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "topologyKey": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "topologyKey"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "annotations": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "configMaps": {
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "path"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "coreLimit": {
                                                        "type": "string"
                                                    },
                                                    "coreRequest": {
                                                        "type": "string"
                                                    },
                                                    "cores": {
                                                        "format": "int32",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "dnsConfig": {
                                                        "properties": {
                                                            "nameservers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "options": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "searches": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "envSecretKeyRefs": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "envVars": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "gpu": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "quantity": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "quantity"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "hostNetwork": {
                                                        "type": "boolean"
                                                    },
                                                    "image": {
                                                        "type": "string"
                                                    },
                                                    "instances": {
                                                        "format": "int32",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "javaOptions": {
                                                        "type": "string"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "memory": {
                                                        "type": "string"
                                                    },
                                                    "memoryOverhead": {
                                                        "type": "string"
                                                    },
                                                    "nodeSelector": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "schedulerName": {
                                                        "type": "string"
                                                    },
                                                    "secrets": {
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "secretType": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "path",
                                                                "secretType"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "securityContext": {
                                                        "properties": {
                                                            "fsGroup": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            },
                                                            "runAsGroup": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            },
                                                            "runAsNonRoot": {
                                                                "type": "boolean"
                                                            },
                                                            "runAsUser": {
                                                                "format": "int64",
                                                                "type": "integer"
                                                            },
                                                            "seLinuxOptions": {
                                                                "properties": {
                                                                    "level": {
                                                                        "type": "string"
                                                                    },
                                                                    "role": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "user": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "supplementalGroups": {
                                                                "items": {
                                                                    "format": "int64",
                                                                    "type": "integer"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "sysctls": {
                                                                "items": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "value": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "value"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "sidecars": {
                                                        "items": {
                                                            "properties": {
                                                                "args": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "command": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "env": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "value": {
                                                                                "type": "string"
                                                                            },
                                                                            "valueFrom": {
                                                                                "properties": {
                                                                                    "configMapKeyRef": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "optional": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "fieldRef": {
                                                                                        "properties": {
                                                                                            "apiVersion": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "fieldPath": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "fieldPath"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "resourceFieldRef": {
                                                                                        "properties": {
                                                                                            "containerName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "divisor": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "resource": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "resource"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "secretKeyRef": {
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "optional": {
                                                                                                "type": "boolean"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "key"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "envFrom": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "configMapRef": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "optional": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "prefix": {
                                                                                "type": "string"
                                                                            },
                                                                            "secretRef": {
                                                                                "properties": {
                                                                                    "name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "optional": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "image": {
                                                                    "type": "string"
                                                                },
                                                                "imagePullPolicy": {
                                                                    "type": "string"
                                                                },
                                                                "lifecycle": {
                                                                    "properties": {
                                                                        "postStart": {
                                                                            "properties": {
                                                                                "exec": {
                                                                                    "properties": {
                                                                                        "command": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "httpGet": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "httpHeaders": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "name",
                                                                                                    "value"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "path": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "scheme": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "tcpSocket": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "preStop": {
                                                                            "properties": {
                                                                                "exec": {
                                                                                    "properties": {
                                                                                        "command": {
                                                                                            "items": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": "array"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "httpGet": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "httpHeaders": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "name": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "name",
                                                                                                    "value"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "path": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        "scheme": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "tcpSocket": {
                                                                                    "properties": {
                                                                                        "host": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "port": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                {
                                                                                                    "type": "integer"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "port"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "livenessProbe": {
                                                                    "properties": {
                                                                        "exec": {
                                                                            "properties": {
                                                                                "command": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "failureThreshold": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "httpGet": {
                                                                            "properties": {
                                                                                "host": {
                                                                                    "type": "string"
                                                                                },
                                                                                "httpHeaders": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "name",
                                                                                            "value"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "path": {
                                                                                    "type": "string"
                                                                                },
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "string"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "scheme": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "initialDelaySeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "periodSeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "successThreshold": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "tcpSocket": {
                                                                            "properties": {
                                                                                "host": {
                                                                                    "type": "string"
                                                                                },
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "string"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "timeoutSeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "ports": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "containerPort": {
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "hostIP": {
                                                                                "type": "string"
                                                                            },
                                                                            "hostPort": {
                                                                                "format": "int32",
                                                                                "type": "integer"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "protocol": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "containerPort"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "readinessProbe": {
                                                                    "properties": {
                                                                        "exec": {
                                                                            "properties": {
                                                                                "command": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "failureThreshold": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "httpGet": {
                                                                            "properties": {
                                                                                "host": {
                                                                                    "type": "string"
                                                                                },
                                                                                "httpHeaders": {
                                                                                    "items": {
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "name",
                                                                                            "value"
                                                                                        ],
                                                                                        "type": "object"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "path": {
                                                                                    "type": "string"
                                                                                },
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "string"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "scheme": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "initialDelaySeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "periodSeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "successThreshold": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "tcpSocket": {
                                                                            "properties": {
                                                                                "host": {
                                                                                    "type": "string"
                                                                                },
                                                                                "port": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "string"
                                                                                        },
                                                                                        {
                                                                                            "type": "integer"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "timeoutSeconds": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "resources": {
                                                                    "properties": {
                                                                        "limits": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "requests": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "securityContext": {
                                                                    "properties": {
                                                                        "allowPrivilegeEscalation": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "capabilities": {
                                                                            "properties": {
                                                                                "add": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                },
                                                                                "drop": {
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "privileged": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "procMount": {
                                                                            "type": "string"
                                                                        },
                                                                        "readOnlyRootFilesystem": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "runAsGroup": {
                                                                            "format": "int64",
                                                                            "type": "integer"
                                                                        },
                                                                        "runAsNonRoot": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "runAsUser": {
                                                                            "format": "int64",
                                                                            "type": "integer"
                                                                        },
                                                                        "seLinuxOptions": {
                                                                            "properties": {
                                                                                "level": {
                                                                                    "type": "string"
                                                                                },
                                                                                "role": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": {
                                                                                    "type": "string"
                                                                                },
                                                                                "user": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "stdin": {
                                                                    "type": "boolean"
                                                                },
                                                                "stdinOnce": {
                                                                    "type": "boolean"
                                                                },
                                                                "terminationMessagePath": {
                                                                    "type": "string"
                                                                },
                                                                "terminationMessagePolicy": {
                                                                    "type": "string"
                                                                },
                                                                "tty": {
                                                                    "type": "boolean"
                                                                },
                                                                "volumeDevices": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "devicePath": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "devicePath",
                                                                            "name"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "volumeMounts": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "mountPath": {
                                                                                "type": "string"
                                                                            },
                                                                            "mountPropagation": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "readOnly": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "subPath": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "mountPath",
                                                                            "name"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "workingDir": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tolerations": {
                                                        "items": {
                                                            "properties": {
                                                                "effect": {
                                                                    "type": "string"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "operator": {
                                                                    "type": "string"
                                                                },
                                                                "tolerationSeconds": {
                                                                    "format": "int64",
                                                                    "type": "integer"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "volumeMounts": {
                                                        "items": {
                                                            "properties": {
                                                                "mountPath": {
                                                                    "type": "string"
                                                                },
                                                                "mountPropagation": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "readOnly": {
                                                                    "type": "boolean"
                                                                },
                                                                "subPath": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "mountPath",
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "failureRetries": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "hadoopConf": {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            "hadoopConfigMap": {
                                                "type": "string"
                                            },
                                            "image": {
                                                "type": "string"
                                            },
                                            "imagePullPolicy": {
                                                "type": "string"
                                            },
                                            "imagePullSecrets": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "initContainerImage": {
                                                "type": "string"
                                            },
                                            "mainApplicationFile": {
                                                "type": "string"
                                            },
                                            "mainClass": {
                                                "type": "string"
                                            },
                                            "memoryOverheadFactor": {
                                                "type": "string"
                                            },
                                            "mode": {
                                                "enum": [
                                                    "cluster",
                                                    "client"
                                                ],
                                                "type": "string"
                                            },
                                            "monitoring": {
                                                "properties": {
                                                    "exposeDriverMetrics": {
                                                        "type": "boolean"
                                                    },
                                                    "exposeExecutorMetrics": {
                                                        "type": "boolean"
                                                    },
                                                    "metricsProperties": {
                                                        "type": "string"
                                                    },
                                                    "prometheus": {
                                                        "properties": {
                                                            "configFile": {
                                                                "type": "string"
                                                            },
                                                            "configuration": {
                                                                "type": "string"
                                                            },
                                                            "jmxExporterJar": {
                                                                "type": "string"
                                                            },
                                                            "port": {
                                                                "format": "int32",
                                                                "maximum": 49151,
                                                                "minimum": 1024,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "jmxExporterJar"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "exposeDriverMetrics",
                                                    "exposeExecutorMetrics"
                                                ],
                                                "type": "object"
                                            },
                                            "nodeSelector": {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            "pythonVersion": {
                                                "enum": [
                                                    "2",
                                                    "3"
                                                ],
                                                "type": "string"
                                            },
                                            "restartPolicy": {
                                                "properties": {
                                                    "onFailureRetries": {
                                                        "format": "int32",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "onFailureRetryInterval": {
                                                        "format": "int64",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "onSubmissionFailureRetries": {
                                                        "format": "int32",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "onSubmissionFailureRetryInterval": {
                                                        "format": "int64",
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "enum": [
                                                            "Never",
                                                            "Always",
                                                            "OnFailure"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "retryInterval": {
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "sparkConf": {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            "sparkConfigMap": {
                                                "type": "string"
                                            },
                                            "sparkVersion": {
                                                "type": "string"
                                            },
                                            "timeToLiveSeconds": {
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "type": {
                                                "enum": [
                                                    "Java",
                                                    "Python",
                                                    "Scala",
                                                    "R"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "driver",
                                            "executor",
                                            "mainApplicationFile",
                                            "sparkVersion",
                                            "type"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "metadata",
                                    "spec"
                                ]
                            }
                        },
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "SparkApplication",
                    "listKind": "SparkApplicationList",
                    "plural": "sparkapplications",
                    "shortNames": [
                        "sparkapp"
                    ],
                    "singular": "sparkapplication"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T16:08:26Z",
                        "message": "protected groups must have approval annotation \"api-approved.kubernetes.io\", see https://github.com/kubernetes/enhancements/pull/1111",
                        "reason": "MissingAnnotation",
                        "status": "False",
                        "type": "KubernetesAPIApprovalPolicyConformant"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:26Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:27Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T16:08:27Z",
                        "message": "[spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[driver].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[postStart].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[lifecycle].properties[preStop].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[livenessProbe].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[httpGet].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].anyOf[0].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].anyOf[1].type: Forbidden: must be empty to be structural, spec.validation.openAPIV3Schema.properties[spec].properties[executor].properties[sidecars].items.properties[readinessProbe].properties[tcpSocket].properties[port].type: Required value: must not be empty for specified object fields, spec.validation.openAPIV3Schema.type: Required value: must not be empty at the root]",
                        "reason": "Violations",
                        "status": "True",
                        "type": "NonStructuralSchema"
                    }
                ],
                "storedVersions": [
                    "v1beta2"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "components.gke.io/component-version": "storageversionmigrator-crd-0.0.1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"components.gke.io/component-version\":\"storageversionmigrator-crd-0.0.1\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"storagestates.migration.k8s.io\"},\"spec\":{\"group\":\"migration.k8s.io\",\"names\":{\"kind\":\"StorageState\",\"listKind\":\"StorageStateList\",\"plural\":\"storagestates\",\"singular\":\"storagestate\"},\"scope\":\"Cluster\",\"subresources\":{\"status\":{}},\"version\":\"v1alpha1\",\"versions\":[{\"name\":\"v1alpha1\",\"served\":true,\"storage\":true}]}}\n"
                },
                "creationTimestamp": "2020-10-26T14:02:46Z",
                "generation": 1,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile"
                },
                "name": "storagestates.migration.k8s.io",
                "resourceVersion": "460",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/storagestates.migration.k8s.io",
                "uid": "50ed1eaa-6d25-4177-8dfd-c84fd902e482"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "migration.k8s.io",
                "names": {
                    "kind": "StorageState",
                    "listKind": "StorageStateList",
                    "plural": "storagestates",
                    "singular": "storagestate"
                },
                "preserveUnknownFields": true,
                "scope": "Cluster",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "StorageState",
                    "listKind": "StorageStateList",
                    "plural": "storagestates",
                    "singular": "storagestate"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T14:02:46Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:46Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:46Z",
                        "message": "protected groups must have approval annotation \"api-approved.kubernetes.io\", see https://github.com/kubernetes/enhancements/pull/1111",
                        "reason": "MissingAnnotation",
                        "status": "False",
                        "type": "KubernetesAPIApprovalPolicyConformant"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "components.gke.io/component-version": "storageversionmigrator-crd-0.0.1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"components.gke.io/component-version\":\"storageversionmigrator-crd-0.0.1\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"storageversionmigrations.migration.k8s.io\"},\"spec\":{\"group\":\"migration.k8s.io\",\"names\":{\"kind\":\"StorageVersionMigration\",\"listKind\":\"StorageVersionMigrationList\",\"plural\":\"storageversionmigrations\",\"singular\":\"storageversionmigration\"},\"scope\":\"Cluster\",\"subresources\":{\"status\":{}},\"version\":\"v1alpha1\",\"versions\":[{\"name\":\"v1alpha1\",\"served\":true,\"storage\":true}]}}\n"
                },
                "creationTimestamp": "2020-10-26T14:02:46Z",
                "generation": 1,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile"
                },
                "name": "storageversionmigrations.migration.k8s.io",
                "resourceVersion": "456",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/storageversionmigrations.migration.k8s.io",
                "uid": "49db06a2-f4d0-4b96-b8b1-7cb562cab610"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "migration.k8s.io",
                "names": {
                    "kind": "StorageVersionMigration",
                    "listKind": "StorageVersionMigrationList",
                    "plural": "storageversionmigrations",
                    "singular": "storageversionmigration"
                },
                "preserveUnknownFields": true,
                "scope": "Cluster",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "served": true,
                        "storage": true,
                        "subresources": {
                            "status": {}
                        }
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "StorageVersionMigration",
                    "listKind": "StorageVersionMigrationList",
                    "plural": "storageversionmigrations",
                    "singular": "storageversionmigration"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T14:02:46Z",
                        "message": "protected groups must have approval annotation \"api-approved.kubernetes.io\", see https://github.com/kubernetes/enhancements/pull/1111",
                        "reason": "MissingAnnotation",
                        "status": "False",
                        "type": "KubernetesAPIApprovalPolicyConformant"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:46Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:46Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        },
        {
            "apiVersion": "apiextensions.k8s.io/v1",
            "kind": "CustomResourceDefinition",
            "metadata": {
                "annotations": {
                    "components.gke.io/component-name": "updateinfo-crd",
                    "components.gke.io/component-version": "1.0.1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1beta1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"components.gke.io/component-name\":\"updateinfo-crd\",\"components.gke.io/component-version\":\"1.0.1\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"updateinfos.nodemanagement.gke.io\"},\"spec\":{\"group\":\"nodemanagement.gke.io\",\"names\":{\"kind\":\"UpdateInfo\",\"plural\":\"updateinfos\",\"shortNames\":[\"updinf\"],\"singular\":\"updateinfo\"},\"scope\":\"Namespaced\",\"validation\":{\"openAPIV3Schema\":{\"properties\":{\"spec\":{\"properties\":{\"ValidUntil\":{\"type\":\"date\"},\"surgeNode\":{\"type\":\"string\"},\"targetNode\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"versions\":[{\"name\":\"v1alpha1\",\"served\":true,\"storage\":true}]}}\n"
                },
                "creationTimestamp": "2020-10-26T14:02:46Z",
                "generation": 1,
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile"
                },
                "name": "updateinfos.nodemanagement.gke.io",
                "resourceVersion": "480",
                "selfLink": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/updateinfos.nodemanagement.gke.io",
                "uid": "20d0f0d9-df66-474a-9693-8cf4cf03f856"
            },
            "spec": {
                "conversion": {
                    "strategy": "None"
                },
                "group": "nodemanagement.gke.io",
                "names": {
                    "kind": "UpdateInfo",
                    "listKind": "UpdateInfoList",
                    "plural": "updateinfos",
                    "shortNames": [
                        "updinf"
                    ],
                    "singular": "updateinfo"
                },
                "preserveUnknownFields": true,
                "scope": "Namespaced",
                "versions": [
                    {
                        "name": "v1alpha1",
                        "schema": {
                            "openAPIV3Schema": {
                                "properties": {
                                    "spec": {
                                        "properties": {
                                            "ValidUntil": {
                                                "type": "date"
                                            },
                                            "surgeNode": {
                                                "type": "string"
                                            },
                                            "targetNode": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "served": true,
                        "storage": true
                    }
                ]
            },
            "status": {
                "acceptedNames": {
                    "kind": "UpdateInfo",
                    "listKind": "UpdateInfoList",
                    "plural": "updateinfos",
                    "shortNames": [
                        "updinf"
                    ],
                    "singular": "updateinfo"
                },
                "conditions": [
                    {
                        "lastTransitionTime": "2020-10-26T14:02:46Z",
                        "message": "no conflicts found",
                        "reason": "NoConflicts",
                        "status": "True",
                        "type": "NamesAccepted"
                    },
                    {
                        "lastTransitionTime": "2020-10-26T14:02:46Z",
                        "message": "the initial names have been accepted",
                        "reason": "InitialNamesAccepted",
                        "status": "True",
                        "type": "Established"
                    }
                ],
                "storedVersions": [
                    "v1alpha1"
                ]
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}
